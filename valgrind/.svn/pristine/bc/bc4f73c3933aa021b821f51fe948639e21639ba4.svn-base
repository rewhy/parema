# Makefile.in generated by automake 1.14.1 from Makefile.am.
# memcheck/tests/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2013 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



# This file is used for tool tests, and also in perf/Makefile.am.

# This file should be included (directly or indirectly) by every
# Makefile.am that builds programs.  And also the top-level Makefile.am.

#----------------------------------------------------------------------------
# Global stuff
#----------------------------------------------------------------------------



am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/valgrind
pkgincludedir = $(includedir)/valgrind
pkglibdir = $(libdir)/valgrind
pkglibexecdir = $(libexecdir)/valgrind
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-unknown-linux-gnu
host_triplet = armv7-unknown-linux-gnu
DIST_COMMON = $(top_srcdir)/Makefile.tool-tests.am \
	$(top_srcdir)/Makefile.all.am $(srcdir)/Makefile.in \
	$(srcdir)/Makefile.am $(dist_noinst_SCRIPTS) \
	$(top_srcdir)/depcomp $(noinst_HEADERS)
#am__append_1 = -Wno-cast-align -Wno-self-assign \
#                  -Wno-tautological-compare

#am__append_2 = -Wl,-M,$(top_srcdir)/solaris/vgpreload-solaris.mapfile

# The Android toolchain includes all kinds of stdlib helpers present in
# bionic which is bad because we are not linking with it and the Android
# linker will panic.
am__append_3 = -nostdlib
#am__append_4 = -DVGA_SEC_=1  \
#		-DVGP_SEC_arm_linux=1


# Make sure that all test programs have threaded errno.
#am__append_5 = -D_REENTRANT
#am__append_6 = -Wno-format-extra-args \
#	-Wno-literal-range \
#	-Wno-tautological-constant-out-of-range-compare \
#	-Wno-self-assign -Wno-string-plus-int \
#	-Wno-uninitialized -Wno-unused-value # \
#	clang 3.0.0
#am__append_7 = -Wno-unused-private-field    # drd/tests/tsan_unittest.cpp

# Arch-specific tests.
#am__append_8 = x86
#am__append_9 = amd64
#am__append_10 = ppc32
#am__append_11 = ppc64
#am__append_12 = s390x

# OS-specific tests
am__append_13 = linux
#am__append_14 = darwin
#am__append_15 = solaris

# Platform-specific tests
#am__append_16 = x86-linux
#am__append_17 = amd64-linux
#am__append_18 = x86-solaris
#am__append_19 = amd64-solaris
check_PROGRAMS = accounting$(EXEEXT) addressable$(EXEEXT) \
	atomic_incs$(EXEEXT) badaddrvalue$(EXEEXT) badfree$(EXEEXT) \
	badjump$(EXEEXT) badjump2$(EXEEXT) badloop$(EXEEXT) \
	badpoll$(EXEEXT) badrw$(EXEEXT) big_blocks_freed_list$(EXEEXT) \
	brk2$(EXEEXT) buflen_check$(EXEEXT) bug155125$(EXEEXT) \
	bug287260$(EXEEXT) bug340392$(EXEEXT) calloc-overflow$(EXEEXT) \
	client-msg$(EXEEXT) clientperm$(EXEEXT) clireq_nofill$(EXEEXT) \
	clo_redzone$(EXEEXT) cond_ld_st$(EXEEXT) \
	descr_belowsp$(EXEEXT) leak_cpp_interior$(EXEEXT) \
	custom_alloc$(EXEEXT) custom-overlap$(EXEEXT) \
	demangle$(EXEEXT) deep-backtrace$(EXEEXT) \
	describe-block$(EXEEXT) doublefree$(EXEEXT) \
	error_counts$(EXEEXT) errs1$(EXEEXT) exitprog$(EXEEXT) \
	execve1$(EXEEXT) execve2$(EXEEXT) erringfds$(EXEEXT) \
	err_disable1$(EXEEXT) err_disable2$(EXEEXT) \
	err_disable3$(EXEEXT) err_disable4$(EXEEXT) \
	err_disable_arange1$(EXEEXT) file_locking$(EXEEXT) \
	fprw$(EXEEXT) fwrite$(EXEEXT) inits$(EXEEXT) inline$(EXEEXT) \
	inlinfo$(EXEEXT) inltemplate$(EXEEXT) \
	holey_buffer_too_small$(EXEEXT) leak-0$(EXEEXT) \
	leak-cases$(EXEEXT) leak-cycle$(EXEEXT) leak-delta$(EXEEXT) \
	leak-pool$(EXEEXT) leak-tree$(EXEEXT) leak-segv-jmp$(EXEEXT) \
	long-supps$(EXEEXT) mallinfo$(EXEEXT) \
	malloc_free_fill$(EXEEXT) malloc_usable$(EXEEXT) \
	malloc1$(EXEEXT) malloc2$(EXEEXT) malloc3$(EXEEXT) \
	manuel1$(EXEEXT) manuel2$(EXEEXT) manuel3$(EXEEXT) \
	match-overrun$(EXEEXT) memalign_test$(EXEEXT) \
	memalign2$(EXEEXT) memcmptest$(EXEEXT) mempool$(EXEEXT) \
	mempool2$(EXEEXT) mmaptest$(EXEEXT) mismatches$(EXEEXT) \
	new_override$(EXEEXT) metadata$(EXEEXT) nanoleak_supp$(EXEEXT) \
	nanoleak2$(EXEEXT) new_nothrow$(EXEEXT) noisy_child$(EXEEXT) \
	null_socket$(EXEEXT) origin1-yes$(EXEEXT) \
	origin2-not-quite$(EXEEXT) origin3-no$(EXEEXT) \
	origin4-many$(EXEEXT) origin5-bz2$(EXEEXT) origin6-fp$(EXEEXT) \
	overlap$(EXEEXT) partiallydefinedeq$(EXEEXT) \
	partial_load$(EXEEXT) pdb-realloc$(EXEEXT) \
	pdb-realloc2$(EXEEXT) pipe$(EXEEXT) pointer-trace$(EXEEXT) \
	post-syscall$(EXEEXT) realloc1$(EXEEXT) realloc2$(EXEEXT) \
	realloc3$(EXEEXT) recursive-merge$(EXEEXT) \
	resvn_stack$(EXEEXT) sbfragment$(EXEEXT) sendmsg$(EXEEXT) \
	sh-mem$(EXEEXT) sh-mem-random$(EXEEXT) sigaltstack$(EXEEXT) \
	signal2$(EXEEXT) sigprocmask$(EXEEXT) static_malloc$(EXEEXT) \
	sigkill$(EXEEXT) strchr$(EXEEXT) str_tester$(EXEEXT) \
	supp_unknown$(EXEEXT) supp1$(EXEEXT) supp2$(EXEEXT) \
	suppfree$(EXEEXT) test-plo$(EXEEXT) trivialleak$(EXEEXT) \
	thread_alloca$(EXEEXT) undef_malloc_args$(EXEEXT) \
	unit_libcbase$(EXEEXT) unit_oset$(EXEEXT) varinfo1$(EXEEXT) \
	varinfo2$(EXEEXT) varinfo3$(EXEEXT) varinfo4$(EXEEXT) \
	varinfo5$(EXEEXT) varinfo5so.so$(EXEEXT) varinfo6$(EXEEXT) \
	varinforestrict$(EXEEXT) vcpu_fbench$(EXEEXT) \
	vcpu_fnfns$(EXEEXT) wcs$(EXEEXT) xml1$(EXEEXT) wrap1$(EXEEXT) \
	wrap2$(EXEEXT) wrap3$(EXEEXT) wrap4$(EXEEXT) wrap5$(EXEEXT) \
	wrap6$(EXEEXT) wrap7$(EXEEXT) wrap7so.so$(EXEEXT) \
	wrap8$(EXEEXT) writev1$(EXEEXT) $(am__EXEEXT_1) \
	$(am__EXEEXT_2) $(am__EXEEXT_3) $(am__EXEEXT_4) \
	$(am__EXEEXT_5)

# Sun Studio assembler fails on "IDENT too long"
am__append_20 = long_namespace_xml
am__append_21 = dw4
#am__append_22 = stpncpy
am__append_23 = threadname 
#am__append_24 = reach_thread_register
#am__append_25 = -D_XOPEN_SOURCE=500
#am__append_26 = -std=c99 -D__EXTENSIONS__
#am__append_27 = -D_XOPEN_SOURCE=500
subdir = memcheck/tests
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__EXEEXT_1 =  \
	long_namespace_xml$(EXEEXT)
am__EXEEXT_2 = dw4$(EXEEXT)
#am__EXEEXT_3 = stpncpy$(EXEEXT)
am__EXEEXT_4 = threadname$(EXEEXT)
#am__EXEEXT_5 =  \
#	reach_thread_register$(EXEEXT)
accounting_SOURCES = accounting.c
accounting_OBJECTS = accounting.$(OBJEXT)
accounting_LDADD = $(LDADD)
addressable_SOURCES = addressable.c
addressable_OBJECTS = addressable.$(OBJEXT)
addressable_LDADD = $(LDADD)
atomic_incs_SOURCES = atomic_incs.c
atomic_incs_OBJECTS = atomic_incs-atomic_incs.$(OBJEXT)
atomic_incs_LDADD = $(LDADD)
atomic_incs_LINK = $(CCLD) $(atomic_incs_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
badaddrvalue_SOURCES = badaddrvalue.c
badaddrvalue_OBJECTS = badaddrvalue.$(OBJEXT)
badaddrvalue_LDADD = $(LDADD)
badfree_SOURCES = badfree.c
badfree_OBJECTS = badfree.$(OBJEXT)
badfree_LDADD = $(LDADD)
badjump_SOURCES = badjump.c
badjump_OBJECTS = badjump.$(OBJEXT)
badjump_LDADD = $(LDADD)
badjump2_SOURCES = badjump2.c
badjump2_OBJECTS = badjump2.$(OBJEXT)
badjump2_LDADD = $(LDADD)
badloop_SOURCES = badloop.c
badloop_OBJECTS = badloop.$(OBJEXT)
badloop_LDADD = $(LDADD)
badpoll_SOURCES = badpoll.c
badpoll_OBJECTS = badpoll.$(OBJEXT)
badpoll_LDADD = $(LDADD)
badrw_SOURCES = badrw.c
badrw_OBJECTS = badrw.$(OBJEXT)
badrw_LDADD = $(LDADD)
big_blocks_freed_list_SOURCES = big_blocks_freed_list.c
big_blocks_freed_list_OBJECTS = big_blocks_freed_list.$(OBJEXT)
big_blocks_freed_list_LDADD = $(LDADD)
brk2_SOURCES = brk2.c
brk2_OBJECTS = brk2.$(OBJEXT)
brk2_LDADD = $(LDADD)
buflen_check_SOURCES = buflen_check.c
buflen_check_OBJECTS = buflen_check.$(OBJEXT)
buflen_check_DEPENDENCIES =
bug155125_SOURCES = bug155125.c
bug155125_OBJECTS = bug155125.$(OBJEXT)
bug155125_LDADD = $(LDADD)
bug287260_SOURCES = bug287260.c
bug287260_OBJECTS = bug287260.$(OBJEXT)
bug287260_LDADD = $(LDADD)
bug340392_SOURCES = bug340392.c
bug340392_OBJECTS = bug340392-bug340392.$(OBJEXT)
bug340392_LDADD = $(LDADD)
bug340392_LINK = $(CCLD) $(bug340392_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
calloc_overflow_SOURCES = calloc-overflow.c
calloc_overflow_OBJECTS = calloc-overflow.$(OBJEXT)
calloc_overflow_LDADD = $(LDADD)
client_msg_SOURCES = client-msg.c
client_msg_OBJECTS = client-msg.$(OBJEXT)
client_msg_LDADD = $(LDADD)
clientperm_SOURCES = clientperm.c
clientperm_OBJECTS = clientperm.$(OBJEXT)
clientperm_LDADD = $(LDADD)
clireq_nofill_SOURCES = clireq_nofill.c
clireq_nofill_OBJECTS = clireq_nofill.$(OBJEXT)
clireq_nofill_LDADD = $(LDADD)
clo_redzone_SOURCES = clo_redzone.c
clo_redzone_OBJECTS = clo_redzone.$(OBJEXT)
clo_redzone_LDADD = $(LDADD)
cond_ld_st_SOURCES = cond_ld_st.c
cond_ld_st_OBJECTS = cond_ld_st.$(OBJEXT)
cond_ld_st_LDADD = $(LDADD)
custom_overlap_SOURCES = custom-overlap.c
custom_overlap_OBJECTS = custom-overlap.$(OBJEXT)
custom_overlap_LDADD = $(LDADD)
custom_alloc_SOURCES = custom_alloc.c
custom_alloc_OBJECTS = custom_alloc.$(OBJEXT)
custom_alloc_LDADD = $(LDADD)
deep_backtrace_SOURCES = deep-backtrace.c
deep_backtrace_OBJECTS = deep-backtrace.$(OBJEXT)
deep_backtrace_LDADD = $(LDADD)
am_demangle_OBJECTS = demangle.$(OBJEXT)
demangle_OBJECTS = $(am_demangle_OBJECTS)
demangle_LDADD = $(LDADD)
descr_belowsp_SOURCES = descr_belowsp.c
descr_belowsp_OBJECTS = descr_belowsp.$(OBJEXT)
descr_belowsp_DEPENDENCIES =
describe_block_SOURCES = describe-block.c
describe_block_OBJECTS = describe-block.$(OBJEXT)
describe_block_LDADD = $(LDADD)
doublefree_SOURCES = doublefree.c
doublefree_OBJECTS = doublefree.$(OBJEXT)
doublefree_LDADD = $(LDADD)
dw4_SOURCES = dw4.c
dw4_OBJECTS = dw4-dw4.$(OBJEXT)
dw4_LDADD = $(LDADD)
dw4_LINK = $(CCLD) $(dw4_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o \
	$@
err_disable1_SOURCES = err_disable1.c
err_disable1_OBJECTS = err_disable1.$(OBJEXT)
err_disable1_LDADD = $(LDADD)
err_disable2_SOURCES = err_disable2.c
err_disable2_OBJECTS = err_disable2.$(OBJEXT)
err_disable2_LDADD = $(LDADD)
err_disable3_SOURCES = err_disable3.c
err_disable3_OBJECTS = err_disable3.$(OBJEXT)
err_disable3_DEPENDENCIES =
err_disable4_SOURCES = err_disable4.c
err_disable4_OBJECTS = err_disable4-err_disable4.$(OBJEXT)
err_disable4_DEPENDENCIES =
err_disable4_LINK = $(CCLD) $(err_disable4_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
err_disable_arange1_SOURCES = err_disable_arange1.c
err_disable_arange1_OBJECTS = err_disable_arange1.$(OBJEXT)
err_disable_arange1_LDADD = $(LDADD)
erringfds_SOURCES = erringfds.c
erringfds_OBJECTS = erringfds.$(OBJEXT)
erringfds_LDADD = $(LDADD)
error_counts_SOURCES = error_counts.c
error_counts_OBJECTS = error_counts-error_counts.$(OBJEXT)
error_counts_LDADD = $(LDADD)
error_counts_LINK = $(CCLD) $(error_counts_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
errs1_SOURCES = errs1.c
errs1_OBJECTS = errs1.$(OBJEXT)
errs1_LDADD = $(LDADD)
execve1_SOURCES = execve1.c
execve1_OBJECTS = execve1-execve1.$(OBJEXT)
execve1_LDADD = $(LDADD)
execve1_LINK = $(CCLD) $(execve1_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
execve2_SOURCES = execve2.c
execve2_OBJECTS = execve2-execve2.$(OBJEXT)
execve2_LDADD = $(LDADD)
execve2_LINK = $(CCLD) $(execve2_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
exitprog_SOURCES = exitprog.c
exitprog_OBJECTS = exitprog.$(OBJEXT)
exitprog_LDADD = $(LDADD)
file_locking_SOURCES = file_locking.c
file_locking_OBJECTS = file_locking.$(OBJEXT)
file_locking_LDADD = $(LDADD)
fprw_SOURCES = fprw.c
fprw_OBJECTS = fprw-fprw.$(OBJEXT)
fprw_LDADD = $(LDADD)
fprw_LINK = $(CCLD) $(fprw_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
fwrite_SOURCES = fwrite.c
fwrite_OBJECTS = fwrite.$(OBJEXT)
fwrite_LDADD = $(LDADD)
holey_buffer_too_small_SOURCES = holey_buffer_too_small.c
holey_buffer_too_small_OBJECTS = holey_buffer_too_small.$(OBJEXT)
holey_buffer_too_small_LDADD = $(LDADD)
inits_SOURCES = inits.c
inits_OBJECTS = inits-inits.$(OBJEXT)
inits_LDADD = $(LDADD)
inits_LINK = $(CCLD) $(inits_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
inline_SOURCES = inline.c
inline_OBJECTS = inline.$(OBJEXT)
inline_LDADD = $(LDADD)
inlinfo_SOURCES = inlinfo.c
inlinfo_OBJECTS = inlinfo-inlinfo.$(OBJEXT)
inlinfo_LDADD = $(LDADD)
inlinfo_LINK = $(CCLD) $(inlinfo_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am_inltemplate_OBJECTS = inltemplate-inltemplate.$(OBJEXT)
inltemplate_OBJECTS = $(am_inltemplate_OBJECTS)
inltemplate_LDADD = $(LDADD)
inltemplate_LINK = $(CXXLD) $(inltemplate_CXXFLAGS) $(CXXFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
leak_0_SOURCES = leak-0.c
leak_0_OBJECTS = leak-0.$(OBJEXT)
leak_0_LDADD = $(LDADD)
leak_cases_SOURCES = leak-cases.c
leak_cases_OBJECTS = leak-cases.$(OBJEXT)
leak_cases_LDADD = $(LDADD)
leak_cycle_SOURCES = leak-cycle.c
leak_cycle_OBJECTS = leak-cycle.$(OBJEXT)
leak_cycle_LDADD = $(LDADD)
leak_delta_SOURCES = leak-delta.c
leak_delta_OBJECTS = leak-delta.$(OBJEXT)
leak_delta_LDADD = $(LDADD)
leak_pool_SOURCES = leak-pool.c
leak_pool_OBJECTS = leak-pool.$(OBJEXT)
leak_pool_LDADD = $(LDADD)
leak_segv_jmp_SOURCES = leak-segv-jmp.c
leak_segv_jmp_OBJECTS = leak-segv-jmp.$(OBJEXT)
leak_segv_jmp_LDADD = $(LDADD)
leak_tree_SOURCES = leak-tree.c
leak_tree_OBJECTS = leak-tree.$(OBJEXT)
leak_tree_LDADD = $(LDADD)
am_leak_cpp_interior_OBJECTS = leak_cpp_interior.$(OBJEXT)
leak_cpp_interior_OBJECTS = $(am_leak_cpp_interior_OBJECTS)
leak_cpp_interior_LDADD = $(LDADD)
long_supps_SOURCES = long-supps.c
long_supps_OBJECTS = long-supps.$(OBJEXT)
long_supps_LDADD = $(LDADD)
am_long_namespace_xml_OBJECTS = long_namespace_xml.$(OBJEXT)
long_namespace_xml_OBJECTS = $(am_long_namespace_xml_OBJECTS)
long_namespace_xml_LDADD = $(LDADD)
mallinfo_SOURCES = mallinfo.c
mallinfo_OBJECTS = mallinfo.$(OBJEXT)
mallinfo_LDADD = $(LDADD)
malloc1_SOURCES = malloc1.c
malloc1_OBJECTS = malloc1.$(OBJEXT)
malloc1_LDADD = $(LDADD)
malloc2_SOURCES = malloc2.c
malloc2_OBJECTS = malloc2.$(OBJEXT)
malloc2_LDADD = $(LDADD)
malloc3_SOURCES = malloc3.c
malloc3_OBJECTS = malloc3.$(OBJEXT)
malloc3_LDADD = $(LDADD)
malloc_free_fill_SOURCES = malloc_free_fill.c
malloc_free_fill_OBJECTS = malloc_free_fill.$(OBJEXT)
malloc_free_fill_LDADD = $(LDADD)
malloc_usable_SOURCES = malloc_usable.c
malloc_usable_OBJECTS = malloc_usable.$(OBJEXT)
malloc_usable_LDADD = $(LDADD)
manuel1_SOURCES = manuel1.c
manuel1_OBJECTS = manuel1-manuel1.$(OBJEXT)
manuel1_LDADD = $(LDADD)
manuel1_LINK = $(CCLD) $(manuel1_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
manuel2_SOURCES = manuel2.c
manuel2_OBJECTS = manuel2.$(OBJEXT)
manuel2_LDADD = $(LDADD)
manuel3_SOURCES = manuel3.c
manuel3_OBJECTS = manuel3.$(OBJEXT)
manuel3_LDADD = $(LDADD)
match_overrun_SOURCES = match-overrun.c
match_overrun_OBJECTS = match-overrun.$(OBJEXT)
match_overrun_LDADD = $(LDADD)
memalign2_SOURCES = memalign2.c
memalign2_OBJECTS = memalign2-memalign2.$(OBJEXT)
memalign2_LDADD = $(LDADD)
memalign2_LINK = $(CCLD) $(memalign2_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
memalign_test_SOURCES = memalign_test.c
memalign_test_OBJECTS = memalign_test.$(OBJEXT)
memalign_test_LDADD = $(LDADD)
memcmptest_SOURCES = memcmptest.c
memcmptest_OBJECTS = memcmptest-memcmptest.$(OBJEXT)
memcmptest_LDADD = $(LDADD)
memcmptest_LINK = $(CCLD) $(memcmptest_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
mempool_SOURCES = mempool.c
mempool_OBJECTS = mempool.$(OBJEXT)
mempool_LDADD = $(LDADD)
mempool2_SOURCES = mempool2.c
mempool2_OBJECTS = mempool2.$(OBJEXT)
mempool2_LDADD = $(LDADD)
metadata_SOURCES = metadata.c
metadata_OBJECTS = metadata.$(OBJEXT)
metadata_LDADD = $(LDADD)
am_mismatches_OBJECTS = mismatches-mismatches.$(OBJEXT)
mismatches_OBJECTS = $(am_mismatches_OBJECTS)
mismatches_LDADD = $(LDADD)
mismatches_LINK = $(CXXLD) $(mismatches_CXXFLAGS) $(CXXFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
mmaptest_SOURCES = mmaptest.c
mmaptest_OBJECTS = mmaptest.$(OBJEXT)
mmaptest_LDADD = $(LDADD)
nanoleak2_SOURCES = nanoleak2.c
nanoleak2_OBJECTS = nanoleak2.$(OBJEXT)
nanoleak2_LDADD = $(LDADD)
nanoleak_supp_SOURCES = nanoleak_supp.c
nanoleak_supp_OBJECTS = nanoleak_supp.$(OBJEXT)
nanoleak_supp_LDADD = $(LDADD)
am_new_nothrow_OBJECTS = new_nothrow.$(OBJEXT)
new_nothrow_OBJECTS = $(am_new_nothrow_OBJECTS)
new_nothrow_LDADD = $(LDADD)
am_new_override_OBJECTS = new_override.$(OBJEXT)
new_override_OBJECTS = $(am_new_override_OBJECTS)
new_override_LDADD = $(LDADD)
noisy_child_SOURCES = noisy_child.c
noisy_child_OBJECTS = noisy_child.$(OBJEXT)
noisy_child_LDADD = $(LDADD)
null_socket_SOURCES = null_socket.c
null_socket_OBJECTS = null_socket.$(OBJEXT)
null_socket_DEPENDENCIES =
origin1_yes_SOURCES = origin1-yes.c
origin1_yes_OBJECTS = origin1_yes-origin1-yes.$(OBJEXT)
origin1_yes_LDADD = $(LDADD)
origin1_yes_LINK = $(CCLD) $(origin1_yes_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
origin2_not_quite_SOURCES = origin2-not-quite.c
origin2_not_quite_OBJECTS =  \
	origin2_not_quite-origin2-not-quite.$(OBJEXT)
origin2_not_quite_LDADD = $(LDADD)
origin2_not_quite_LINK = $(CCLD) $(origin2_not_quite_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
origin3_no_SOURCES = origin3-no.c
origin3_no_OBJECTS = origin3_no-origin3-no.$(OBJEXT)
origin3_no_LDADD = $(LDADD)
origin3_no_LINK = $(CCLD) $(origin3_no_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
origin4_many_SOURCES = origin4-many.c
origin4_many_OBJECTS = origin4_many-origin4-many.$(OBJEXT)
origin4_many_LDADD = $(LDADD)
origin4_many_LINK = $(CCLD) $(origin4_many_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
origin5_bz2_SOURCES = origin5-bz2.c
origin5_bz2_OBJECTS = origin5_bz2-origin5-bz2.$(OBJEXT)
origin5_bz2_LDADD = $(LDADD)
origin5_bz2_LINK = $(CCLD) $(origin5_bz2_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
origin6_fp_SOURCES = origin6-fp.c
origin6_fp_OBJECTS = origin6_fp-origin6-fp.$(OBJEXT)
origin6_fp_LDADD = $(LDADD)
origin6_fp_LINK = $(CCLD) $(origin6_fp_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
overlap_SOURCES = overlap.c
overlap_OBJECTS = overlap-overlap.$(OBJEXT)
overlap_LDADD = $(LDADD)
overlap_LINK = $(CCLD) $(overlap_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
partial_load_SOURCES = partial_load.c
partial_load_OBJECTS = partial_load.$(OBJEXT)
partial_load_LDADD = $(LDADD)
partiallydefinedeq_SOURCES = partiallydefinedeq.c
partiallydefinedeq_OBJECTS = partiallydefinedeq.$(OBJEXT)
partiallydefinedeq_LDADD = $(LDADD)
pdb_realloc_SOURCES = pdb-realloc.c
pdb_realloc_OBJECTS = pdb-realloc.$(OBJEXT)
pdb_realloc_LDADD = $(LDADD)
pdb_realloc2_SOURCES = pdb-realloc2.c
pdb_realloc2_OBJECTS = pdb-realloc2.$(OBJEXT)
pdb_realloc2_LDADD = $(LDADD)
pipe_SOURCES = pipe.c
pipe_OBJECTS = pipe.$(OBJEXT)
pipe_LDADD = $(LDADD)
pointer_trace_SOURCES = pointer-trace.c
pointer_trace_OBJECTS = pointer-trace.$(OBJEXT)
pointer_trace_LDADD = $(LDADD)
post_syscall_SOURCES = post-syscall.c
post_syscall_OBJECTS = post-syscall.$(OBJEXT)
post_syscall_LDADD = $(LDADD)
reach_thread_register_SOURCES = reach_thread_register.c
reach_thread_register_OBJECTS =  \
	reach_thread_register-reach_thread_register.$(OBJEXT)
reach_thread_register_DEPENDENCIES =
reach_thread_register_LINK = $(CCLD) $(reach_thread_register_CFLAGS) \
	$(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
realloc1_SOURCES = realloc1.c
realloc1_OBJECTS = realloc1.$(OBJEXT)
realloc1_LDADD = $(LDADD)
realloc2_SOURCES = realloc2.c
realloc2_OBJECTS = realloc2.$(OBJEXT)
realloc2_LDADD = $(LDADD)
realloc3_SOURCES = realloc3.c
realloc3_OBJECTS = realloc3.$(OBJEXT)
realloc3_LDADD = $(LDADD)
recursive_merge_SOURCES = recursive-merge.c
recursive_merge_OBJECTS = recursive-merge.$(OBJEXT)
recursive_merge_LDADD = $(LDADD)
resvn_stack_SOURCES = resvn_stack.c
resvn_stack_OBJECTS = resvn_stack-resvn_stack.$(OBJEXT)
resvn_stack_LDADD = $(LDADD)
resvn_stack_LINK = $(CCLD) $(resvn_stack_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
sbfragment_SOURCES = sbfragment.c
sbfragment_OBJECTS = sbfragment.$(OBJEXT)
sbfragment_LDADD = $(LDADD)
sendmsg_SOURCES = sendmsg.c
sendmsg_OBJECTS = sendmsg-sendmsg.$(OBJEXT)
sendmsg_DEPENDENCIES =
sendmsg_LINK = $(CCLD) $(sendmsg_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
sh_mem_SOURCES = sh-mem.c
sh_mem_OBJECTS = sh-mem.$(OBJEXT)
sh_mem_LDADD = $(LDADD)
sh_mem_random_SOURCES = sh-mem-random.c
sh_mem_random_OBJECTS = sh-mem-random.$(OBJEXT)
sh_mem_random_LDADD = $(LDADD)
sigaltstack_SOURCES = sigaltstack.c
sigaltstack_OBJECTS = sigaltstack.$(OBJEXT)
sigaltstack_LDADD = $(LDADD)
sigkill_SOURCES = sigkill.c
sigkill_OBJECTS = sigkill.$(OBJEXT)
sigkill_LDADD = $(LDADD)
signal2_SOURCES = signal2.c
signal2_OBJECTS = signal2.$(OBJEXT)
signal2_LDADD = $(LDADD)
sigprocmask_SOURCES = sigprocmask.c
sigprocmask_OBJECTS = sigprocmask.$(OBJEXT)
sigprocmask_LDADD = $(LDADD)
static_malloc_SOURCES = static_malloc.c
static_malloc_OBJECTS = static_malloc.$(OBJEXT)
static_malloc_LDADD = $(LDADD)
stpncpy_SOURCES = stpncpy.c
stpncpy_OBJECTS = stpncpy.$(OBJEXT)
stpncpy_LDADD = $(LDADD)
str_tester_SOURCES = str_tester.c
str_tester_OBJECTS = str_tester-str_tester.$(OBJEXT)
str_tester_LDADD = $(LDADD)
str_tester_LINK = $(CCLD) $(str_tester_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
strchr_SOURCES = strchr.c
strchr_OBJECTS = strchr.$(OBJEXT)
strchr_LDADD = $(LDADD)
am_supp1_OBJECTS = supp1-supp.$(OBJEXT)
supp1_OBJECTS = $(am_supp1_OBJECTS)
supp1_LDADD = $(LDADD)
supp1_LINK = $(CCLD) $(supp1_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am_supp2_OBJECTS = supp2-supp.$(OBJEXT)
supp2_OBJECTS = $(am_supp2_OBJECTS)
supp2_LDADD = $(LDADD)
supp2_LINK = $(CCLD) $(supp2_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am_supp_unknown_OBJECTS = supp_unknown-badjump.$(OBJEXT)
supp_unknown_OBJECTS = $(am_supp_unknown_OBJECTS)
supp_unknown_LDADD = $(LDADD)
supp_unknown_LINK = $(CCLD) $(supp_unknown_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
suppfree_SOURCES = suppfree.c
suppfree_OBJECTS = suppfree.$(OBJEXT)
suppfree_LDADD = $(LDADD)
test_plo_SOURCES = test-plo.c
test_plo_OBJECTS = test-plo.$(OBJEXT)
test_plo_LDADD = $(LDADD)
thread_alloca_SOURCES = thread_alloca.c
thread_alloca_OBJECTS = thread_alloca.$(OBJEXT)
thread_alloca_DEPENDENCIES =
threadname_SOURCES = threadname.c
threadname_OBJECTS = threadname.$(OBJEXT)
threadname_DEPENDENCIES =
trivialleak_SOURCES = trivialleak.c
trivialleak_OBJECTS = trivialleak.$(OBJEXT)
trivialleak_LDADD = $(LDADD)
undef_malloc_args_SOURCES = undef_malloc_args.c
undef_malloc_args_OBJECTS = undef_malloc_args.$(OBJEXT)
undef_malloc_args_LDADD = $(LDADD)
unit_libcbase_SOURCES = unit_libcbase.c
unit_libcbase_OBJECTS = unit_libcbase.$(OBJEXT)
unit_libcbase_LDADD = $(LDADD)
unit_oset_SOURCES = unit_oset.c
unit_oset_OBJECTS = unit_oset.$(OBJEXT)
unit_oset_LDADD = $(LDADD)
varinfo1_SOURCES = varinfo1.c
varinfo1_OBJECTS = varinfo1-varinfo1.$(OBJEXT)
varinfo1_LDADD = $(LDADD)
varinfo1_LINK = $(CCLD) $(varinfo1_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
varinfo2_SOURCES = varinfo2.c
varinfo2_OBJECTS = varinfo2-varinfo2.$(OBJEXT)
varinfo2_LDADD = $(LDADD)
varinfo2_LINK = $(CCLD) $(varinfo2_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
varinfo3_SOURCES = varinfo3.c
varinfo3_OBJECTS = varinfo3-varinfo3.$(OBJEXT)
varinfo3_LDADD = $(LDADD)
varinfo3_LINK = $(CCLD) $(varinfo3_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
varinfo4_SOURCES = varinfo4.c
varinfo4_OBJECTS = varinfo4-varinfo4.$(OBJEXT)
varinfo4_LDADD = $(LDADD)
varinfo4_LINK = $(CCLD) $(varinfo4_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am_varinfo5_OBJECTS = varinfo5-varinfo5.$(OBJEXT)
varinfo5_OBJECTS = $(am_varinfo5_OBJECTS)
varinfo5_LINK = $(CCLD) $(varinfo5_CFLAGS) $(CFLAGS) \
	$(varinfo5_LDFLAGS) $(LDFLAGS) -o $@
am_varinfo5so_so_OBJECTS = varinfo5so_so-varinfo5so.$(OBJEXT)
varinfo5so_so_OBJECTS = $(am_varinfo5so_so_OBJECTS)
varinfo5so_so_LDADD = $(LDADD)
varinfo5so_so_LINK = $(CCLD) $(varinfo5so_so_CFLAGS) $(CFLAGS) \
	$(varinfo5so_so_LDFLAGS) $(LDFLAGS) -o $@
varinfo6_SOURCES = varinfo6.c
varinfo6_OBJECTS = varinfo6-varinfo6.$(OBJEXT)
varinfo6_LDADD = $(LDADD)
varinfo6_LINK = $(CCLD) $(varinfo6_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
varinforestrict_SOURCES = varinforestrict.c
varinforestrict_OBJECTS = varinforestrict-varinforestrict.$(OBJEXT)
varinforestrict_LDADD = $(LDADD)
varinforestrict_LINK = $(CCLD) $(varinforestrict_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
vcpu_fbench_SOURCES = vcpu_fbench.c
vcpu_fbench_OBJECTS = vcpu_fbench-vcpu_fbench.$(OBJEXT)
vcpu_fbench_LDADD = $(LDADD)
vcpu_fbench_LINK = $(CCLD) $(vcpu_fbench_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
vcpu_fnfns_SOURCES = vcpu_fnfns.c
vcpu_fnfns_OBJECTS = vcpu_fnfns-vcpu_fnfns.$(OBJEXT)
vcpu_fnfns_DEPENDENCIES =
vcpu_fnfns_LINK = $(CCLD) $(vcpu_fnfns_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
wcs_SOURCES = wcs.c
wcs_OBJECTS = wcs.$(OBJEXT)
wcs_LDADD = $(LDADD)
wrap1_SOURCES = wrap1.c
wrap1_OBJECTS = wrap1.$(OBJEXT)
wrap1_LDADD = $(LDADD)
wrap2_SOURCES = wrap2.c
wrap2_OBJECTS = wrap2.$(OBJEXT)
wrap2_LDADD = $(LDADD)
wrap3_SOURCES = wrap3.c
wrap3_OBJECTS = wrap3.$(OBJEXT)
wrap3_LDADD = $(LDADD)
wrap4_SOURCES = wrap4.c
wrap4_OBJECTS = wrap4.$(OBJEXT)
wrap4_LDADD = $(LDADD)
wrap5_SOURCES = wrap5.c
wrap5_OBJECTS = wrap5.$(OBJEXT)
wrap5_LDADD = $(LDADD)
wrap6_SOURCES = wrap6.c
wrap6_OBJECTS = wrap6-wrap6.$(OBJEXT)
wrap6_LDADD = $(LDADD)
wrap6_LINK = $(CCLD) $(wrap6_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am_wrap7_OBJECTS = wrap7.$(OBJEXT)
wrap7_OBJECTS = $(am_wrap7_OBJECTS)
wrap7_LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(wrap7_LDFLAGS) \
	$(LDFLAGS) -o $@
am_wrap7so_so_OBJECTS = wrap7so_so-wrap7so.$(OBJEXT)
wrap7so_so_OBJECTS = $(am_wrap7so_so_OBJECTS)
wrap7so_so_LDADD = $(LDADD)
wrap7so_so_LINK = $(CCLD) $(wrap7so_so_CFLAGS) $(CFLAGS) \
	$(wrap7so_so_LDFLAGS) $(LDFLAGS) -o $@
wrap8_SOURCES = wrap8.c
wrap8_OBJECTS = wrap8.$(OBJEXT)
wrap8_LDADD = $(LDADD)
writev1_SOURCES = writev1.c
writev1_OBJECTS = writev1.$(OBJEXT)
writev1_LDADD = $(LDADD)
xml1_SOURCES = xml1.c
xml1_OBJECTS = xml1-xml1.$(OBJEXT)
xml1_LDADD = $(LDADD)
xml1_LINK = $(CCLD) $(xml1_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
SCRIPTS = $(dist_noinst_SCRIPTS)
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_$(V))
am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
AM_V_CXXLD = $(am__v_CXXLD_$(V))
am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
SOURCES = accounting.c addressable.c atomic_incs.c badaddrvalue.c \
	badfree.c badjump.c badjump2.c badloop.c badpoll.c badrw.c \
	big_blocks_freed_list.c brk2.c buflen_check.c bug155125.c \
	bug287260.c bug340392.c calloc-overflow.c client-msg.c \
	clientperm.c clireq_nofill.c clo_redzone.c cond_ld_st.c \
	custom-overlap.c custom_alloc.c deep-backtrace.c \
	$(demangle_SOURCES) descr_belowsp.c describe-block.c \
	doublefree.c dw4.c err_disable1.c err_disable2.c \
	err_disable3.c err_disable4.c err_disable_arange1.c \
	erringfds.c error_counts.c errs1.c execve1.c execve2.c \
	exitprog.c file_locking.c fprw.c fwrite.c \
	holey_buffer_too_small.c inits.c inline.c inlinfo.c \
	$(inltemplate_SOURCES) leak-0.c leak-cases.c leak-cycle.c \
	leak-delta.c leak-pool.c leak-segv-jmp.c leak-tree.c \
	$(leak_cpp_interior_SOURCES) long-supps.c \
	$(long_namespace_xml_SOURCES) mallinfo.c malloc1.c malloc2.c \
	malloc3.c malloc_free_fill.c malloc_usable.c manuel1.c \
	manuel2.c manuel3.c match-overrun.c memalign2.c \
	memalign_test.c memcmptest.c mempool.c mempool2.c metadata.c \
	$(mismatches_SOURCES) mmaptest.c nanoleak2.c nanoleak_supp.c \
	$(new_nothrow_SOURCES) $(new_override_SOURCES) noisy_child.c \
	null_socket.c origin1-yes.c origin2-not-quite.c origin3-no.c \
	origin4-many.c origin5-bz2.c origin6-fp.c overlap.c \
	partial_load.c partiallydefinedeq.c pdb-realloc.c \
	pdb-realloc2.c pipe.c pointer-trace.c post-syscall.c \
	reach_thread_register.c realloc1.c realloc2.c realloc3.c \
	recursive-merge.c resvn_stack.c sbfragment.c sendmsg.c \
	sh-mem.c sh-mem-random.c sigaltstack.c sigkill.c signal2.c \
	sigprocmask.c static_malloc.c stpncpy.c str_tester.c strchr.c \
	$(supp1_SOURCES) $(supp2_SOURCES) $(supp_unknown_SOURCES) \
	suppfree.c test-plo.c thread_alloca.c threadname.c \
	trivialleak.c undef_malloc_args.c unit_libcbase.c unit_oset.c \
	varinfo1.c varinfo2.c varinfo3.c varinfo4.c \
	$(varinfo5_SOURCES) $(varinfo5so_so_SOURCES) varinfo6.c \
	varinforestrict.c vcpu_fbench.c vcpu_fnfns.c wcs.c wrap1.c \
	wrap2.c wrap3.c wrap4.c wrap5.c wrap6.c $(wrap7_SOURCES) \
	$(wrap7so_so_SOURCES) wrap8.c writev1.c xml1.c
DIST_SOURCES = accounting.c addressable.c atomic_incs.c badaddrvalue.c \
	badfree.c badjump.c badjump2.c badloop.c badpoll.c badrw.c \
	big_blocks_freed_list.c brk2.c buflen_check.c bug155125.c \
	bug287260.c bug340392.c calloc-overflow.c client-msg.c \
	clientperm.c clireq_nofill.c clo_redzone.c cond_ld_st.c \
	custom-overlap.c custom_alloc.c deep-backtrace.c \
	$(demangle_SOURCES) descr_belowsp.c describe-block.c \
	doublefree.c dw4.c err_disable1.c err_disable2.c \
	err_disable3.c err_disable4.c err_disable_arange1.c \
	erringfds.c error_counts.c errs1.c execve1.c execve2.c \
	exitprog.c file_locking.c fprw.c fwrite.c \
	holey_buffer_too_small.c inits.c inline.c inlinfo.c \
	$(inltemplate_SOURCES) leak-0.c leak-cases.c leak-cycle.c \
	leak-delta.c leak-pool.c leak-segv-jmp.c leak-tree.c \
	$(leak_cpp_interior_SOURCES) long-supps.c \
	$(long_namespace_xml_SOURCES) mallinfo.c malloc1.c malloc2.c \
	malloc3.c malloc_free_fill.c malloc_usable.c manuel1.c \
	manuel2.c manuel3.c match-overrun.c memalign2.c \
	memalign_test.c memcmptest.c mempool.c mempool2.c metadata.c \
	$(mismatches_SOURCES) mmaptest.c nanoleak2.c nanoleak_supp.c \
	$(new_nothrow_SOURCES) $(new_override_SOURCES) noisy_child.c \
	null_socket.c origin1-yes.c origin2-not-quite.c origin3-no.c \
	origin4-many.c origin5-bz2.c origin6-fp.c overlap.c \
	partial_load.c partiallydefinedeq.c pdb-realloc.c \
	pdb-realloc2.c pipe.c pointer-trace.c post-syscall.c \
	reach_thread_register.c realloc1.c realloc2.c realloc3.c \
	recursive-merge.c resvn_stack.c sbfragment.c sendmsg.c \
	sh-mem.c sh-mem-random.c sigaltstack.c sigkill.c signal2.c \
	sigprocmask.c static_malloc.c stpncpy.c str_tester.c strchr.c \
	$(supp1_SOURCES) $(supp2_SOURCES) $(supp_unknown_SOURCES) \
	suppfree.c test-plo.c thread_alloca.c threadname.c \
	trivialleak.c undef_malloc_args.c unit_libcbase.c unit_oset.c \
	varinfo1.c varinfo2.c varinfo3.c varinfo4.c \
	$(varinfo5_SOURCES) $(varinfo5so_so_SOURCES) varinfo6.c \
	varinforestrict.c vcpu_fbench.c vcpu_fnfns.c wcs.c wrap1.c \
	wrap2.c wrap3.c wrap4.c wrap5.c wrap6.c $(wrap7_SOURCES) \
	$(wrap7so_so_SOURCES) wrap8.c writev1.c xml1.c
RECURSIVE_TARGETS = all-recursive check-recursive cscopelist-recursive \
	ctags-recursive dvi-recursive html-recursive info-recursive \
	install-data-recursive install-dvi-recursive \
	install-exec-recursive install-html-recursive \
	install-info-recursive install-pdf-recursive \
	install-ps-recursive install-recursive installcheck-recursive \
	installdirs-recursive pdf-recursive ps-recursive \
	tags-recursive uninstall-recursive
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
HEADERS = $(noinst_HEADERS)
RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
  distclean-recursive maintainer-clean-recursive
am__recursive_targets = \
  $(RECURSIVE_TARGETS) \
  $(RECURSIVE_CLEAN_TARGETS) \
  $(am__extra_recursive_targets)
AM_RECURSIVE_TARGETS = $(am__recursive_targets:-recursive=) TAGS CTAGS \
	distdir
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
am__relativize = \
  dir0=`pwd`; \
  sed_first='s,^\([^/]*\)/.*$$,\1,'; \
  sed_rest='s,^[^/]*/*,,'; \
  sed_last='s,^.*/\([^/]*\)$$,\1,'; \
  sed_butlast='s,/*[^/]*$$,,'; \
  while test -n "$$dir1"; do \
    first=`echo "$$dir1" | sed -e "$$sed_first"`; \
    if test "$$first" != "."; then \
      if test "$$first" = ".."; then \
        dir2=`echo "$$dir0" | sed -e "$$sed_last"`/"$$dir2"; \
        dir0=`echo "$$dir0" | sed -e "$$sed_butlast"`; \
      else \
        first2=`echo "$$dir2" | sed -e "$$sed_first"`; \
        if test "$$first2" = "$$first"; then \
          dir2=`echo "$$dir2" | sed -e "$$sed_rest"`; \
        else \
          dir2="../$$dir2"; \
        fi; \
        dir0="$$dir0"/"$$first"; \
      fi; \
    fi; \
    dir1=`echo "$$dir1" | sed -e "$$sed_rest"`; \
  done; \
  reldir="$$dir2"
ACLOCAL = ${SHELL} /home/jeremy/Data/AndroidSource/Android-M/external/valgrind/missing aclocal-1.14
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 1
AR = /home/jeremy/tools/android-ndk-r10e/toolchains/arm-linux-androideabi-4.9/prebuilt/linux-x86_64/bin/arm-linux-androideabi-ar
AUTOCONF = ${SHELL} /home/jeremy/Data/AndroidSource/Android-M/external/valgrind/missing autoconf
AUTOHEADER = ${SHELL} /home/jeremy/Data/AndroidSource/Android-M/external/valgrind/missing autoheader
AUTOMAKE = ${SHELL} /home/jeremy/Data/AndroidSource/Android-M/external/valgrind/missing automake-1.14
AWK = gawk
BOOST_CFLAGS = 
BOOST_LIBS = 
CC = /home/jeremy/tools/android-ndk-r10e/toolchains/arm-linux-androideabi-4.9/prebuilt/linux-x86_64/bin/arm-linux-androideabi-gcc
CCAS = /home/jeremy/tools/android-ndk-r10e/toolchains/arm-linux-androideabi-4.9/prebuilt/linux-x86_64/bin/arm-linux-androideabi-gcc
CCASDEPMODE = depmode=gcc3
CCASFLAGS = --sysroot=/home/jeremy/tools/android-ndk-r10e/platforms/android-19/arch-arm
CCDEPMODE = depmode=gcc3
CFLAGS = --sysroot=/home/jeremy/tools/android-ndk-r10e/platforms/android-19/arch-arm
CFLAGS_MPI = -g -O -fno-omit-frame-pointer -Wall -fpic
CPP = /home/jeremy/tools/android-ndk-r10e/toolchains/arm-linux-androideabi-4.9/prebuilt/linux-x86_64/bin/arm-linux-androideabi-gcc -E
CPPFLAGS = --sysroot=/home/jeremy/tools/android-ndk-r10e/platforms/android-19/arch-arm -DANDROID_HARDWARE_NEXUS_5
CXX = /home/jeremy/tools/android-ndk-r10e/toolchains/arm-linux-androideabi-4.9/prebuilt/linux-x86_64/bin/arm-linux-androideabi-g++
CXXDEPMODE = depmode=gcc3
CXXFLAGS = 
CYGPATH_W = echo
DEFAULT_SUPP = exp-sgcheck.supp xfree-3.supp xfree-4.supp bionic.supp 
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DIFF = diff -u
DIS_PATH = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
FLAG_FNO_IPA_ICF = 
FLAG_FNO_STACK_PROTECTOR = -fno-stack-protector
FLAG_FSANITIZE = 
FLAG_M32 = 
FLAG_M64 = 
FLAG_MIPS32 = 
FLAG_MIPS64 = 
FLAG_MLONG_DOUBLE_128 = -mlong-double-128
FLAG_MMMX = 
FLAG_MSSE = 
FLAG_NO_BUILD_ID = 
FLAG_OCTEON = 
FLAG_OCTEON2 = 
FLAG_T_TEXT = -Ttext-segment
FLAG_UNLIMITED_INLINE_UNIT_GROWTH = --param inline-unit-growth=900
FLAG_W_CAST_ALIGN = 
FLAG_W_CAST_QUAL = -Wcast-qual
FLAG_W_EMPTY_BODY = -Wempty-body
FLAG_W_EXTRA = -Wextra
FLAG_W_FORMAT = -Wformat
FLAG_W_FORMAT_SECURITY = -Wformat-security
FLAG_W_FORMAT_SIGNEDNESS = 
FLAG_W_IGNORED_QUALIFIERS = -Wignored-qualifiers
FLAG_W_MISSING_PARAMETER_TYPE = -Wmissing-parameter-type
FLAG_W_NO_INFINITE_RECURSION = 
FLAG_W_NO_MEMSET_TRANSPOSED_ARGS = 
FLAG_W_NO_MISMATCHED_NEW_DELETE = 
FLAG_W_NO_NONNULL = -Wno-nonnull
FLAG_W_NO_OVERFLOW = -Wno-overflow
FLAG_W_NO_POINTER_SIGN = -Wno-pointer-sign
FLAG_W_NO_STATIC_LOCAL_IN_INLINE = 
FLAG_W_NO_UNINITIALIZED = -Wno-uninitialized
FLAG_W_NO_UNUSED_FUNCTION = -Wno-unused-function
FLAG_W_OLD_STYLE_DECLARATION = -Wold-style-declaration
FLAG_W_WRITE_STRINGS = -Wwrite-strings
GDB = /usr/bin/gdb
GLIBC_VERSION = bionic
GREP = /bin/grep
HWCAP_HAS_ALTIVEC = 
HWCAP_HAS_DFP = 
HWCAP_HAS_HTM = 
HWCAP_HAS_ISA_2_05 = 
HWCAP_HAS_ISA_2_06 = 
HWCAP_HAS_ISA_2_07 = 
HWCAP_HAS_VSX = 
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LDFLAGS = 
LDFLAGS_MPI = -fpic -shared
LIBOBJS =  ${LIBOBJDIR}memcmp$U.o
LIBS = 
LIB_UBSAN = 
LN_S = ln -s
LTLIBOBJS =  ${LIBOBJDIR}memcmp$U.lo
MAINT = #
MAKEINFO = ${SHELL} /home/jeremy/Data/AndroidSource/Android-M/external/valgrind/missing makeinfo
MKDIR_P = /bin/mkdir -p
MPI_CC = /usr/bin/mpicc
OBJEXT = o
PACKAGE = valgrind
PACKAGE_BUGREPORT = valgrind-users@lists.sourceforge.net
PACKAGE_NAME = Valgrind
PACKAGE_STRING = Valgrind 3.11.0
PACKAGE_TARNAME = valgrind
PACKAGE_URL = 
PACKAGE_VERSION = 3.11.0
PATH_SEPARATOR = :
PERL = /usr/bin/perl
PREFERRED_STACK_BOUNDARY_2 = 
RANLIB = ranlib
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/bash
STRIP = strip
VALT_LOAD_ADDRESS_PRI = 0x38000000
VALT_LOAD_ADDRESS_SEC = 0xUNSET
VERSION = 3.11.0
VGCONF_ARCH_PRI = arm
VGCONF_ARCH_SEC = 
VGCONF_OS = linux
VGCONF_PLATFORM_PRI_CAPS = ARM_LINUX
VGCONF_PLATFORM_SEC_CAPS = 
VGCONF_PLATVARIANT = android
VG_TMPDIR = /sdcard 
abs_builddir = /home/jeremy/Data/AndroidSource/Android-M/external/valgrind/memcheck/tests
abs_srcdir = /home/jeremy/Data/AndroidSource/Android-M/external/valgrind/memcheck/tests
abs_top_builddir = /home/jeremy/Data/AndroidSource/Android-M/external/valgrind
abs_top_srcdir = /home/jeremy/Data/AndroidSource/Android-M/external/valgrind
ac_ct_CC = 
ac_ct_CXX = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
build = x86_64-unknown-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = unknown
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = armv7-unknown-linux-gnu
host_alias = armv7-unknown-linux
host_cpu = armv7
host_os = linux-gnu
host_vendor = unknown
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/jeremy/Data/AndroidSource/Android-M/external/valgrind/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /data/local/tmp/Inst
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = armv7-unknown-linux
top_build_prefix = ../../
top_builddir = ../..
top_srcdir = ../..
inplacedir = $(top_builddir)/.in_place

#----------------------------------------------------------------------------
# Flags
#----------------------------------------------------------------------------

# Baseline flags for all compilations.  Aim here is to maximise
# performance and get whatever useful warnings we can out of gcc.
# -fno-builtin is important for defeating LLVM's idiom recognition
# that somehow causes VG_(memset) to get into infinite recursion.
AM_CFLAGS_BASE = -O2 -g -std=gnu99 -Wall -Wmissing-prototypes -Wshadow \
	-Wpointer-arith -Wstrict-prototypes -Wmissing-declarations \
	 -Wcast-qual -Wwrite-strings \
	-Wempty-body -Wformat  \
	-Wformat-security -Wignored-qualifiers \
	-Wmissing-parameter-type -Wold-style-declaration \
	-fno-stack-protector  \
	-fno-strict-aliasing -fno-builtin $(am__append_1)
AM_CFLAGS_PSO_BASE = -O -g -fno-omit-frame-pointer -fno-strict-aliasing \
		     -fpic -fno-builtin 


# These flags are used for building the preload shared objects (PSOs).
# The aim is to give reasonable performance but also to have good
# stack traces, since users often see stack traces extending 
# into (and through) the preloads.  Also, we must use any
# -mpreferred-stack-boundary flag to build the preload shared
# objects, since that risks misaligning the client's stack and
# results in segfaults like (eg) #324050.
#AM_CFLAGS_PSO_BASE = -dynamic \
#		     -O -g -fno-omit-frame-pointer -fno-strict-aliasing \
#		     -fpic -fPIC -fno-builtin 


# Flags for specific targets.
#
# Nb: the AM_CPPFLAGS_* values are suitable for building tools and auxprogs.
# For building the core, coregrind/Makefile.am files add some extra things.
AM_CPPFLAGS_ARM_LINUX = \
	-I$(top_srcdir) \
	-I$(top_srcdir)/include \
	-I$(top_srcdir)/VEX/pub \
	-I$(top_builddir)/VEX/pub \
	-DVGA_arm=1 \
	-DVGO_linux=1 \
	-DVGP_arm_linux=1 \
	-DVGPV_arm_linux_android=1

#AM_CPPFLAGS_ = \
#	-I$(top_srcdir) \
#	-I$(top_srcdir)/include \
#	-I$(top_srcdir)/VEX/pub \
#	-I$(top_builddir)/VEX/pub \
#	-DVGA_=1 \
#	-DVGO_linux=1 \
#	-DVGP__linux=1 \
#	-DVGPV__linux_android=1

AM_FLAG_M3264_X86_LINUX = 
AM_CFLAGS_X86_LINUX =   \
				$(AM_CFLAGS_BASE) -fomit-frame-pointer

AM_CFLAGS_PSO_X86_LINUX =  $(AM_CFLAGS_BASE) $(AM_CFLAGS_PSO_BASE)
AM_CCASFLAGS_X86_LINUX =  -g
AM_FLAG_M3264_AMD64_LINUX = 
AM_CFLAGS_AMD64_LINUX =  \
				$(AM_CFLAGS_BASE) -fomit-frame-pointer

AM_CFLAGS_PSO_AMD64_LINUX =  $(AM_CFLAGS_BASE) $(AM_CFLAGS_PSO_BASE)
AM_CCASFLAGS_AMD64_LINUX =  -g
AM_FLAG_M3264_PPC32_LINUX = 
AM_CFLAGS_PPC32_LINUX =  $(AM_CFLAGS_BASE)
AM_CFLAGS_PSO_PPC32_LINUX =  $(AM_CFLAGS_BASE) $(AM_CFLAGS_PSO_BASE)
AM_CCASFLAGS_PPC32_LINUX =  -g
AM_FLAG_M3264_PPC64BE_LINUX = 
AM_CFLAGS_PPC64BE_LINUX =  $(AM_CFLAGS_BASE)
AM_CFLAGS_PSO_PPC64BE_LINUX =  $(AM_CFLAGS_BASE) $(AM_CFLAGS_PSO_BASE)
AM_CCASFLAGS_PPC64BE_LINUX =  -g
AM_FLAG_M3264_PPC64LE_LINUX = 
AM_CFLAGS_PPC64LE_LINUX =  $(AM_CFLAGS_BASE)
AM_CFLAGS_PSO_PPC64LE_LINUX =  $(AM_CFLAGS_BASE) $(AM_CFLAGS_PSO_BASE)
AM_CCASFLAGS_PPC64LE_LINUX =  -g
AM_FLAG_M3264_ARM_LINUX = 
AM_CFLAGS_ARM_LINUX =  \
			 	$(AM_CFLAGS_BASE) -marm -mcpu=cortex-a8

AM_CFLAGS_PSO_ARM_LINUX =  $(AM_CFLAGS_BASE) \
				-marm -mcpu=cortex-a8 $(AM_CFLAGS_PSO_BASE)

AM_CCASFLAGS_ARM_LINUX =  \
				-marm -mcpu=cortex-a8 -g

AM_FLAG_M3264_ARM64_LINUX = 
AM_CFLAGS_ARM64_LINUX =  $(AM_CFLAGS_BASE)
AM_CFLAGS_PSO_ARM64_LINUX =  $(AM_CFLAGS_BASE) $(AM_CFLAGS_PSO_BASE)
AM_CCASFLAGS_ARM64_LINUX =  -g
AM_FLAG_M3264_X86_DARWIN = -arch i386
AM_CFLAGS_X86_DARWIN = $(WERROR) -arch i386 $(AM_CFLAGS_BASE) \
				-mmacosx-version-min=10.5 \
				-fno-stack-protector -fno-pic -fno-PIC

AM_CFLAGS_PSO_X86_DARWIN = $(AM_CFLAGS_X86_DARWIN) $(AM_CFLAGS_PSO_BASE)
AM_CCASFLAGS_X86_DARWIN = -arch i386 -g
AM_FLAG_M3264_AMD64_DARWIN = -arch x86_64
AM_CFLAGS_AMD64_DARWIN = $(WERROR) -arch x86_64 $(AM_CFLAGS_BASE) \
			    -mmacosx-version-min=10.5 -fno-stack-protector

AM_CFLAGS_PSO_AMD64_DARWIN = $(AM_CFLAGS_AMD64_DARWIN) $(AM_CFLAGS_PSO_BASE)
AM_CCASFLAGS_AMD64_DARWIN = -arch x86_64 -g
AM_FLAG_M3264_S390X_LINUX = 
AM_CFLAGS_S390X_LINUX =  $(AM_CFLAGS_BASE) -fomit-frame-pointer
AM_CFLAGS_PSO_S390X_LINUX =  $(AM_CFLAGS_BASE) $(AM_CFLAGS_PSO_BASE)
AM_CCASFLAGS_S390X_LINUX =  -g -mzarch -march=z900
AM_FLAG_M3264_MIPS32_LINUX = 
AM_CFLAGS_MIPS32_LINUX =  $(AM_CFLAGS_BASE) 
AM_CFLAGS_PSO_MIPS32_LINUX =  $(AM_CFLAGS_BASE)  \
				$(AM_CFLAGS_PSO_BASE)

AM_CCASFLAGS_MIPS32_LINUX =  -g 
AM_FLAG_M3264_MIPS64_LINUX = 
AM_CFLAGS_MIPS64_LINUX =  $(AM_CFLAGS_BASE) 
AM_CFLAGS_PSO_MIPS64_LINUX =  $(AM_CFLAGS_BASE)  \
				$(AM_CFLAGS_PSO_BASE)

AM_CCASFLAGS_MIPS64_LINUX =  -g 
AM_CFLAGS_TILEGX_LINUX =  $(AM_CFLAGS_BASE)
AM_CFLAGS_PSO_TILEGX_LINUX =  $(AM_CFLAGS_BASE) $(AM_CFLAGS_PSO_BASE)
AM_FLAG_M3264_X86_SOLARIS = 
AM_CFLAGS_X86_SOLARIS =   \
			 	$(AM_CFLAGS_BASE) -fomit-frame-pointer

AM_CFLAGS_PSO_X86_SOLARIS =  $(AM_CFLAGS_BASE) $(AM_CFLAGS_PSO_BASE)
AM_CCASFLAGS_X86_SOLARIS =  -g -D_ASM
AM_FLAG_M3264_AMD64_SOLARIS = 
AM_CFLAGS_AMD64_SOLARIS =  \
				$(AM_CFLAGS_BASE) -fomit-frame-pointer

AM_CFLAGS_PSO_AMD64_SOLARIS =  $(AM_CFLAGS_BASE) $(AM_CFLAGS_PSO_BASE)
AM_CCASFLAGS_AMD64_SOLARIS =  -g -D_ASM

# Flags for the primary target.  These must be used to build the
# regtests and performance tests.  In fact, these must be used to
# build anything which is built only once on a dual-arch build.
#
AM_FLAG_M3264_PRI = $(AM_FLAG_M3264_ARM_LINUX)
AM_CPPFLAGS_PRI = $(AM_CPPFLAGS_ARM_LINUX)
AM_CFLAGS_PRI = $(AM_CFLAGS_ARM_LINUX)
AM_CCASFLAGS_PRI = $(AM_CCASFLAGS_ARM_LINUX)
AM_FLAG_M3264_SEC = 
#AM_FLAG_M3264_SEC = $(AM_FLAG_M3264_)

# Baseline link flags for making vgpreload shared objects.
#
PRELOAD_LDFLAGS_COMMON_LINUX = -nodefaultlibs -shared \
	-Wl,-z,interpose,-z,initfirst $(am__append_3)
PRELOAD_LDFLAGS_COMMON_DARWIN = -dynamic -dynamiclib -all_load
PRELOAD_LDFLAGS_COMMON_SOLARIS = -nodefaultlibs -shared \
	-Wl,-z,interpose,-z,initfirst $(am__append_2)
PRELOAD_LDFLAGS_X86_LINUX = $(PRELOAD_LDFLAGS_COMMON_LINUX) 
PRELOAD_LDFLAGS_AMD64_LINUX = $(PRELOAD_LDFLAGS_COMMON_LINUX) 
PRELOAD_LDFLAGS_PPC32_LINUX = $(PRELOAD_LDFLAGS_COMMON_LINUX) 
PRELOAD_LDFLAGS_PPC64BE_LINUX = $(PRELOAD_LDFLAGS_COMMON_LINUX) 
PRELOAD_LDFLAGS_PPC64LE_LINUX = $(PRELOAD_LDFLAGS_COMMON_LINUX) 
PRELOAD_LDFLAGS_ARM_LINUX = $(PRELOAD_LDFLAGS_COMMON_LINUX) 
PRELOAD_LDFLAGS_ARM64_LINUX = $(PRELOAD_LDFLAGS_COMMON_LINUX) 
PRELOAD_LDFLAGS_X86_DARWIN = $(PRELOAD_LDFLAGS_COMMON_DARWIN) -arch i386
PRELOAD_LDFLAGS_AMD64_DARWIN = $(PRELOAD_LDFLAGS_COMMON_DARWIN) -arch x86_64
PRELOAD_LDFLAGS_S390X_LINUX = $(PRELOAD_LDFLAGS_COMMON_LINUX) 
PRELOAD_LDFLAGS_MIPS32_LINUX = $(PRELOAD_LDFLAGS_COMMON_LINUX) 
PRELOAD_LDFLAGS_MIPS64_LINUX = $(PRELOAD_LDFLAGS_COMMON_LINUX) 
PRELOAD_LDFLAGS_TILEGX_LINUX = $(PRELOAD_LDFLAGS_COMMON_LINUX) 
PRELOAD_LDFLAGS_X86_SOLARIS = $(PRELOAD_LDFLAGS_COMMON_SOLARIS) 
PRELOAD_LDFLAGS_AMD64_SOLARIS = $(PRELOAD_LDFLAGS_COMMON_SOLARIS) 
AM_CPPFLAGS = -I$(top_srcdir) -I$(top_srcdir)/include \
	-I$(top_srcdir)/coregrind -I$(top_builddir)/include \
	-I$(top_srcdir)/VEX/pub -I$(top_builddir)/VEX/pub \
	-DVGA_arm=1 -DVGO_linux=1 \
	-DVGP_arm_linux=1 \
	-DVGPV_arm_linux_android=1 \
	$(am__append_4)

# Nb: Tools need to augment these flags with an arch-selection option, such
# as $(AM_FLAG_M3264_PRI).
AM_CFLAGS = -Winline -Wall -Wshadow -Wno-long-long -g \
	-fno-stack-protector $(am__append_5) $(am__append_6) \
	$(AM_FLAG_M3264_PRI)
AM_CXXFLAGS = -Winline -Wall -Wshadow -Wno-long-long -g \
	-fno-stack-protector $(am__append_7) \
	$(AM_FLAG_M3264_PRI)
# Include AM_CPPFLAGS in AM_CCASFLAGS to allow for older versions of
# automake;  see comments in Makefile.all.am for more detail.
AM_CCASFLAGS = $(AM_CPPFLAGS)
#noinst_DSYMS = $(check_PROGRAMS)
SUBDIRS = . $(am__append_8) $(am__append_9) $(am__append_10) \
	$(am__append_11) $(am__append_12) $(am__append_13) \
	$(am__append_14) $(am__append_15) $(am__append_16) \
	$(am__append_17) $(am__append_18) $(am__append_19)
DIST_SUBDIRS = x86 amd64 ppc32 ppc64 s390x linux \
		darwin solaris x86-linux amd64-linux x86-solaris amd64-solaris \
		common .

dist_noinst_SCRIPTS = \
	filter_addressable \
	filter_allocs \
	filter_dw4 \
	filter_leak_cases_possible \
	filter_stderr filter_xml \
	filter_strchr \
	filter_varinfo3 \
	filter_memcheck

noinst_HEADERS = leak.h
EXTRA_DIST = \
	accounting.stderr.exp accounting.vgtest \
	addressable.stderr.exp addressable.stdout.exp addressable.vgtest \
	atomic_incs.stderr.exp atomic_incs.vgtest \
	atomic_incs.stdout.exp-32bit atomic_incs.stdout.exp-64bit \
	badaddrvalue.stderr.exp \
	badaddrvalue.stdout.exp badaddrvalue.vgtest \
	badfree-2trace.stderr.exp badfree-2trace.vgtest \
	badfree.stderr.exp badfree.vgtest \
	badfree3.stderr.exp badfree3.vgtest \
	badjump.stderr.exp badjump.vgtest \
	badjump2.stderr.exp badjump2.vgtest \
	badjump.stderr.exp-kfail \
	badjump2.stderr.exp-kfail \
	badloop.stderr.exp badloop.vgtest \
	badpoll.stderr.exp badpoll.vgtest \
	badrw.stderr.exp badrw.vgtest badrw.stderr.exp-s390x-mvc \
	big_blocks_freed_list.stderr.exp big_blocks_freed_list.vgtest \
	brk2.stderr.exp brk2.vgtest \
	buflen_check.stderr.exp buflen_check.vgtest \
		buflen_check.stderr.exp-kfail \
	bug155125.stderr.exp bug155125.vgtest \
	bug287260.stderr.exp bug287260.vgtest \
	bug340392.stderr.exp bug340392.vgtest \
	calloc-overflow.stderr.exp calloc-overflow.vgtest\
	client-msg.stderr.exp client-msg.vgtest \
	client-msg-as-xml.stderr.exp client-msg-as-xml.vgtest \
	clientperm.stderr.exp \
	clientperm.stdout.exp clientperm.vgtest \
	clireq_nofill.stderr.exp \
	clireq_nofill.stdout.exp clireq_nofill.vgtest \
	clo_redzone_default.vgtest clo_redzone_128.vgtest \
	clo_redzone_default.stderr.exp clo_redzone_128.stderr.exp \
	cond_ld.vgtest cond_ld.stdout.exp cond_ld.stderr.exp-arm \
		cond_ld.stderr.exp-64bit-non-arm \
		cond_ld.stderr.exp-32bit-non-arm \
	cond_st.vgtest cond_st.stdout.exp cond_st.stderr.exp-arm \
		cond_st.stderr.exp-64bit-non-arm \
		cond_st.stderr.exp-32bit-non-arm \
	leak_cpp_interior.stderr.exp leak_cpp_interior.stderr.exp-64bit leak_cpp_interior.vgtest \
	custom_alloc.stderr.exp custom_alloc.vgtest \
		custom_alloc.stderr.exp-s390x-mvc \
	custom-overlap.stderr.exp custom-overlap.vgtest \
	deep-backtrace.vgtest deep-backtrace.stderr.exp \
	demangle.stderr.exp demangle.vgtest \
	describe-block.stderr.exp describe-block.vgtest \
	descr_belowsp.vgtest descr_belowsp.stderr.exp \
	doublefree.stderr.exp doublefree.vgtest \
	dw4.vgtest dw4.stderr.exp dw4.stderr.exp-solaris dw4.stdout.exp \
	err_disable1.vgtest err_disable1.stderr.exp \
	err_disable2.vgtest err_disable2.stderr.exp \
	err_disable3.vgtest err_disable3.stderr.exp \
	err_disable4.vgtest err_disable4.stderr.exp \
	err_disable_arange1.vgtest err_disable_arange1.stderr.exp \
	erringfds.stderr.exp erringfds.stdout.exp erringfds.vgtest \
	error_counts.stderr.exp error_counts.vgtest \
	errs1.stderr.exp errs1.vgtest \
	exitprog.stderr.exp exitprog.vgtest \
	execve1.stderr.exp execve1.vgtest execve1.stderr.exp-kfail \
	execve2.stderr.exp execve2.vgtest execve2.stderr.exp-kfail \
	file_locking.stderr.exp file_locking.vgtest \
	fprw.stderr.exp fprw.stderr.exp-mips32-be fprw.stderr.exp-mips32-le \
		fprw.vgtest \
	fwrite.stderr.exp fwrite.vgtest fwrite.stderr.exp-kfail \
	holey_buffer_too_small.vgtest holey_buffer_too_small.stdout.exp \
	holey_buffer_too_small.stderr.exp \
	inits.stderr.exp inits.vgtest \
	inline.stderr.exp inline.stdout.exp inline.vgtest \
	inlinfo.stderr.exp inlinfo.stdout.exp inlinfo.vgtest \
	inlinfosupp.stderr.exp inlinfosupp.stdout.exp inlinfosupp.supp inlinfosupp.vgtest \
	inlinfosuppobj.stderr.exp inlinfosuppobj.stdout.exp inlinfosuppobj.supp inlinfosuppobj.vgtest \
	inltemplate.stderr.exp inltemplate.stdout.exp inltemplate.vgtest \
		inltemplate.stderr.exp-old-gcc \
	leak-0.vgtest leak-0.stderr.exp \
	leak-cases-full.vgtest leak-cases-full.stderr.exp \
	leak-cases-possible.vgtest leak-cases-possible.stderr.exp \
	leak-cases-summary.vgtest leak-cases-summary.stderr.exp \
	leak-cycle.vgtest leak-cycle.stderr.exp \
	leak-delta.vgtest leak-delta.stderr.exp \
	leak-pool-0.vgtest leak-pool-0.stderr.exp \
	leak-pool-1.vgtest leak-pool-1.stderr.exp \
	leak-pool-2.vgtest leak-pool-2.stderr.exp \
	leak-pool-3.vgtest leak-pool-3.stderr.exp \
	leak-pool-4.vgtest leak-pool-4.stderr.exp \
	leak-pool-5.vgtest leak-pool-5.stderr.exp \
	leak-tree.vgtest leak-tree.stderr.exp \
	leak-segv-jmp.vgtest leak-segv-jmp.stderr.exp \
	lks.vgtest lks.stdout.exp lks.supp lks.stderr.exp \
	long_namespace_xml.vgtest long_namespace_xml.stdout.exp \
	long_namespace_xml.stderr.exp \
	long-supps.vgtest long-supps.stderr.exp long-supps.supp \
	mallinfo.stderr.exp mallinfo.vgtest \
	malloc_free_fill.vgtest \
	malloc_free_fill.stderr.exp \
	malloc_usable.stderr.exp malloc_usable.vgtest \
	malloc1.stderr.exp malloc1.vgtest \
	malloc1_ks_none.stderr.exp malloc1_ks_none.vgtest \
	malloc1_ks_alloc.stderr.exp malloc1_ks_alloc.vgtest \
	malloc1_ks_free.stderr.exp malloc1_ks_free.vgtest \
	malloc1_ks_alloc_and_free.stderr.exp malloc1_ks_alloc_and_free.vgtest \
	malloc2.stderr.exp malloc2.vgtest \
	malloc3.stderr.exp malloc3.stdout.exp malloc3.vgtest \
	manuel1.stderr.exp manuel1.stdout.exp manuel1.vgtest \
	manuel2.stderr.exp manuel2.stderr.exp64 manuel2.stdout.exp \
		manuel2.vgtest \
	manuel3.stderr.exp manuel3.vgtest \
	match-overrun.stderr.exp match-overrun.vgtest match-overrun.supp \
	memalign_test.stderr.exp memalign_test.vgtest \
	memalign2.stderr.exp memalign2.vgtest \
	memcmptest.stderr.exp memcmptest.stderr.exp2 \
	memcmptest.stdout.exp memcmptest.vgtest \
	mempool.stderr.exp mempool.vgtest \
	mempool2.stderr.exp mempool2.vgtest \
	metadata.stderr.exp metadata.stdout.exp metadata.vgtest \
	mismatches.stderr.exp mismatches.vgtest \
	mmaptest.stderr.exp mmaptest.vgtest \
	nanoleak_supp.stderr.exp nanoleak_supp.vgtest nanoleak.supp \
	nanoleak2.stderr.exp nanoleak2.vgtest \
	new_nothrow.stderr.exp new_nothrow.vgtest \
	new_override.stderr.exp new_override.stdout.exp new_override.vgtest \
	noisy_child.vgtest noisy_child.stderr.exp noisy_child.stdout.exp \
	null_socket.stderr.exp null_socket.vgtest \
	origin1-yes.vgtest origin1-yes.stdout.exp origin1-yes.stderr.exp \
	origin2-not-quite.vgtest origin2-not-quite.stdout.exp \
	origin2-not-quite.stderr.exp \
	origin3-no.vgtest origin3-no.stdout.exp \
	origin3-no.stderr.exp \
	origin4-many.vgtest origin4-many.stdout.exp \
	origin4-many.stderr.exp \
	origin5-bz2.vgtest origin5-bz2.stdout.exp \
	origin5-bz2.stderr.exp-glibc25-x86 \
	origin5-bz2.stderr.exp-glibc25-amd64 \
	origin5-bz2.stderr.exp-glibc25-amd64-b \
	origin5-bz2.stderr.exp-glibc27-ppc64 \
	origin5-bz2.stderr.exp-glibc212-s390x \
	origin5-bz2.stderr.exp-glibc234-s390x \
	origin5-bz2.stderr.exp-glibc218-mips32 \
	origin5-bz2.stderr.exp-glibc212-tilegx \
	origin6-fp.vgtest origin6-fp.stdout.exp \
	origin6-fp.stderr.exp-glibc25-amd64 \
	origin6-fp.stderr.exp-glibc27-ppc64 \
	origin6-fp.stderr.exp-glibc212-tilegx \
	overlap.stderr.exp overlap.stdout.exp overlap.vgtest \
	partiallydefinedeq.vgtest partiallydefinedeq.stderr.exp \
	partiallydefinedeq.stderr.exp4 \
	partiallydefinedeq.stderr.exp3 \
	partiallydefinedeq.stderr.exp2 \
	partiallydefinedeq.stdout.exp \
	partial_load_ok.vgtest partial_load_ok.stderr.exp \
		partial_load_ok.stderr.exp64 \
	partial_load_dflt.vgtest partial_load_dflt.stderr.exp \
		partial_load_dflt.stderr.exp64 \
	partial_load_dflt.stderr.expr-s390x-mvc \
	pdb-realloc.stderr.exp pdb-realloc.vgtest \
	pdb-realloc2.stderr.exp pdb-realloc2.stdout.exp pdb-realloc2.vgtest \
	pipe.stderr.exp pipe.vgtest \
	pointer-trace.vgtest \
	pointer-trace.stderr.exp \
	post-syscall.stderr.exp post-syscall.vgtest \
	reach_thread_register.stderr.exp reach_thread_register.vgtest \
		reach_thread_register.stderr.exp-mips32 \
		reach_thread_register.stderr.exp-mips64 \
	realloc1.stderr.exp realloc1.vgtest \
	realloc2.stderr.exp realloc2.vgtest \
	realloc3.stderr.exp realloc3.vgtest \
	recursive-merge.stderr.exp recursive-merge.vgtest \
	resvn_stack.stderr.exp resvn_stack.vgtest \
	sbfragment.stdout.exp sbfragment.stderr.exp sbfragment.vgtest \
	sem.stderr.exp sem.vgtest \
	sendmsg.stderr.exp sendmsg.stderr.exp-solaris sendmsg.vgtest \
	sh-mem.stderr.exp sh-mem.vgtest \
	sh-mem-random.stderr.exp sh-mem-random.stdout.exp64 \
	sh-mem-random.stdout.exp sh-mem-random.vgtest \
	sigaltstack.stderr.exp sigaltstack.vgtest \
	sigkill.stderr.exp sigkill.stderr.exp-darwin sigkill.stderr.exp-mips32 \
	    sigkill.stderr.exp-solaris sigkill.vgtest \
	signal2.stderr.exp signal2.stdout.exp signal2.vgtest \
	sigprocmask.stderr.exp sigprocmask.stderr.exp2 sigprocmask.vgtest \
	static_malloc.stderr.exp static_malloc.vgtest \
	stpncpy.vgtest stpncpy.stderr.exp stpncpy.stdout.exp \
	strchr.stderr.exp strchr.stderr.exp2 strchr.stderr.exp3 strchr.vgtest \
	str_tester.stderr.exp str_tester.vgtest \
	supp-dir.vgtest supp-dir.stderr.exp \
	supp_unknown.stderr.exp supp_unknown.vgtest supp_unknown.supp \
	supp_unknown.stderr.exp-kfail \
	supp1.stderr.exp supp1.vgtest \
	supp2.stderr.exp supp2.vgtest \
	supp.supp \
	suppfree.stderr.exp suppfree.supp suppfree.vgtest \
	suppfreecollision.stderr.exp suppfreecollision.supp suppfreecollision.vgtest \
	supponlyobj.stderr.exp supponlyobj.supp supponlyobj.vgtest \
	suppvarinfo5.stderr.exp suppvarinfo5.supp suppvarinfo5.vgtest \
	test-plo-no.vgtest test-plo-no.stdout.exp \
	    test-plo-no.stderr.exp-le64 test-plo-no.stderr.exp-le32 \
	test-plo-yes.vgtest test-plo-yes.stdout.exp \
	    test-plo-yes.stderr.exp-le64 test-plo-yes.stderr.exp-le32 \
	    test-plo-no.stderr.exp-s390x-mvc \
	thread_alloca.stderr.exp thread_alloca.vgtest \
	trivialleak.stderr.exp trivialleak.vgtest trivialleak.stderr.exp2 \
	undef_malloc_args.stderr.exp undef_malloc_args.vgtest \
	unit_libcbase.stderr.exp unit_libcbase.vgtest \
	unit_oset.stderr.exp unit_oset.stdout.exp unit_oset.vgtest \
	varinfo1.vgtest varinfo1.stdout.exp varinfo1.stderr.exp \
		varinfo1.stderr.exp-ppc64 \
	varinfo2.vgtest varinfo2.stdout.exp varinfo2.stderr.exp \
		varinfo2.stderr.exp-ppc64 \
	varinfo3.vgtest varinfo3.stdout.exp varinfo3.stderr.exp \
		varinfo3.stderr.exp-ppc64 \
	varinfo4.vgtest varinfo4.stdout.exp varinfo4.stderr.exp \
		varinfo4.stderr.exp-ppc64 \
	varinfo5.vgtest varinfo5.stdout.exp varinfo5.stderr.exp \
		varinfo5.stderr.exp-ppc64 \
	varinfo6.vgtest varinfo6.stdout.exp varinfo6.stderr.exp \
		varinfo6.stderr.exp-ppc64 \
	varinforestrict.vgtest varinforestrict.stderr.exp \
	vcpu_bz2.stdout.exp vcpu_bz2.stderr.exp vcpu_bz2.vgtest \
	vcpu_fbench.stdout.exp vcpu_fbench.stderr.exp vcpu_fbench.vgtest \
	vcpu_fnfns.stdout.exp vcpu_fnfns.stdout.exp-glibc28-amd64 \
	vcpu_fnfns.stdout.exp-darwin vcpu_fnfns.stdout.exp-solaris \
	vcpu_fnfns.stderr.exp vcpu_fnfns.vgtest \
	wcs.vgtest wcs.stderr.exp wcs.stdout.exp \
	wrap1.vgtest wrap1.stdout.exp wrap1.stderr.exp \
	wrap2.vgtest wrap2.stdout.exp wrap2.stderr.exp \
	wrap3.vgtest wrap3.stdout.exp wrap3.stderr.exp \
	wrap4.vgtest wrap4.stdout.exp wrap4.stderr.exp \
	wrap5.vgtest wrap5.stdout.exp wrap5.stderr.exp \
	wrap6.vgtest wrap6.stdout.exp wrap6.stderr.exp \
	wrap7.vgtest wrap7.stdout.exp wrap7.stderr.exp \
	wrap8.vgtest wrap8.stdout.exp wrap8.stderr.exp \
	wrap8.stdout.exp-ppc64 wrap8.stderr.exp-ppc64 \
	writev1.stderr.exp writev1.stderr.exp-solaris writev1.vgtest \
	xml1.stderr.exp xml1.stdout.exp xml1.vgtest xml1.stderr.exp-s390x-mvc \
	threadname.vgtest threadname.stderr.exp \
	threadname_xml.vgtest threadname_xml.stderr.exp

atomic_incs_CFLAGS = $(AM_CFLAGS)

#AM_CFLAGS   += -mfloat-abi=softfp
#AM_CXXFLAGS += -mfloat-abi=softfp
#atomic_incs_CFLAGS = $(AM_CFLAGS) -mdynamic-no-pic
#buflen_check_LDADD = -lsocket -lnsl
leak_cpp_interior_SOURCES = leak_cpp_interior.cpp
demangle_SOURCES = demangle.cpp
bug340392_CFLAGS = $(AM_CFLAGS) -O3
dw4_CFLAGS = $(AM_CFLAGS) -gdwarf-4 -fdebug-types-section
descr_belowsp_LDADD = -lpthread
err_disable3_LDADD = -lpthread
err_disable4_LDADD = -lpthread
err_disable4_CFLAGS = $(AM_CFLAGS) $(am__append_25)
reach_thread_register_CFLAGS = $(AM_CFLAGS) -O2
reach_thread_register_LDADD = -lpthread
thread_alloca_LDADD = -lpthread
threadname_LDADD = -lpthread
error_counts_CFLAGS = $(AM_CFLAGS) -Wno-uninitialized
execve1_CFLAGS = $(AM_CFLAGS) -Wno-nonnull
execve2_CFLAGS = $(AM_CFLAGS) -Wno-nonnull
fprw_CFLAGS = $(AM_CFLAGS) -Wno-uninitialized
inits_CFLAGS = $(AM_CFLAGS) -Wno-uninitialized
inlinfo_CFLAGS = $(AM_CFLAGS) -w
inltemplate_SOURCES = inltemplate.cpp
inltemplate_CXXFLAGS = $(AM_CXXFLAGS) -Wno-uninitialized
long_namespace_xml_SOURCES = long_namespace_xml.cpp
manuel1_CFLAGS = $(AM_CFLAGS) -Wno-uninitialized
memalign2_CFLAGS = $(AM_CFLAGS) $(am__append_26)
memcmptest_CFLAGS = $(AM_CFLAGS) -fno-builtin-memcmp
mismatches_SOURCES = mismatches.cpp
mismatches_CXXFLAGS = $(AM_CXXFLAGS) 
new_nothrow_SOURCES = new_nothrow.cpp
new_override_SOURCES = new_override.cpp
#null_socket_LDADD = -lsocket -lnsl
origin1_yes_CFLAGS = $(AM_CFLAGS) -Wno-uninitialized
origin2_not_quite_CFLAGS = $(AM_CFLAGS) -Wno-uninitialized
origin3_no_CFLAGS = $(AM_CFLAGS) -Wno-uninitialized

# This requires optimisation in order to get just one resulting error.
origin4_many_CFLAGS = $(AM_CFLAGS) -O

# Apply -O so as to run in reasonable time.
origin5_bz2_CFLAGS = $(AM_CFLAGS) -O -Wno-inline
origin6_fp_CFLAGS = $(AM_CFLAGS) -O

# Don't allow GCC to inline memcpy() and strcpy(),
# because then we can't intercept it
overlap_CFLAGS = $(AM_CFLAGS) -fno-builtin-memcpy -fno-builtin-strcpy
resvn_stack_CFLAGS = $(AM_CFLAGS) -Wno-uninitialized
sendmsg_CFLAGS = $(AM_CFLAGS) $(am__append_27)
#sendmsg_LDADD = -lsocket -lnsl
str_tester_CFLAGS = $(AM_CFLAGS) -Wno-shadow \
			  

supp_CFLAGS = $(AM_CFLAGS) -Wno-uninitialized
supp_unknown_SOURCES = badjump.c
supp_unknown_CFLAGS = $(AM_CFLAGS) -Wno-uninitialized
supp1_SOURCES = supp.c
supp1_CFLAGS = $(AM_CFLAGS) -Wno-uninitialized
supp2_SOURCES = supp.c
supp2_CFLAGS = $(AM_CFLAGS) -Wno-uninitialized
vcpu_bz2_CFLAGS = $(AM_CFLAGS) -O2
vcpu_fbench_CFLAGS = $(AM_CFLAGS) -O2
vcpu_fnfns_CFLAGS = $(AM_CFLAGS) -O2
vcpu_fnfns_LDADD = -lm
wrap6_CFLAGS = $(AM_CFLAGS) -O2

# To make it a bit more realistic, have some optimisation enabled
# for the varinfo tests.  We still expect sane results.
varinfo1_CFLAGS = $(AM_CFLAGS) -O
varinfo2_CFLAGS = $(AM_CFLAGS) -O -Wno-shadow
varinfo3_CFLAGS = $(AM_CFLAGS) -O
varinfo4_CFLAGS = $(AM_CFLAGS) -O
varinfo5_CFLAGS = $(AM_CFLAGS) -O
varinfo6_CFLAGS = $(AM_CFLAGS) -O

# Build shared object for varinfo5
varinfo5_SOURCES = varinfo5.c
varinfo5_DEPENDENCIES = varinfo5so.so
varinfo5_LDADD = varinfo5so.so
#varinfo5_LDADD = `pwd`/varinfo5so.so
varinfo5_LDFLAGS = $(AM_FLAG_M3264_PRI) \
				-Wl,-rpath,$(top_builddir)/memcheck/tests

#varinfo5_LDFLAGS = $(AM_FLAG_M3264_PRI)
varinfo5so_so_SOURCES = varinfo5so.c
varinfo5so_so_CFLAGS = $(AM_CFLAGS) -fpic -O -Wno-shadow
varinfo5so_so_LDFLAGS = -fpic $(AM_FLAG_M3264_PRI) -shared \
				-Wl,-soname -Wl,varinfo5so.so

#varinfo5so_so_LDFLAGS = -fpic $(AM_FLAG_M3264_PRI) -dynamic \
#				-dynamiclib -all_load

varinforestrict_CFLAGS = $(AM_CFLAGS) -O0 -g -std=c99

# Build shared object for wrap7
wrap7_SOURCES = wrap7.c
wrap7_DEPENDENCIES = wrap7so.so
wrap7_LDADD = wrap7so.so
#wrap7_LDADD = `pwd`/wrap7so.so
wrap7_LDFLAGS = $(AM_FLAG_M3264_PRI) \
				-Wl,-rpath,$(top_builddir)/memcheck/tests

#wrap7_LDFLAGS = $(AM_FLAG_M3264_PRI)
wrap7so_so_SOURCES = wrap7so.c
wrap7so_so_CFLAGS = $(AM_CFLAGS) -fpic
wrap7so_so_LDFLAGS = -fpic $(AM_FLAG_M3264_PRI) -shared \
				-Wl,-soname -Wl,wrap7so.so

#wrap7so_so_LDFLAGS = -fpic $(AM_FLAG_M3264_PRI) -dynamic \
#				-dynamiclib -all_load

xml1_CFLAGS = $(AM_CFLAGS) -D_GNU_SOURCE
all: all-recursive

.SUFFIXES:
.SUFFIXES: .c .cpp .o .obj
$(srcdir)/Makefile.in: # $(srcdir)/Makefile.am $(top_srcdir)/Makefile.tool-tests.am $(top_srcdir)/Makefile.all.am $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign memcheck/tests/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign memcheck/tests/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;
$(top_srcdir)/Makefile.tool-tests.am $(top_srcdir)/Makefile.all.am:

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: # $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): # $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-checkPROGRAMS:
	-test -z "$(check_PROGRAMS)" || rm -f $(check_PROGRAMS)

accounting$(EXEEXT): $(accounting_OBJECTS) $(accounting_DEPENDENCIES) $(EXTRA_accounting_DEPENDENCIES) 
	@rm -f accounting$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(accounting_OBJECTS) $(accounting_LDADD) $(LIBS)

addressable$(EXEEXT): $(addressable_OBJECTS) $(addressable_DEPENDENCIES) $(EXTRA_addressable_DEPENDENCIES) 
	@rm -f addressable$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(addressable_OBJECTS) $(addressable_LDADD) $(LIBS)

atomic_incs$(EXEEXT): $(atomic_incs_OBJECTS) $(atomic_incs_DEPENDENCIES) $(EXTRA_atomic_incs_DEPENDENCIES) 
	@rm -f atomic_incs$(EXEEXT)
	$(AM_V_CCLD)$(atomic_incs_LINK) $(atomic_incs_OBJECTS) $(atomic_incs_LDADD) $(LIBS)

badaddrvalue$(EXEEXT): $(badaddrvalue_OBJECTS) $(badaddrvalue_DEPENDENCIES) $(EXTRA_badaddrvalue_DEPENDENCIES) 
	@rm -f badaddrvalue$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(badaddrvalue_OBJECTS) $(badaddrvalue_LDADD) $(LIBS)

badfree$(EXEEXT): $(badfree_OBJECTS) $(badfree_DEPENDENCIES) $(EXTRA_badfree_DEPENDENCIES) 
	@rm -f badfree$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(badfree_OBJECTS) $(badfree_LDADD) $(LIBS)

badjump$(EXEEXT): $(badjump_OBJECTS) $(badjump_DEPENDENCIES) $(EXTRA_badjump_DEPENDENCIES) 
	@rm -f badjump$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(badjump_OBJECTS) $(badjump_LDADD) $(LIBS)

badjump2$(EXEEXT): $(badjump2_OBJECTS) $(badjump2_DEPENDENCIES) $(EXTRA_badjump2_DEPENDENCIES) 
	@rm -f badjump2$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(badjump2_OBJECTS) $(badjump2_LDADD) $(LIBS)

badloop$(EXEEXT): $(badloop_OBJECTS) $(badloop_DEPENDENCIES) $(EXTRA_badloop_DEPENDENCIES) 
	@rm -f badloop$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(badloop_OBJECTS) $(badloop_LDADD) $(LIBS)

badpoll$(EXEEXT): $(badpoll_OBJECTS) $(badpoll_DEPENDENCIES) $(EXTRA_badpoll_DEPENDENCIES) 
	@rm -f badpoll$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(badpoll_OBJECTS) $(badpoll_LDADD) $(LIBS)

badrw$(EXEEXT): $(badrw_OBJECTS) $(badrw_DEPENDENCIES) $(EXTRA_badrw_DEPENDENCIES) 
	@rm -f badrw$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(badrw_OBJECTS) $(badrw_LDADD) $(LIBS)

big_blocks_freed_list$(EXEEXT): $(big_blocks_freed_list_OBJECTS) $(big_blocks_freed_list_DEPENDENCIES) $(EXTRA_big_blocks_freed_list_DEPENDENCIES) 
	@rm -f big_blocks_freed_list$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(big_blocks_freed_list_OBJECTS) $(big_blocks_freed_list_LDADD) $(LIBS)

brk2$(EXEEXT): $(brk2_OBJECTS) $(brk2_DEPENDENCIES) $(EXTRA_brk2_DEPENDENCIES) 
	@rm -f brk2$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(brk2_OBJECTS) $(brk2_LDADD) $(LIBS)

buflen_check$(EXEEXT): $(buflen_check_OBJECTS) $(buflen_check_DEPENDENCIES) $(EXTRA_buflen_check_DEPENDENCIES) 
	@rm -f buflen_check$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(buflen_check_OBJECTS) $(buflen_check_LDADD) $(LIBS)

bug155125$(EXEEXT): $(bug155125_OBJECTS) $(bug155125_DEPENDENCIES) $(EXTRA_bug155125_DEPENDENCIES) 
	@rm -f bug155125$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(bug155125_OBJECTS) $(bug155125_LDADD) $(LIBS)

bug287260$(EXEEXT): $(bug287260_OBJECTS) $(bug287260_DEPENDENCIES) $(EXTRA_bug287260_DEPENDENCIES) 
	@rm -f bug287260$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(bug287260_OBJECTS) $(bug287260_LDADD) $(LIBS)

bug340392$(EXEEXT): $(bug340392_OBJECTS) $(bug340392_DEPENDENCIES) $(EXTRA_bug340392_DEPENDENCIES) 
	@rm -f bug340392$(EXEEXT)
	$(AM_V_CCLD)$(bug340392_LINK) $(bug340392_OBJECTS) $(bug340392_LDADD) $(LIBS)

calloc-overflow$(EXEEXT): $(calloc_overflow_OBJECTS) $(calloc_overflow_DEPENDENCIES) $(EXTRA_calloc_overflow_DEPENDENCIES) 
	@rm -f calloc-overflow$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(calloc_overflow_OBJECTS) $(calloc_overflow_LDADD) $(LIBS)

client-msg$(EXEEXT): $(client_msg_OBJECTS) $(client_msg_DEPENDENCIES) $(EXTRA_client_msg_DEPENDENCIES) 
	@rm -f client-msg$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(client_msg_OBJECTS) $(client_msg_LDADD) $(LIBS)

clientperm$(EXEEXT): $(clientperm_OBJECTS) $(clientperm_DEPENDENCIES) $(EXTRA_clientperm_DEPENDENCIES) 
	@rm -f clientperm$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(clientperm_OBJECTS) $(clientperm_LDADD) $(LIBS)

clireq_nofill$(EXEEXT): $(clireq_nofill_OBJECTS) $(clireq_nofill_DEPENDENCIES) $(EXTRA_clireq_nofill_DEPENDENCIES) 
	@rm -f clireq_nofill$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(clireq_nofill_OBJECTS) $(clireq_nofill_LDADD) $(LIBS)

clo_redzone$(EXEEXT): $(clo_redzone_OBJECTS) $(clo_redzone_DEPENDENCIES) $(EXTRA_clo_redzone_DEPENDENCIES) 
	@rm -f clo_redzone$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(clo_redzone_OBJECTS) $(clo_redzone_LDADD) $(LIBS)

cond_ld_st$(EXEEXT): $(cond_ld_st_OBJECTS) $(cond_ld_st_DEPENDENCIES) $(EXTRA_cond_ld_st_DEPENDENCIES) 
	@rm -f cond_ld_st$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(cond_ld_st_OBJECTS) $(cond_ld_st_LDADD) $(LIBS)

custom-overlap$(EXEEXT): $(custom_overlap_OBJECTS) $(custom_overlap_DEPENDENCIES) $(EXTRA_custom_overlap_DEPENDENCIES) 
	@rm -f custom-overlap$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(custom_overlap_OBJECTS) $(custom_overlap_LDADD) $(LIBS)

custom_alloc$(EXEEXT): $(custom_alloc_OBJECTS) $(custom_alloc_DEPENDENCIES) $(EXTRA_custom_alloc_DEPENDENCIES) 
	@rm -f custom_alloc$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(custom_alloc_OBJECTS) $(custom_alloc_LDADD) $(LIBS)

deep-backtrace$(EXEEXT): $(deep_backtrace_OBJECTS) $(deep_backtrace_DEPENDENCIES) $(EXTRA_deep_backtrace_DEPENDENCIES) 
	@rm -f deep-backtrace$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(deep_backtrace_OBJECTS) $(deep_backtrace_LDADD) $(LIBS)

demangle$(EXEEXT): $(demangle_OBJECTS) $(demangle_DEPENDENCIES) $(EXTRA_demangle_DEPENDENCIES) 
	@rm -f demangle$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(demangle_OBJECTS) $(demangle_LDADD) $(LIBS)

descr_belowsp$(EXEEXT): $(descr_belowsp_OBJECTS) $(descr_belowsp_DEPENDENCIES) $(EXTRA_descr_belowsp_DEPENDENCIES) 
	@rm -f descr_belowsp$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(descr_belowsp_OBJECTS) $(descr_belowsp_LDADD) $(LIBS)

describe-block$(EXEEXT): $(describe_block_OBJECTS) $(describe_block_DEPENDENCIES) $(EXTRA_describe_block_DEPENDENCIES) 
	@rm -f describe-block$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(describe_block_OBJECTS) $(describe_block_LDADD) $(LIBS)

doublefree$(EXEEXT): $(doublefree_OBJECTS) $(doublefree_DEPENDENCIES) $(EXTRA_doublefree_DEPENDENCIES) 
	@rm -f doublefree$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(doublefree_OBJECTS) $(doublefree_LDADD) $(LIBS)

dw4$(EXEEXT): $(dw4_OBJECTS) $(dw4_DEPENDENCIES) $(EXTRA_dw4_DEPENDENCIES) 
	@rm -f dw4$(EXEEXT)
	$(AM_V_CCLD)$(dw4_LINK) $(dw4_OBJECTS) $(dw4_LDADD) $(LIBS)

err_disable1$(EXEEXT): $(err_disable1_OBJECTS) $(err_disable1_DEPENDENCIES) $(EXTRA_err_disable1_DEPENDENCIES) 
	@rm -f err_disable1$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(err_disable1_OBJECTS) $(err_disable1_LDADD) $(LIBS)

err_disable2$(EXEEXT): $(err_disable2_OBJECTS) $(err_disable2_DEPENDENCIES) $(EXTRA_err_disable2_DEPENDENCIES) 
	@rm -f err_disable2$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(err_disable2_OBJECTS) $(err_disable2_LDADD) $(LIBS)

err_disable3$(EXEEXT): $(err_disable3_OBJECTS) $(err_disable3_DEPENDENCIES) $(EXTRA_err_disable3_DEPENDENCIES) 
	@rm -f err_disable3$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(err_disable3_OBJECTS) $(err_disable3_LDADD) $(LIBS)

err_disable4$(EXEEXT): $(err_disable4_OBJECTS) $(err_disable4_DEPENDENCIES) $(EXTRA_err_disable4_DEPENDENCIES) 
	@rm -f err_disable4$(EXEEXT)
	$(AM_V_CCLD)$(err_disable4_LINK) $(err_disable4_OBJECTS) $(err_disable4_LDADD) $(LIBS)

err_disable_arange1$(EXEEXT): $(err_disable_arange1_OBJECTS) $(err_disable_arange1_DEPENDENCIES) $(EXTRA_err_disable_arange1_DEPENDENCIES) 
	@rm -f err_disable_arange1$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(err_disable_arange1_OBJECTS) $(err_disable_arange1_LDADD) $(LIBS)

erringfds$(EXEEXT): $(erringfds_OBJECTS) $(erringfds_DEPENDENCIES) $(EXTRA_erringfds_DEPENDENCIES) 
	@rm -f erringfds$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(erringfds_OBJECTS) $(erringfds_LDADD) $(LIBS)

error_counts$(EXEEXT): $(error_counts_OBJECTS) $(error_counts_DEPENDENCIES) $(EXTRA_error_counts_DEPENDENCIES) 
	@rm -f error_counts$(EXEEXT)
	$(AM_V_CCLD)$(error_counts_LINK) $(error_counts_OBJECTS) $(error_counts_LDADD) $(LIBS)

errs1$(EXEEXT): $(errs1_OBJECTS) $(errs1_DEPENDENCIES) $(EXTRA_errs1_DEPENDENCIES) 
	@rm -f errs1$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(errs1_OBJECTS) $(errs1_LDADD) $(LIBS)

execve1$(EXEEXT): $(execve1_OBJECTS) $(execve1_DEPENDENCIES) $(EXTRA_execve1_DEPENDENCIES) 
	@rm -f execve1$(EXEEXT)
	$(AM_V_CCLD)$(execve1_LINK) $(execve1_OBJECTS) $(execve1_LDADD) $(LIBS)

execve2$(EXEEXT): $(execve2_OBJECTS) $(execve2_DEPENDENCIES) $(EXTRA_execve2_DEPENDENCIES) 
	@rm -f execve2$(EXEEXT)
	$(AM_V_CCLD)$(execve2_LINK) $(execve2_OBJECTS) $(execve2_LDADD) $(LIBS)

exitprog$(EXEEXT): $(exitprog_OBJECTS) $(exitprog_DEPENDENCIES) $(EXTRA_exitprog_DEPENDENCIES) 
	@rm -f exitprog$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(exitprog_OBJECTS) $(exitprog_LDADD) $(LIBS)

file_locking$(EXEEXT): $(file_locking_OBJECTS) $(file_locking_DEPENDENCIES) $(EXTRA_file_locking_DEPENDENCIES) 
	@rm -f file_locking$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(file_locking_OBJECTS) $(file_locking_LDADD) $(LIBS)

fprw$(EXEEXT): $(fprw_OBJECTS) $(fprw_DEPENDENCIES) $(EXTRA_fprw_DEPENDENCIES) 
	@rm -f fprw$(EXEEXT)
	$(AM_V_CCLD)$(fprw_LINK) $(fprw_OBJECTS) $(fprw_LDADD) $(LIBS)

fwrite$(EXEEXT): $(fwrite_OBJECTS) $(fwrite_DEPENDENCIES) $(EXTRA_fwrite_DEPENDENCIES) 
	@rm -f fwrite$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(fwrite_OBJECTS) $(fwrite_LDADD) $(LIBS)

holey_buffer_too_small$(EXEEXT): $(holey_buffer_too_small_OBJECTS) $(holey_buffer_too_small_DEPENDENCIES) $(EXTRA_holey_buffer_too_small_DEPENDENCIES) 
	@rm -f holey_buffer_too_small$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(holey_buffer_too_small_OBJECTS) $(holey_buffer_too_small_LDADD) $(LIBS)

inits$(EXEEXT): $(inits_OBJECTS) $(inits_DEPENDENCIES) $(EXTRA_inits_DEPENDENCIES) 
	@rm -f inits$(EXEEXT)
	$(AM_V_CCLD)$(inits_LINK) $(inits_OBJECTS) $(inits_LDADD) $(LIBS)

inline$(EXEEXT): $(inline_OBJECTS) $(inline_DEPENDENCIES) $(EXTRA_inline_DEPENDENCIES) 
	@rm -f inline$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(inline_OBJECTS) $(inline_LDADD) $(LIBS)

inlinfo$(EXEEXT): $(inlinfo_OBJECTS) $(inlinfo_DEPENDENCIES) $(EXTRA_inlinfo_DEPENDENCIES) 
	@rm -f inlinfo$(EXEEXT)
	$(AM_V_CCLD)$(inlinfo_LINK) $(inlinfo_OBJECTS) $(inlinfo_LDADD) $(LIBS)

inltemplate$(EXEEXT): $(inltemplate_OBJECTS) $(inltemplate_DEPENDENCIES) $(EXTRA_inltemplate_DEPENDENCIES) 
	@rm -f inltemplate$(EXEEXT)
	$(AM_V_CXXLD)$(inltemplate_LINK) $(inltemplate_OBJECTS) $(inltemplate_LDADD) $(LIBS)

leak-0$(EXEEXT): $(leak_0_OBJECTS) $(leak_0_DEPENDENCIES) $(EXTRA_leak_0_DEPENDENCIES) 
	@rm -f leak-0$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(leak_0_OBJECTS) $(leak_0_LDADD) $(LIBS)

leak-cases$(EXEEXT): $(leak_cases_OBJECTS) $(leak_cases_DEPENDENCIES) $(EXTRA_leak_cases_DEPENDENCIES) 
	@rm -f leak-cases$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(leak_cases_OBJECTS) $(leak_cases_LDADD) $(LIBS)

leak-cycle$(EXEEXT): $(leak_cycle_OBJECTS) $(leak_cycle_DEPENDENCIES) $(EXTRA_leak_cycle_DEPENDENCIES) 
	@rm -f leak-cycle$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(leak_cycle_OBJECTS) $(leak_cycle_LDADD) $(LIBS)

leak-delta$(EXEEXT): $(leak_delta_OBJECTS) $(leak_delta_DEPENDENCIES) $(EXTRA_leak_delta_DEPENDENCIES) 
	@rm -f leak-delta$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(leak_delta_OBJECTS) $(leak_delta_LDADD) $(LIBS)

leak-pool$(EXEEXT): $(leak_pool_OBJECTS) $(leak_pool_DEPENDENCIES) $(EXTRA_leak_pool_DEPENDENCIES) 
	@rm -f leak-pool$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(leak_pool_OBJECTS) $(leak_pool_LDADD) $(LIBS)

leak-segv-jmp$(EXEEXT): $(leak_segv_jmp_OBJECTS) $(leak_segv_jmp_DEPENDENCIES) $(EXTRA_leak_segv_jmp_DEPENDENCIES) 
	@rm -f leak-segv-jmp$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(leak_segv_jmp_OBJECTS) $(leak_segv_jmp_LDADD) $(LIBS)

leak-tree$(EXEEXT): $(leak_tree_OBJECTS) $(leak_tree_DEPENDENCIES) $(EXTRA_leak_tree_DEPENDENCIES) 
	@rm -f leak-tree$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(leak_tree_OBJECTS) $(leak_tree_LDADD) $(LIBS)

leak_cpp_interior$(EXEEXT): $(leak_cpp_interior_OBJECTS) $(leak_cpp_interior_DEPENDENCIES) $(EXTRA_leak_cpp_interior_DEPENDENCIES) 
	@rm -f leak_cpp_interior$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(leak_cpp_interior_OBJECTS) $(leak_cpp_interior_LDADD) $(LIBS)

long-supps$(EXEEXT): $(long_supps_OBJECTS) $(long_supps_DEPENDENCIES) $(EXTRA_long_supps_DEPENDENCIES) 
	@rm -f long-supps$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(long_supps_OBJECTS) $(long_supps_LDADD) $(LIBS)

long_namespace_xml$(EXEEXT): $(long_namespace_xml_OBJECTS) $(long_namespace_xml_DEPENDENCIES) $(EXTRA_long_namespace_xml_DEPENDENCIES) 
	@rm -f long_namespace_xml$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(long_namespace_xml_OBJECTS) $(long_namespace_xml_LDADD) $(LIBS)

mallinfo$(EXEEXT): $(mallinfo_OBJECTS) $(mallinfo_DEPENDENCIES) $(EXTRA_mallinfo_DEPENDENCIES) 
	@rm -f mallinfo$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(mallinfo_OBJECTS) $(mallinfo_LDADD) $(LIBS)

malloc1$(EXEEXT): $(malloc1_OBJECTS) $(malloc1_DEPENDENCIES) $(EXTRA_malloc1_DEPENDENCIES) 
	@rm -f malloc1$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(malloc1_OBJECTS) $(malloc1_LDADD) $(LIBS)

malloc2$(EXEEXT): $(malloc2_OBJECTS) $(malloc2_DEPENDENCIES) $(EXTRA_malloc2_DEPENDENCIES) 
	@rm -f malloc2$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(malloc2_OBJECTS) $(malloc2_LDADD) $(LIBS)

malloc3$(EXEEXT): $(malloc3_OBJECTS) $(malloc3_DEPENDENCIES) $(EXTRA_malloc3_DEPENDENCIES) 
	@rm -f malloc3$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(malloc3_OBJECTS) $(malloc3_LDADD) $(LIBS)

malloc_free_fill$(EXEEXT): $(malloc_free_fill_OBJECTS) $(malloc_free_fill_DEPENDENCIES) $(EXTRA_malloc_free_fill_DEPENDENCIES) 
	@rm -f malloc_free_fill$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(malloc_free_fill_OBJECTS) $(malloc_free_fill_LDADD) $(LIBS)

malloc_usable$(EXEEXT): $(malloc_usable_OBJECTS) $(malloc_usable_DEPENDENCIES) $(EXTRA_malloc_usable_DEPENDENCIES) 
	@rm -f malloc_usable$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(malloc_usable_OBJECTS) $(malloc_usable_LDADD) $(LIBS)

manuel1$(EXEEXT): $(manuel1_OBJECTS) $(manuel1_DEPENDENCIES) $(EXTRA_manuel1_DEPENDENCIES) 
	@rm -f manuel1$(EXEEXT)
	$(AM_V_CCLD)$(manuel1_LINK) $(manuel1_OBJECTS) $(manuel1_LDADD) $(LIBS)

manuel2$(EXEEXT): $(manuel2_OBJECTS) $(manuel2_DEPENDENCIES) $(EXTRA_manuel2_DEPENDENCIES) 
	@rm -f manuel2$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(manuel2_OBJECTS) $(manuel2_LDADD) $(LIBS)

manuel3$(EXEEXT): $(manuel3_OBJECTS) $(manuel3_DEPENDENCIES) $(EXTRA_manuel3_DEPENDENCIES) 
	@rm -f manuel3$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(manuel3_OBJECTS) $(manuel3_LDADD) $(LIBS)

match-overrun$(EXEEXT): $(match_overrun_OBJECTS) $(match_overrun_DEPENDENCIES) $(EXTRA_match_overrun_DEPENDENCIES) 
	@rm -f match-overrun$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(match_overrun_OBJECTS) $(match_overrun_LDADD) $(LIBS)

memalign2$(EXEEXT): $(memalign2_OBJECTS) $(memalign2_DEPENDENCIES) $(EXTRA_memalign2_DEPENDENCIES) 
	@rm -f memalign2$(EXEEXT)
	$(AM_V_CCLD)$(memalign2_LINK) $(memalign2_OBJECTS) $(memalign2_LDADD) $(LIBS)

memalign_test$(EXEEXT): $(memalign_test_OBJECTS) $(memalign_test_DEPENDENCIES) $(EXTRA_memalign_test_DEPENDENCIES) 
	@rm -f memalign_test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(memalign_test_OBJECTS) $(memalign_test_LDADD) $(LIBS)

memcmptest$(EXEEXT): $(memcmptest_OBJECTS) $(memcmptest_DEPENDENCIES) $(EXTRA_memcmptest_DEPENDENCIES) 
	@rm -f memcmptest$(EXEEXT)
	$(AM_V_CCLD)$(memcmptest_LINK) $(memcmptest_OBJECTS) $(memcmptest_LDADD) $(LIBS)

mempool$(EXEEXT): $(mempool_OBJECTS) $(mempool_DEPENDENCIES) $(EXTRA_mempool_DEPENDENCIES) 
	@rm -f mempool$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(mempool_OBJECTS) $(mempool_LDADD) $(LIBS)

mempool2$(EXEEXT): $(mempool2_OBJECTS) $(mempool2_DEPENDENCIES) $(EXTRA_mempool2_DEPENDENCIES) 
	@rm -f mempool2$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(mempool2_OBJECTS) $(mempool2_LDADD) $(LIBS)

metadata$(EXEEXT): $(metadata_OBJECTS) $(metadata_DEPENDENCIES) $(EXTRA_metadata_DEPENDENCIES) 
	@rm -f metadata$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(metadata_OBJECTS) $(metadata_LDADD) $(LIBS)

mismatches$(EXEEXT): $(mismatches_OBJECTS) $(mismatches_DEPENDENCIES) $(EXTRA_mismatches_DEPENDENCIES) 
	@rm -f mismatches$(EXEEXT)
	$(AM_V_CXXLD)$(mismatches_LINK) $(mismatches_OBJECTS) $(mismatches_LDADD) $(LIBS)

mmaptest$(EXEEXT): $(mmaptest_OBJECTS) $(mmaptest_DEPENDENCIES) $(EXTRA_mmaptest_DEPENDENCIES) 
	@rm -f mmaptest$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(mmaptest_OBJECTS) $(mmaptest_LDADD) $(LIBS)

nanoleak2$(EXEEXT): $(nanoleak2_OBJECTS) $(nanoleak2_DEPENDENCIES) $(EXTRA_nanoleak2_DEPENDENCIES) 
	@rm -f nanoleak2$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(nanoleak2_OBJECTS) $(nanoleak2_LDADD) $(LIBS)

nanoleak_supp$(EXEEXT): $(nanoleak_supp_OBJECTS) $(nanoleak_supp_DEPENDENCIES) $(EXTRA_nanoleak_supp_DEPENDENCIES) 
	@rm -f nanoleak_supp$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(nanoleak_supp_OBJECTS) $(nanoleak_supp_LDADD) $(LIBS)

new_nothrow$(EXEEXT): $(new_nothrow_OBJECTS) $(new_nothrow_DEPENDENCIES) $(EXTRA_new_nothrow_DEPENDENCIES) 
	@rm -f new_nothrow$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(new_nothrow_OBJECTS) $(new_nothrow_LDADD) $(LIBS)

new_override$(EXEEXT): $(new_override_OBJECTS) $(new_override_DEPENDENCIES) $(EXTRA_new_override_DEPENDENCIES) 
	@rm -f new_override$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(new_override_OBJECTS) $(new_override_LDADD) $(LIBS)

noisy_child$(EXEEXT): $(noisy_child_OBJECTS) $(noisy_child_DEPENDENCIES) $(EXTRA_noisy_child_DEPENDENCIES) 
	@rm -f noisy_child$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(noisy_child_OBJECTS) $(noisy_child_LDADD) $(LIBS)

null_socket$(EXEEXT): $(null_socket_OBJECTS) $(null_socket_DEPENDENCIES) $(EXTRA_null_socket_DEPENDENCIES) 
	@rm -f null_socket$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(null_socket_OBJECTS) $(null_socket_LDADD) $(LIBS)

origin1-yes$(EXEEXT): $(origin1_yes_OBJECTS) $(origin1_yes_DEPENDENCIES) $(EXTRA_origin1_yes_DEPENDENCIES) 
	@rm -f origin1-yes$(EXEEXT)
	$(AM_V_CCLD)$(origin1_yes_LINK) $(origin1_yes_OBJECTS) $(origin1_yes_LDADD) $(LIBS)

origin2-not-quite$(EXEEXT): $(origin2_not_quite_OBJECTS) $(origin2_not_quite_DEPENDENCIES) $(EXTRA_origin2_not_quite_DEPENDENCIES) 
	@rm -f origin2-not-quite$(EXEEXT)
	$(AM_V_CCLD)$(origin2_not_quite_LINK) $(origin2_not_quite_OBJECTS) $(origin2_not_quite_LDADD) $(LIBS)

origin3-no$(EXEEXT): $(origin3_no_OBJECTS) $(origin3_no_DEPENDENCIES) $(EXTRA_origin3_no_DEPENDENCIES) 
	@rm -f origin3-no$(EXEEXT)
	$(AM_V_CCLD)$(origin3_no_LINK) $(origin3_no_OBJECTS) $(origin3_no_LDADD) $(LIBS)

origin4-many$(EXEEXT): $(origin4_many_OBJECTS) $(origin4_many_DEPENDENCIES) $(EXTRA_origin4_many_DEPENDENCIES) 
	@rm -f origin4-many$(EXEEXT)
	$(AM_V_CCLD)$(origin4_many_LINK) $(origin4_many_OBJECTS) $(origin4_many_LDADD) $(LIBS)

origin5-bz2$(EXEEXT): $(origin5_bz2_OBJECTS) $(origin5_bz2_DEPENDENCIES) $(EXTRA_origin5_bz2_DEPENDENCIES) 
	@rm -f origin5-bz2$(EXEEXT)
	$(AM_V_CCLD)$(origin5_bz2_LINK) $(origin5_bz2_OBJECTS) $(origin5_bz2_LDADD) $(LIBS)

origin6-fp$(EXEEXT): $(origin6_fp_OBJECTS) $(origin6_fp_DEPENDENCIES) $(EXTRA_origin6_fp_DEPENDENCIES) 
	@rm -f origin6-fp$(EXEEXT)
	$(AM_V_CCLD)$(origin6_fp_LINK) $(origin6_fp_OBJECTS) $(origin6_fp_LDADD) $(LIBS)

overlap$(EXEEXT): $(overlap_OBJECTS) $(overlap_DEPENDENCIES) $(EXTRA_overlap_DEPENDENCIES) 
	@rm -f overlap$(EXEEXT)
	$(AM_V_CCLD)$(overlap_LINK) $(overlap_OBJECTS) $(overlap_LDADD) $(LIBS)

partial_load$(EXEEXT): $(partial_load_OBJECTS) $(partial_load_DEPENDENCIES) $(EXTRA_partial_load_DEPENDENCIES) 
	@rm -f partial_load$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(partial_load_OBJECTS) $(partial_load_LDADD) $(LIBS)

partiallydefinedeq$(EXEEXT): $(partiallydefinedeq_OBJECTS) $(partiallydefinedeq_DEPENDENCIES) $(EXTRA_partiallydefinedeq_DEPENDENCIES) 
	@rm -f partiallydefinedeq$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(partiallydefinedeq_OBJECTS) $(partiallydefinedeq_LDADD) $(LIBS)

pdb-realloc$(EXEEXT): $(pdb_realloc_OBJECTS) $(pdb_realloc_DEPENDENCIES) $(EXTRA_pdb_realloc_DEPENDENCIES) 
	@rm -f pdb-realloc$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(pdb_realloc_OBJECTS) $(pdb_realloc_LDADD) $(LIBS)

pdb-realloc2$(EXEEXT): $(pdb_realloc2_OBJECTS) $(pdb_realloc2_DEPENDENCIES) $(EXTRA_pdb_realloc2_DEPENDENCIES) 
	@rm -f pdb-realloc2$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(pdb_realloc2_OBJECTS) $(pdb_realloc2_LDADD) $(LIBS)

pipe$(EXEEXT): $(pipe_OBJECTS) $(pipe_DEPENDENCIES) $(EXTRA_pipe_DEPENDENCIES) 
	@rm -f pipe$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(pipe_OBJECTS) $(pipe_LDADD) $(LIBS)

pointer-trace$(EXEEXT): $(pointer_trace_OBJECTS) $(pointer_trace_DEPENDENCIES) $(EXTRA_pointer_trace_DEPENDENCIES) 
	@rm -f pointer-trace$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(pointer_trace_OBJECTS) $(pointer_trace_LDADD) $(LIBS)

post-syscall$(EXEEXT): $(post_syscall_OBJECTS) $(post_syscall_DEPENDENCIES) $(EXTRA_post_syscall_DEPENDENCIES) 
	@rm -f post-syscall$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(post_syscall_OBJECTS) $(post_syscall_LDADD) $(LIBS)

reach_thread_register$(EXEEXT): $(reach_thread_register_OBJECTS) $(reach_thread_register_DEPENDENCIES) $(EXTRA_reach_thread_register_DEPENDENCIES) 
	@rm -f reach_thread_register$(EXEEXT)
	$(AM_V_CCLD)$(reach_thread_register_LINK) $(reach_thread_register_OBJECTS) $(reach_thread_register_LDADD) $(LIBS)

realloc1$(EXEEXT): $(realloc1_OBJECTS) $(realloc1_DEPENDENCIES) $(EXTRA_realloc1_DEPENDENCIES) 
	@rm -f realloc1$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(realloc1_OBJECTS) $(realloc1_LDADD) $(LIBS)

realloc2$(EXEEXT): $(realloc2_OBJECTS) $(realloc2_DEPENDENCIES) $(EXTRA_realloc2_DEPENDENCIES) 
	@rm -f realloc2$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(realloc2_OBJECTS) $(realloc2_LDADD) $(LIBS)

realloc3$(EXEEXT): $(realloc3_OBJECTS) $(realloc3_DEPENDENCIES) $(EXTRA_realloc3_DEPENDENCIES) 
	@rm -f realloc3$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(realloc3_OBJECTS) $(realloc3_LDADD) $(LIBS)

recursive-merge$(EXEEXT): $(recursive_merge_OBJECTS) $(recursive_merge_DEPENDENCIES) $(EXTRA_recursive_merge_DEPENDENCIES) 
	@rm -f recursive-merge$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(recursive_merge_OBJECTS) $(recursive_merge_LDADD) $(LIBS)

resvn_stack$(EXEEXT): $(resvn_stack_OBJECTS) $(resvn_stack_DEPENDENCIES) $(EXTRA_resvn_stack_DEPENDENCIES) 
	@rm -f resvn_stack$(EXEEXT)
	$(AM_V_CCLD)$(resvn_stack_LINK) $(resvn_stack_OBJECTS) $(resvn_stack_LDADD) $(LIBS)

sbfragment$(EXEEXT): $(sbfragment_OBJECTS) $(sbfragment_DEPENDENCIES) $(EXTRA_sbfragment_DEPENDENCIES) 
	@rm -f sbfragment$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(sbfragment_OBJECTS) $(sbfragment_LDADD) $(LIBS)

sendmsg$(EXEEXT): $(sendmsg_OBJECTS) $(sendmsg_DEPENDENCIES) $(EXTRA_sendmsg_DEPENDENCIES) 
	@rm -f sendmsg$(EXEEXT)
	$(AM_V_CCLD)$(sendmsg_LINK) $(sendmsg_OBJECTS) $(sendmsg_LDADD) $(LIBS)

sh-mem$(EXEEXT): $(sh_mem_OBJECTS) $(sh_mem_DEPENDENCIES) $(EXTRA_sh_mem_DEPENDENCIES) 
	@rm -f sh-mem$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(sh_mem_OBJECTS) $(sh_mem_LDADD) $(LIBS)

sh-mem-random$(EXEEXT): $(sh_mem_random_OBJECTS) $(sh_mem_random_DEPENDENCIES) $(EXTRA_sh_mem_random_DEPENDENCIES) 
	@rm -f sh-mem-random$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(sh_mem_random_OBJECTS) $(sh_mem_random_LDADD) $(LIBS)

sigaltstack$(EXEEXT): $(sigaltstack_OBJECTS) $(sigaltstack_DEPENDENCIES) $(EXTRA_sigaltstack_DEPENDENCIES) 
	@rm -f sigaltstack$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(sigaltstack_OBJECTS) $(sigaltstack_LDADD) $(LIBS)

sigkill$(EXEEXT): $(sigkill_OBJECTS) $(sigkill_DEPENDENCIES) $(EXTRA_sigkill_DEPENDENCIES) 
	@rm -f sigkill$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(sigkill_OBJECTS) $(sigkill_LDADD) $(LIBS)

signal2$(EXEEXT): $(signal2_OBJECTS) $(signal2_DEPENDENCIES) $(EXTRA_signal2_DEPENDENCIES) 
	@rm -f signal2$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(signal2_OBJECTS) $(signal2_LDADD) $(LIBS)

sigprocmask$(EXEEXT): $(sigprocmask_OBJECTS) $(sigprocmask_DEPENDENCIES) $(EXTRA_sigprocmask_DEPENDENCIES) 
	@rm -f sigprocmask$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(sigprocmask_OBJECTS) $(sigprocmask_LDADD) $(LIBS)

static_malloc$(EXEEXT): $(static_malloc_OBJECTS) $(static_malloc_DEPENDENCIES) $(EXTRA_static_malloc_DEPENDENCIES) 
	@rm -f static_malloc$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(static_malloc_OBJECTS) $(static_malloc_LDADD) $(LIBS)

stpncpy$(EXEEXT): $(stpncpy_OBJECTS) $(stpncpy_DEPENDENCIES) $(EXTRA_stpncpy_DEPENDENCIES) 
	@rm -f stpncpy$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(stpncpy_OBJECTS) $(stpncpy_LDADD) $(LIBS)

str_tester$(EXEEXT): $(str_tester_OBJECTS) $(str_tester_DEPENDENCIES) $(EXTRA_str_tester_DEPENDENCIES) 
	@rm -f str_tester$(EXEEXT)
	$(AM_V_CCLD)$(str_tester_LINK) $(str_tester_OBJECTS) $(str_tester_LDADD) $(LIBS)

strchr$(EXEEXT): $(strchr_OBJECTS) $(strchr_DEPENDENCIES) $(EXTRA_strchr_DEPENDENCIES) 
	@rm -f strchr$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(strchr_OBJECTS) $(strchr_LDADD) $(LIBS)

supp1$(EXEEXT): $(supp1_OBJECTS) $(supp1_DEPENDENCIES) $(EXTRA_supp1_DEPENDENCIES) 
	@rm -f supp1$(EXEEXT)
	$(AM_V_CCLD)$(supp1_LINK) $(supp1_OBJECTS) $(supp1_LDADD) $(LIBS)

supp2$(EXEEXT): $(supp2_OBJECTS) $(supp2_DEPENDENCIES) $(EXTRA_supp2_DEPENDENCIES) 
	@rm -f supp2$(EXEEXT)
	$(AM_V_CCLD)$(supp2_LINK) $(supp2_OBJECTS) $(supp2_LDADD) $(LIBS)

supp_unknown$(EXEEXT): $(supp_unknown_OBJECTS) $(supp_unknown_DEPENDENCIES) $(EXTRA_supp_unknown_DEPENDENCIES) 
	@rm -f supp_unknown$(EXEEXT)
	$(AM_V_CCLD)$(supp_unknown_LINK) $(supp_unknown_OBJECTS) $(supp_unknown_LDADD) $(LIBS)

suppfree$(EXEEXT): $(suppfree_OBJECTS) $(suppfree_DEPENDENCIES) $(EXTRA_suppfree_DEPENDENCIES) 
	@rm -f suppfree$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(suppfree_OBJECTS) $(suppfree_LDADD) $(LIBS)

test-plo$(EXEEXT): $(test_plo_OBJECTS) $(test_plo_DEPENDENCIES) $(EXTRA_test_plo_DEPENDENCIES) 
	@rm -f test-plo$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_plo_OBJECTS) $(test_plo_LDADD) $(LIBS)

thread_alloca$(EXEEXT): $(thread_alloca_OBJECTS) $(thread_alloca_DEPENDENCIES) $(EXTRA_thread_alloca_DEPENDENCIES) 
	@rm -f thread_alloca$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(thread_alloca_OBJECTS) $(thread_alloca_LDADD) $(LIBS)

threadname$(EXEEXT): $(threadname_OBJECTS) $(threadname_DEPENDENCIES) $(EXTRA_threadname_DEPENDENCIES) 
	@rm -f threadname$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(threadname_OBJECTS) $(threadname_LDADD) $(LIBS)

trivialleak$(EXEEXT): $(trivialleak_OBJECTS) $(trivialleak_DEPENDENCIES) $(EXTRA_trivialleak_DEPENDENCIES) 
	@rm -f trivialleak$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(trivialleak_OBJECTS) $(trivialleak_LDADD) $(LIBS)

undef_malloc_args$(EXEEXT): $(undef_malloc_args_OBJECTS) $(undef_malloc_args_DEPENDENCIES) $(EXTRA_undef_malloc_args_DEPENDENCIES) 
	@rm -f undef_malloc_args$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(undef_malloc_args_OBJECTS) $(undef_malloc_args_LDADD) $(LIBS)

unit_libcbase$(EXEEXT): $(unit_libcbase_OBJECTS) $(unit_libcbase_DEPENDENCIES) $(EXTRA_unit_libcbase_DEPENDENCIES) 
	@rm -f unit_libcbase$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(unit_libcbase_OBJECTS) $(unit_libcbase_LDADD) $(LIBS)

unit_oset$(EXEEXT): $(unit_oset_OBJECTS) $(unit_oset_DEPENDENCIES) $(EXTRA_unit_oset_DEPENDENCIES) 
	@rm -f unit_oset$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(unit_oset_OBJECTS) $(unit_oset_LDADD) $(LIBS)

varinfo1$(EXEEXT): $(varinfo1_OBJECTS) $(varinfo1_DEPENDENCIES) $(EXTRA_varinfo1_DEPENDENCIES) 
	@rm -f varinfo1$(EXEEXT)
	$(AM_V_CCLD)$(varinfo1_LINK) $(varinfo1_OBJECTS) $(varinfo1_LDADD) $(LIBS)

varinfo2$(EXEEXT): $(varinfo2_OBJECTS) $(varinfo2_DEPENDENCIES) $(EXTRA_varinfo2_DEPENDENCIES) 
	@rm -f varinfo2$(EXEEXT)
	$(AM_V_CCLD)$(varinfo2_LINK) $(varinfo2_OBJECTS) $(varinfo2_LDADD) $(LIBS)

varinfo3$(EXEEXT): $(varinfo3_OBJECTS) $(varinfo3_DEPENDENCIES) $(EXTRA_varinfo3_DEPENDENCIES) 
	@rm -f varinfo3$(EXEEXT)
	$(AM_V_CCLD)$(varinfo3_LINK) $(varinfo3_OBJECTS) $(varinfo3_LDADD) $(LIBS)

varinfo4$(EXEEXT): $(varinfo4_OBJECTS) $(varinfo4_DEPENDENCIES) $(EXTRA_varinfo4_DEPENDENCIES) 
	@rm -f varinfo4$(EXEEXT)
	$(AM_V_CCLD)$(varinfo4_LINK) $(varinfo4_OBJECTS) $(varinfo4_LDADD) $(LIBS)

varinfo5$(EXEEXT): $(varinfo5_OBJECTS) $(varinfo5_DEPENDENCIES) $(EXTRA_varinfo5_DEPENDENCIES) 
	@rm -f varinfo5$(EXEEXT)
	$(AM_V_CCLD)$(varinfo5_LINK) $(varinfo5_OBJECTS) $(varinfo5_LDADD) $(LIBS)

varinfo5so.so$(EXEEXT): $(varinfo5so_so_OBJECTS) $(varinfo5so_so_DEPENDENCIES) $(EXTRA_varinfo5so_so_DEPENDENCIES) 
	@rm -f varinfo5so.so$(EXEEXT)
	$(AM_V_CCLD)$(varinfo5so_so_LINK) $(varinfo5so_so_OBJECTS) $(varinfo5so_so_LDADD) $(LIBS)

varinfo6$(EXEEXT): $(varinfo6_OBJECTS) $(varinfo6_DEPENDENCIES) $(EXTRA_varinfo6_DEPENDENCIES) 
	@rm -f varinfo6$(EXEEXT)
	$(AM_V_CCLD)$(varinfo6_LINK) $(varinfo6_OBJECTS) $(varinfo6_LDADD) $(LIBS)

varinforestrict$(EXEEXT): $(varinforestrict_OBJECTS) $(varinforestrict_DEPENDENCIES) $(EXTRA_varinforestrict_DEPENDENCIES) 
	@rm -f varinforestrict$(EXEEXT)
	$(AM_V_CCLD)$(varinforestrict_LINK) $(varinforestrict_OBJECTS) $(varinforestrict_LDADD) $(LIBS)

vcpu_fbench$(EXEEXT): $(vcpu_fbench_OBJECTS) $(vcpu_fbench_DEPENDENCIES) $(EXTRA_vcpu_fbench_DEPENDENCIES) 
	@rm -f vcpu_fbench$(EXEEXT)
	$(AM_V_CCLD)$(vcpu_fbench_LINK) $(vcpu_fbench_OBJECTS) $(vcpu_fbench_LDADD) $(LIBS)

vcpu_fnfns$(EXEEXT): $(vcpu_fnfns_OBJECTS) $(vcpu_fnfns_DEPENDENCIES) $(EXTRA_vcpu_fnfns_DEPENDENCIES) 
	@rm -f vcpu_fnfns$(EXEEXT)
	$(AM_V_CCLD)$(vcpu_fnfns_LINK) $(vcpu_fnfns_OBJECTS) $(vcpu_fnfns_LDADD) $(LIBS)

wcs$(EXEEXT): $(wcs_OBJECTS) $(wcs_DEPENDENCIES) $(EXTRA_wcs_DEPENDENCIES) 
	@rm -f wcs$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(wcs_OBJECTS) $(wcs_LDADD) $(LIBS)

wrap1$(EXEEXT): $(wrap1_OBJECTS) $(wrap1_DEPENDENCIES) $(EXTRA_wrap1_DEPENDENCIES) 
	@rm -f wrap1$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(wrap1_OBJECTS) $(wrap1_LDADD) $(LIBS)

wrap2$(EXEEXT): $(wrap2_OBJECTS) $(wrap2_DEPENDENCIES) $(EXTRA_wrap2_DEPENDENCIES) 
	@rm -f wrap2$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(wrap2_OBJECTS) $(wrap2_LDADD) $(LIBS)

wrap3$(EXEEXT): $(wrap3_OBJECTS) $(wrap3_DEPENDENCIES) $(EXTRA_wrap3_DEPENDENCIES) 
	@rm -f wrap3$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(wrap3_OBJECTS) $(wrap3_LDADD) $(LIBS)

wrap4$(EXEEXT): $(wrap4_OBJECTS) $(wrap4_DEPENDENCIES) $(EXTRA_wrap4_DEPENDENCIES) 
	@rm -f wrap4$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(wrap4_OBJECTS) $(wrap4_LDADD) $(LIBS)

wrap5$(EXEEXT): $(wrap5_OBJECTS) $(wrap5_DEPENDENCIES) $(EXTRA_wrap5_DEPENDENCIES) 
	@rm -f wrap5$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(wrap5_OBJECTS) $(wrap5_LDADD) $(LIBS)

wrap6$(EXEEXT): $(wrap6_OBJECTS) $(wrap6_DEPENDENCIES) $(EXTRA_wrap6_DEPENDENCIES) 
	@rm -f wrap6$(EXEEXT)
	$(AM_V_CCLD)$(wrap6_LINK) $(wrap6_OBJECTS) $(wrap6_LDADD) $(LIBS)

wrap7$(EXEEXT): $(wrap7_OBJECTS) $(wrap7_DEPENDENCIES) $(EXTRA_wrap7_DEPENDENCIES) 
	@rm -f wrap7$(EXEEXT)
	$(AM_V_CCLD)$(wrap7_LINK) $(wrap7_OBJECTS) $(wrap7_LDADD) $(LIBS)

wrap7so.so$(EXEEXT): $(wrap7so_so_OBJECTS) $(wrap7so_so_DEPENDENCIES) $(EXTRA_wrap7so_so_DEPENDENCIES) 
	@rm -f wrap7so.so$(EXEEXT)
	$(AM_V_CCLD)$(wrap7so_so_LINK) $(wrap7so_so_OBJECTS) $(wrap7so_so_LDADD) $(LIBS)

wrap8$(EXEEXT): $(wrap8_OBJECTS) $(wrap8_DEPENDENCIES) $(EXTRA_wrap8_DEPENDENCIES) 
	@rm -f wrap8$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(wrap8_OBJECTS) $(wrap8_LDADD) $(LIBS)

writev1$(EXEEXT): $(writev1_OBJECTS) $(writev1_DEPENDENCIES) $(EXTRA_writev1_DEPENDENCIES) 
	@rm -f writev1$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(writev1_OBJECTS) $(writev1_LDADD) $(LIBS)

xml1$(EXEEXT): $(xml1_OBJECTS) $(xml1_DEPENDENCIES) $(EXTRA_xml1_DEPENDENCIES) 
	@rm -f xml1$(EXEEXT)
	$(AM_V_CCLD)$(xml1_LINK) $(xml1_OBJECTS) $(xml1_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/accounting.Po
include ./$(DEPDIR)/addressable.Po
include ./$(DEPDIR)/atomic_incs-atomic_incs.Po
include ./$(DEPDIR)/badaddrvalue.Po
include ./$(DEPDIR)/badfree.Po
include ./$(DEPDIR)/badjump.Po
include ./$(DEPDIR)/badjump2.Po
include ./$(DEPDIR)/badloop.Po
include ./$(DEPDIR)/badpoll.Po
include ./$(DEPDIR)/badrw.Po
include ./$(DEPDIR)/big_blocks_freed_list.Po
include ./$(DEPDIR)/brk2.Po
include ./$(DEPDIR)/buflen_check.Po
include ./$(DEPDIR)/bug155125.Po
include ./$(DEPDIR)/bug287260.Po
include ./$(DEPDIR)/bug340392-bug340392.Po
include ./$(DEPDIR)/calloc-overflow.Po
include ./$(DEPDIR)/client-msg.Po
include ./$(DEPDIR)/clientperm.Po
include ./$(DEPDIR)/clireq_nofill.Po
include ./$(DEPDIR)/clo_redzone.Po
include ./$(DEPDIR)/cond_ld_st.Po
include ./$(DEPDIR)/custom-overlap.Po
include ./$(DEPDIR)/custom_alloc.Po
include ./$(DEPDIR)/deep-backtrace.Po
include ./$(DEPDIR)/demangle.Po
include ./$(DEPDIR)/descr_belowsp.Po
include ./$(DEPDIR)/describe-block.Po
include ./$(DEPDIR)/doublefree.Po
include ./$(DEPDIR)/dw4-dw4.Po
include ./$(DEPDIR)/err_disable1.Po
include ./$(DEPDIR)/err_disable2.Po
include ./$(DEPDIR)/err_disable3.Po
include ./$(DEPDIR)/err_disable4-err_disable4.Po
include ./$(DEPDIR)/err_disable_arange1.Po
include ./$(DEPDIR)/erringfds.Po
include ./$(DEPDIR)/error_counts-error_counts.Po
include ./$(DEPDIR)/errs1.Po
include ./$(DEPDIR)/execve1-execve1.Po
include ./$(DEPDIR)/execve2-execve2.Po
include ./$(DEPDIR)/exitprog.Po
include ./$(DEPDIR)/file_locking.Po
include ./$(DEPDIR)/fprw-fprw.Po
include ./$(DEPDIR)/fwrite.Po
include ./$(DEPDIR)/holey_buffer_too_small.Po
include ./$(DEPDIR)/inits-inits.Po
include ./$(DEPDIR)/inline.Po
include ./$(DEPDIR)/inlinfo-inlinfo.Po
include ./$(DEPDIR)/inltemplate-inltemplate.Po
include ./$(DEPDIR)/leak-0.Po
include ./$(DEPDIR)/leak-cases.Po
include ./$(DEPDIR)/leak-cycle.Po
include ./$(DEPDIR)/leak-delta.Po
include ./$(DEPDIR)/leak-pool.Po
include ./$(DEPDIR)/leak-segv-jmp.Po
include ./$(DEPDIR)/leak-tree.Po
include ./$(DEPDIR)/leak_cpp_interior.Po
include ./$(DEPDIR)/long-supps.Po
include ./$(DEPDIR)/long_namespace_xml.Po
include ./$(DEPDIR)/mallinfo.Po
include ./$(DEPDIR)/malloc1.Po
include ./$(DEPDIR)/malloc2.Po
include ./$(DEPDIR)/malloc3.Po
include ./$(DEPDIR)/malloc_free_fill.Po
include ./$(DEPDIR)/malloc_usable.Po
include ./$(DEPDIR)/manuel1-manuel1.Po
include ./$(DEPDIR)/manuel2.Po
include ./$(DEPDIR)/manuel3.Po
include ./$(DEPDIR)/match-overrun.Po
include ./$(DEPDIR)/memalign2-memalign2.Po
include ./$(DEPDIR)/memalign_test.Po
include ./$(DEPDIR)/memcmptest-memcmptest.Po
include ./$(DEPDIR)/mempool.Po
include ./$(DEPDIR)/mempool2.Po
include ./$(DEPDIR)/metadata.Po
include ./$(DEPDIR)/mismatches-mismatches.Po
include ./$(DEPDIR)/mmaptest.Po
include ./$(DEPDIR)/nanoleak2.Po
include ./$(DEPDIR)/nanoleak_supp.Po
include ./$(DEPDIR)/new_nothrow.Po
include ./$(DEPDIR)/new_override.Po
include ./$(DEPDIR)/noisy_child.Po
include ./$(DEPDIR)/null_socket.Po
include ./$(DEPDIR)/origin1_yes-origin1-yes.Po
include ./$(DEPDIR)/origin2_not_quite-origin2-not-quite.Po
include ./$(DEPDIR)/origin3_no-origin3-no.Po
include ./$(DEPDIR)/origin4_many-origin4-many.Po
include ./$(DEPDIR)/origin5_bz2-origin5-bz2.Po
include ./$(DEPDIR)/origin6_fp-origin6-fp.Po
include ./$(DEPDIR)/overlap-overlap.Po
include ./$(DEPDIR)/partial_load.Po
include ./$(DEPDIR)/partiallydefinedeq.Po
include ./$(DEPDIR)/pdb-realloc.Po
include ./$(DEPDIR)/pdb-realloc2.Po
include ./$(DEPDIR)/pipe.Po
include ./$(DEPDIR)/pointer-trace.Po
include ./$(DEPDIR)/post-syscall.Po
include ./$(DEPDIR)/reach_thread_register-reach_thread_register.Po
include ./$(DEPDIR)/realloc1.Po
include ./$(DEPDIR)/realloc2.Po
include ./$(DEPDIR)/realloc3.Po
include ./$(DEPDIR)/recursive-merge.Po
include ./$(DEPDIR)/resvn_stack-resvn_stack.Po
include ./$(DEPDIR)/sbfragment.Po
include ./$(DEPDIR)/sendmsg-sendmsg.Po
include ./$(DEPDIR)/sh-mem-random.Po
include ./$(DEPDIR)/sh-mem.Po
include ./$(DEPDIR)/sigaltstack.Po
include ./$(DEPDIR)/sigkill.Po
include ./$(DEPDIR)/signal2.Po
include ./$(DEPDIR)/sigprocmask.Po
include ./$(DEPDIR)/static_malloc.Po
include ./$(DEPDIR)/stpncpy.Po
include ./$(DEPDIR)/str_tester-str_tester.Po
include ./$(DEPDIR)/strchr.Po
include ./$(DEPDIR)/supp1-supp.Po
include ./$(DEPDIR)/supp2-supp.Po
include ./$(DEPDIR)/supp_unknown-badjump.Po
include ./$(DEPDIR)/suppfree.Po
include ./$(DEPDIR)/test-plo.Po
include ./$(DEPDIR)/thread_alloca.Po
include ./$(DEPDIR)/threadname.Po
include ./$(DEPDIR)/trivialleak.Po
include ./$(DEPDIR)/undef_malloc_args.Po
include ./$(DEPDIR)/unit_libcbase.Po
include ./$(DEPDIR)/unit_oset.Po
include ./$(DEPDIR)/varinfo1-varinfo1.Po
include ./$(DEPDIR)/varinfo2-varinfo2.Po
include ./$(DEPDIR)/varinfo3-varinfo3.Po
include ./$(DEPDIR)/varinfo4-varinfo4.Po
include ./$(DEPDIR)/varinfo5-varinfo5.Po
include ./$(DEPDIR)/varinfo5so_so-varinfo5so.Po
include ./$(DEPDIR)/varinfo6-varinfo6.Po
include ./$(DEPDIR)/varinforestrict-varinforestrict.Po
include ./$(DEPDIR)/vcpu_fbench-vcpu_fbench.Po
include ./$(DEPDIR)/vcpu_fnfns-vcpu_fnfns.Po
include ./$(DEPDIR)/wcs.Po
include ./$(DEPDIR)/wrap1.Po
include ./$(DEPDIR)/wrap2.Po
include ./$(DEPDIR)/wrap3.Po
include ./$(DEPDIR)/wrap4.Po
include ./$(DEPDIR)/wrap5.Po
include ./$(DEPDIR)/wrap6-wrap6.Po
include ./$(DEPDIR)/wrap7.Po
include ./$(DEPDIR)/wrap7so_so-wrap7so.Po
include ./$(DEPDIR)/wrap8.Po
include ./$(DEPDIR)/writev1.Po
include ./$(DEPDIR)/xml1-xml1.Po

.c.o:
	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ $<

.c.obj:
	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

atomic_incs-atomic_incs.o: atomic_incs.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(atomic_incs_CFLAGS) $(CFLAGS) -MT atomic_incs-atomic_incs.o -MD -MP -MF $(DEPDIR)/atomic_incs-atomic_incs.Tpo -c -o atomic_incs-atomic_incs.o `test -f 'atomic_incs.c' || echo '$(srcdir)/'`atomic_incs.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/atomic_incs-atomic_incs.Tpo $(DEPDIR)/atomic_incs-atomic_incs.Po
#	$(AM_V_CC)source='atomic_incs.c' object='atomic_incs-atomic_incs.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(atomic_incs_CFLAGS) $(CFLAGS) -c -o atomic_incs-atomic_incs.o `test -f 'atomic_incs.c' || echo '$(srcdir)/'`atomic_incs.c

atomic_incs-atomic_incs.obj: atomic_incs.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(atomic_incs_CFLAGS) $(CFLAGS) -MT atomic_incs-atomic_incs.obj -MD -MP -MF $(DEPDIR)/atomic_incs-atomic_incs.Tpo -c -o atomic_incs-atomic_incs.obj `if test -f 'atomic_incs.c'; then $(CYGPATH_W) 'atomic_incs.c'; else $(CYGPATH_W) '$(srcdir)/atomic_incs.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/atomic_incs-atomic_incs.Tpo $(DEPDIR)/atomic_incs-atomic_incs.Po
#	$(AM_V_CC)source='atomic_incs.c' object='atomic_incs-atomic_incs.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(atomic_incs_CFLAGS) $(CFLAGS) -c -o atomic_incs-atomic_incs.obj `if test -f 'atomic_incs.c'; then $(CYGPATH_W) 'atomic_incs.c'; else $(CYGPATH_W) '$(srcdir)/atomic_incs.c'; fi`

bug340392-bug340392.o: bug340392.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bug340392_CFLAGS) $(CFLAGS) -MT bug340392-bug340392.o -MD -MP -MF $(DEPDIR)/bug340392-bug340392.Tpo -c -o bug340392-bug340392.o `test -f 'bug340392.c' || echo '$(srcdir)/'`bug340392.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/bug340392-bug340392.Tpo $(DEPDIR)/bug340392-bug340392.Po
#	$(AM_V_CC)source='bug340392.c' object='bug340392-bug340392.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bug340392_CFLAGS) $(CFLAGS) -c -o bug340392-bug340392.o `test -f 'bug340392.c' || echo '$(srcdir)/'`bug340392.c

bug340392-bug340392.obj: bug340392.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bug340392_CFLAGS) $(CFLAGS) -MT bug340392-bug340392.obj -MD -MP -MF $(DEPDIR)/bug340392-bug340392.Tpo -c -o bug340392-bug340392.obj `if test -f 'bug340392.c'; then $(CYGPATH_W) 'bug340392.c'; else $(CYGPATH_W) '$(srcdir)/bug340392.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/bug340392-bug340392.Tpo $(DEPDIR)/bug340392-bug340392.Po
#	$(AM_V_CC)source='bug340392.c' object='bug340392-bug340392.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bug340392_CFLAGS) $(CFLAGS) -c -o bug340392-bug340392.obj `if test -f 'bug340392.c'; then $(CYGPATH_W) 'bug340392.c'; else $(CYGPATH_W) '$(srcdir)/bug340392.c'; fi`

dw4-dw4.o: dw4.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dw4_CFLAGS) $(CFLAGS) -MT dw4-dw4.o -MD -MP -MF $(DEPDIR)/dw4-dw4.Tpo -c -o dw4-dw4.o `test -f 'dw4.c' || echo '$(srcdir)/'`dw4.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/dw4-dw4.Tpo $(DEPDIR)/dw4-dw4.Po
#	$(AM_V_CC)source='dw4.c' object='dw4-dw4.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dw4_CFLAGS) $(CFLAGS) -c -o dw4-dw4.o `test -f 'dw4.c' || echo '$(srcdir)/'`dw4.c

dw4-dw4.obj: dw4.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dw4_CFLAGS) $(CFLAGS) -MT dw4-dw4.obj -MD -MP -MF $(DEPDIR)/dw4-dw4.Tpo -c -o dw4-dw4.obj `if test -f 'dw4.c'; then $(CYGPATH_W) 'dw4.c'; else $(CYGPATH_W) '$(srcdir)/dw4.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dw4-dw4.Tpo $(DEPDIR)/dw4-dw4.Po
#	$(AM_V_CC)source='dw4.c' object='dw4-dw4.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dw4_CFLAGS) $(CFLAGS) -c -o dw4-dw4.obj `if test -f 'dw4.c'; then $(CYGPATH_W) 'dw4.c'; else $(CYGPATH_W) '$(srcdir)/dw4.c'; fi`

err_disable4-err_disable4.o: err_disable4.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(err_disable4_CFLAGS) $(CFLAGS) -MT err_disable4-err_disable4.o -MD -MP -MF $(DEPDIR)/err_disable4-err_disable4.Tpo -c -o err_disable4-err_disable4.o `test -f 'err_disable4.c' || echo '$(srcdir)/'`err_disable4.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/err_disable4-err_disable4.Tpo $(DEPDIR)/err_disable4-err_disable4.Po
#	$(AM_V_CC)source='err_disable4.c' object='err_disable4-err_disable4.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(err_disable4_CFLAGS) $(CFLAGS) -c -o err_disable4-err_disable4.o `test -f 'err_disable4.c' || echo '$(srcdir)/'`err_disable4.c

err_disable4-err_disable4.obj: err_disable4.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(err_disable4_CFLAGS) $(CFLAGS) -MT err_disable4-err_disable4.obj -MD -MP -MF $(DEPDIR)/err_disable4-err_disable4.Tpo -c -o err_disable4-err_disable4.obj `if test -f 'err_disable4.c'; then $(CYGPATH_W) 'err_disable4.c'; else $(CYGPATH_W) '$(srcdir)/err_disable4.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/err_disable4-err_disable4.Tpo $(DEPDIR)/err_disable4-err_disable4.Po
#	$(AM_V_CC)source='err_disable4.c' object='err_disable4-err_disable4.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(err_disable4_CFLAGS) $(CFLAGS) -c -o err_disable4-err_disable4.obj `if test -f 'err_disable4.c'; then $(CYGPATH_W) 'err_disable4.c'; else $(CYGPATH_W) '$(srcdir)/err_disable4.c'; fi`

error_counts-error_counts.o: error_counts.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(error_counts_CFLAGS) $(CFLAGS) -MT error_counts-error_counts.o -MD -MP -MF $(DEPDIR)/error_counts-error_counts.Tpo -c -o error_counts-error_counts.o `test -f 'error_counts.c' || echo '$(srcdir)/'`error_counts.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/error_counts-error_counts.Tpo $(DEPDIR)/error_counts-error_counts.Po
#	$(AM_V_CC)source='error_counts.c' object='error_counts-error_counts.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(error_counts_CFLAGS) $(CFLAGS) -c -o error_counts-error_counts.o `test -f 'error_counts.c' || echo '$(srcdir)/'`error_counts.c

error_counts-error_counts.obj: error_counts.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(error_counts_CFLAGS) $(CFLAGS) -MT error_counts-error_counts.obj -MD -MP -MF $(DEPDIR)/error_counts-error_counts.Tpo -c -o error_counts-error_counts.obj `if test -f 'error_counts.c'; then $(CYGPATH_W) 'error_counts.c'; else $(CYGPATH_W) '$(srcdir)/error_counts.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/error_counts-error_counts.Tpo $(DEPDIR)/error_counts-error_counts.Po
#	$(AM_V_CC)source='error_counts.c' object='error_counts-error_counts.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(error_counts_CFLAGS) $(CFLAGS) -c -o error_counts-error_counts.obj `if test -f 'error_counts.c'; then $(CYGPATH_W) 'error_counts.c'; else $(CYGPATH_W) '$(srcdir)/error_counts.c'; fi`

execve1-execve1.o: execve1.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(execve1_CFLAGS) $(CFLAGS) -MT execve1-execve1.o -MD -MP -MF $(DEPDIR)/execve1-execve1.Tpo -c -o execve1-execve1.o `test -f 'execve1.c' || echo '$(srcdir)/'`execve1.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/execve1-execve1.Tpo $(DEPDIR)/execve1-execve1.Po
#	$(AM_V_CC)source='execve1.c' object='execve1-execve1.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(execve1_CFLAGS) $(CFLAGS) -c -o execve1-execve1.o `test -f 'execve1.c' || echo '$(srcdir)/'`execve1.c

execve1-execve1.obj: execve1.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(execve1_CFLAGS) $(CFLAGS) -MT execve1-execve1.obj -MD -MP -MF $(DEPDIR)/execve1-execve1.Tpo -c -o execve1-execve1.obj `if test -f 'execve1.c'; then $(CYGPATH_W) 'execve1.c'; else $(CYGPATH_W) '$(srcdir)/execve1.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/execve1-execve1.Tpo $(DEPDIR)/execve1-execve1.Po
#	$(AM_V_CC)source='execve1.c' object='execve1-execve1.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(execve1_CFLAGS) $(CFLAGS) -c -o execve1-execve1.obj `if test -f 'execve1.c'; then $(CYGPATH_W) 'execve1.c'; else $(CYGPATH_W) '$(srcdir)/execve1.c'; fi`

execve2-execve2.o: execve2.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(execve2_CFLAGS) $(CFLAGS) -MT execve2-execve2.o -MD -MP -MF $(DEPDIR)/execve2-execve2.Tpo -c -o execve2-execve2.o `test -f 'execve2.c' || echo '$(srcdir)/'`execve2.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/execve2-execve2.Tpo $(DEPDIR)/execve2-execve2.Po
#	$(AM_V_CC)source='execve2.c' object='execve2-execve2.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(execve2_CFLAGS) $(CFLAGS) -c -o execve2-execve2.o `test -f 'execve2.c' || echo '$(srcdir)/'`execve2.c

execve2-execve2.obj: execve2.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(execve2_CFLAGS) $(CFLAGS) -MT execve2-execve2.obj -MD -MP -MF $(DEPDIR)/execve2-execve2.Tpo -c -o execve2-execve2.obj `if test -f 'execve2.c'; then $(CYGPATH_W) 'execve2.c'; else $(CYGPATH_W) '$(srcdir)/execve2.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/execve2-execve2.Tpo $(DEPDIR)/execve2-execve2.Po
#	$(AM_V_CC)source='execve2.c' object='execve2-execve2.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(execve2_CFLAGS) $(CFLAGS) -c -o execve2-execve2.obj `if test -f 'execve2.c'; then $(CYGPATH_W) 'execve2.c'; else $(CYGPATH_W) '$(srcdir)/execve2.c'; fi`

fprw-fprw.o: fprw.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fprw_CFLAGS) $(CFLAGS) -MT fprw-fprw.o -MD -MP -MF $(DEPDIR)/fprw-fprw.Tpo -c -o fprw-fprw.o `test -f 'fprw.c' || echo '$(srcdir)/'`fprw.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/fprw-fprw.Tpo $(DEPDIR)/fprw-fprw.Po
#	$(AM_V_CC)source='fprw.c' object='fprw-fprw.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fprw_CFLAGS) $(CFLAGS) -c -o fprw-fprw.o `test -f 'fprw.c' || echo '$(srcdir)/'`fprw.c

fprw-fprw.obj: fprw.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fprw_CFLAGS) $(CFLAGS) -MT fprw-fprw.obj -MD -MP -MF $(DEPDIR)/fprw-fprw.Tpo -c -o fprw-fprw.obj `if test -f 'fprw.c'; then $(CYGPATH_W) 'fprw.c'; else $(CYGPATH_W) '$(srcdir)/fprw.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/fprw-fprw.Tpo $(DEPDIR)/fprw-fprw.Po
#	$(AM_V_CC)source='fprw.c' object='fprw-fprw.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fprw_CFLAGS) $(CFLAGS) -c -o fprw-fprw.obj `if test -f 'fprw.c'; then $(CYGPATH_W) 'fprw.c'; else $(CYGPATH_W) '$(srcdir)/fprw.c'; fi`

inits-inits.o: inits.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(inits_CFLAGS) $(CFLAGS) -MT inits-inits.o -MD -MP -MF $(DEPDIR)/inits-inits.Tpo -c -o inits-inits.o `test -f 'inits.c' || echo '$(srcdir)/'`inits.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/inits-inits.Tpo $(DEPDIR)/inits-inits.Po
#	$(AM_V_CC)source='inits.c' object='inits-inits.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(inits_CFLAGS) $(CFLAGS) -c -o inits-inits.o `test -f 'inits.c' || echo '$(srcdir)/'`inits.c

inits-inits.obj: inits.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(inits_CFLAGS) $(CFLAGS) -MT inits-inits.obj -MD -MP -MF $(DEPDIR)/inits-inits.Tpo -c -o inits-inits.obj `if test -f 'inits.c'; then $(CYGPATH_W) 'inits.c'; else $(CYGPATH_W) '$(srcdir)/inits.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/inits-inits.Tpo $(DEPDIR)/inits-inits.Po
#	$(AM_V_CC)source='inits.c' object='inits-inits.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(inits_CFLAGS) $(CFLAGS) -c -o inits-inits.obj `if test -f 'inits.c'; then $(CYGPATH_W) 'inits.c'; else $(CYGPATH_W) '$(srcdir)/inits.c'; fi`

inlinfo-inlinfo.o: inlinfo.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(inlinfo_CFLAGS) $(CFLAGS) -MT inlinfo-inlinfo.o -MD -MP -MF $(DEPDIR)/inlinfo-inlinfo.Tpo -c -o inlinfo-inlinfo.o `test -f 'inlinfo.c' || echo '$(srcdir)/'`inlinfo.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/inlinfo-inlinfo.Tpo $(DEPDIR)/inlinfo-inlinfo.Po
#	$(AM_V_CC)source='inlinfo.c' object='inlinfo-inlinfo.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(inlinfo_CFLAGS) $(CFLAGS) -c -o inlinfo-inlinfo.o `test -f 'inlinfo.c' || echo '$(srcdir)/'`inlinfo.c

inlinfo-inlinfo.obj: inlinfo.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(inlinfo_CFLAGS) $(CFLAGS) -MT inlinfo-inlinfo.obj -MD -MP -MF $(DEPDIR)/inlinfo-inlinfo.Tpo -c -o inlinfo-inlinfo.obj `if test -f 'inlinfo.c'; then $(CYGPATH_W) 'inlinfo.c'; else $(CYGPATH_W) '$(srcdir)/inlinfo.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/inlinfo-inlinfo.Tpo $(DEPDIR)/inlinfo-inlinfo.Po
#	$(AM_V_CC)source='inlinfo.c' object='inlinfo-inlinfo.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(inlinfo_CFLAGS) $(CFLAGS) -c -o inlinfo-inlinfo.obj `if test -f 'inlinfo.c'; then $(CYGPATH_W) 'inlinfo.c'; else $(CYGPATH_W) '$(srcdir)/inlinfo.c'; fi`

manuel1-manuel1.o: manuel1.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(manuel1_CFLAGS) $(CFLAGS) -MT manuel1-manuel1.o -MD -MP -MF $(DEPDIR)/manuel1-manuel1.Tpo -c -o manuel1-manuel1.o `test -f 'manuel1.c' || echo '$(srcdir)/'`manuel1.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/manuel1-manuel1.Tpo $(DEPDIR)/manuel1-manuel1.Po
#	$(AM_V_CC)source='manuel1.c' object='manuel1-manuel1.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(manuel1_CFLAGS) $(CFLAGS) -c -o manuel1-manuel1.o `test -f 'manuel1.c' || echo '$(srcdir)/'`manuel1.c

manuel1-manuel1.obj: manuel1.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(manuel1_CFLAGS) $(CFLAGS) -MT manuel1-manuel1.obj -MD -MP -MF $(DEPDIR)/manuel1-manuel1.Tpo -c -o manuel1-manuel1.obj `if test -f 'manuel1.c'; then $(CYGPATH_W) 'manuel1.c'; else $(CYGPATH_W) '$(srcdir)/manuel1.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/manuel1-manuel1.Tpo $(DEPDIR)/manuel1-manuel1.Po
#	$(AM_V_CC)source='manuel1.c' object='manuel1-manuel1.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(manuel1_CFLAGS) $(CFLAGS) -c -o manuel1-manuel1.obj `if test -f 'manuel1.c'; then $(CYGPATH_W) 'manuel1.c'; else $(CYGPATH_W) '$(srcdir)/manuel1.c'; fi`

memalign2-memalign2.o: memalign2.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(memalign2_CFLAGS) $(CFLAGS) -MT memalign2-memalign2.o -MD -MP -MF $(DEPDIR)/memalign2-memalign2.Tpo -c -o memalign2-memalign2.o `test -f 'memalign2.c' || echo '$(srcdir)/'`memalign2.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/memalign2-memalign2.Tpo $(DEPDIR)/memalign2-memalign2.Po
#	$(AM_V_CC)source='memalign2.c' object='memalign2-memalign2.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(memalign2_CFLAGS) $(CFLAGS) -c -o memalign2-memalign2.o `test -f 'memalign2.c' || echo '$(srcdir)/'`memalign2.c

memalign2-memalign2.obj: memalign2.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(memalign2_CFLAGS) $(CFLAGS) -MT memalign2-memalign2.obj -MD -MP -MF $(DEPDIR)/memalign2-memalign2.Tpo -c -o memalign2-memalign2.obj `if test -f 'memalign2.c'; then $(CYGPATH_W) 'memalign2.c'; else $(CYGPATH_W) '$(srcdir)/memalign2.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/memalign2-memalign2.Tpo $(DEPDIR)/memalign2-memalign2.Po
#	$(AM_V_CC)source='memalign2.c' object='memalign2-memalign2.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(memalign2_CFLAGS) $(CFLAGS) -c -o memalign2-memalign2.obj `if test -f 'memalign2.c'; then $(CYGPATH_W) 'memalign2.c'; else $(CYGPATH_W) '$(srcdir)/memalign2.c'; fi`

memcmptest-memcmptest.o: memcmptest.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(memcmptest_CFLAGS) $(CFLAGS) -MT memcmptest-memcmptest.o -MD -MP -MF $(DEPDIR)/memcmptest-memcmptest.Tpo -c -o memcmptest-memcmptest.o `test -f 'memcmptest.c' || echo '$(srcdir)/'`memcmptest.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/memcmptest-memcmptest.Tpo $(DEPDIR)/memcmptest-memcmptest.Po
#	$(AM_V_CC)source='memcmptest.c' object='memcmptest-memcmptest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(memcmptest_CFLAGS) $(CFLAGS) -c -o memcmptest-memcmptest.o `test -f 'memcmptest.c' || echo '$(srcdir)/'`memcmptest.c

memcmptest-memcmptest.obj: memcmptest.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(memcmptest_CFLAGS) $(CFLAGS) -MT memcmptest-memcmptest.obj -MD -MP -MF $(DEPDIR)/memcmptest-memcmptest.Tpo -c -o memcmptest-memcmptest.obj `if test -f 'memcmptest.c'; then $(CYGPATH_W) 'memcmptest.c'; else $(CYGPATH_W) '$(srcdir)/memcmptest.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/memcmptest-memcmptest.Tpo $(DEPDIR)/memcmptest-memcmptest.Po
#	$(AM_V_CC)source='memcmptest.c' object='memcmptest-memcmptest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(memcmptest_CFLAGS) $(CFLAGS) -c -o memcmptest-memcmptest.obj `if test -f 'memcmptest.c'; then $(CYGPATH_W) 'memcmptest.c'; else $(CYGPATH_W) '$(srcdir)/memcmptest.c'; fi`

origin1_yes-origin1-yes.o: origin1-yes.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(origin1_yes_CFLAGS) $(CFLAGS) -MT origin1_yes-origin1-yes.o -MD -MP -MF $(DEPDIR)/origin1_yes-origin1-yes.Tpo -c -o origin1_yes-origin1-yes.o `test -f 'origin1-yes.c' || echo '$(srcdir)/'`origin1-yes.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/origin1_yes-origin1-yes.Tpo $(DEPDIR)/origin1_yes-origin1-yes.Po
#	$(AM_V_CC)source='origin1-yes.c' object='origin1_yes-origin1-yes.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(origin1_yes_CFLAGS) $(CFLAGS) -c -o origin1_yes-origin1-yes.o `test -f 'origin1-yes.c' || echo '$(srcdir)/'`origin1-yes.c

origin1_yes-origin1-yes.obj: origin1-yes.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(origin1_yes_CFLAGS) $(CFLAGS) -MT origin1_yes-origin1-yes.obj -MD -MP -MF $(DEPDIR)/origin1_yes-origin1-yes.Tpo -c -o origin1_yes-origin1-yes.obj `if test -f 'origin1-yes.c'; then $(CYGPATH_W) 'origin1-yes.c'; else $(CYGPATH_W) '$(srcdir)/origin1-yes.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/origin1_yes-origin1-yes.Tpo $(DEPDIR)/origin1_yes-origin1-yes.Po
#	$(AM_V_CC)source='origin1-yes.c' object='origin1_yes-origin1-yes.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(origin1_yes_CFLAGS) $(CFLAGS) -c -o origin1_yes-origin1-yes.obj `if test -f 'origin1-yes.c'; then $(CYGPATH_W) 'origin1-yes.c'; else $(CYGPATH_W) '$(srcdir)/origin1-yes.c'; fi`

origin2_not_quite-origin2-not-quite.o: origin2-not-quite.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(origin2_not_quite_CFLAGS) $(CFLAGS) -MT origin2_not_quite-origin2-not-quite.o -MD -MP -MF $(DEPDIR)/origin2_not_quite-origin2-not-quite.Tpo -c -o origin2_not_quite-origin2-not-quite.o `test -f 'origin2-not-quite.c' || echo '$(srcdir)/'`origin2-not-quite.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/origin2_not_quite-origin2-not-quite.Tpo $(DEPDIR)/origin2_not_quite-origin2-not-quite.Po
#	$(AM_V_CC)source='origin2-not-quite.c' object='origin2_not_quite-origin2-not-quite.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(origin2_not_quite_CFLAGS) $(CFLAGS) -c -o origin2_not_quite-origin2-not-quite.o `test -f 'origin2-not-quite.c' || echo '$(srcdir)/'`origin2-not-quite.c

origin2_not_quite-origin2-not-quite.obj: origin2-not-quite.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(origin2_not_quite_CFLAGS) $(CFLAGS) -MT origin2_not_quite-origin2-not-quite.obj -MD -MP -MF $(DEPDIR)/origin2_not_quite-origin2-not-quite.Tpo -c -o origin2_not_quite-origin2-not-quite.obj `if test -f 'origin2-not-quite.c'; then $(CYGPATH_W) 'origin2-not-quite.c'; else $(CYGPATH_W) '$(srcdir)/origin2-not-quite.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/origin2_not_quite-origin2-not-quite.Tpo $(DEPDIR)/origin2_not_quite-origin2-not-quite.Po
#	$(AM_V_CC)source='origin2-not-quite.c' object='origin2_not_quite-origin2-not-quite.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(origin2_not_quite_CFLAGS) $(CFLAGS) -c -o origin2_not_quite-origin2-not-quite.obj `if test -f 'origin2-not-quite.c'; then $(CYGPATH_W) 'origin2-not-quite.c'; else $(CYGPATH_W) '$(srcdir)/origin2-not-quite.c'; fi`

origin3_no-origin3-no.o: origin3-no.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(origin3_no_CFLAGS) $(CFLAGS) -MT origin3_no-origin3-no.o -MD -MP -MF $(DEPDIR)/origin3_no-origin3-no.Tpo -c -o origin3_no-origin3-no.o `test -f 'origin3-no.c' || echo '$(srcdir)/'`origin3-no.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/origin3_no-origin3-no.Tpo $(DEPDIR)/origin3_no-origin3-no.Po
#	$(AM_V_CC)source='origin3-no.c' object='origin3_no-origin3-no.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(origin3_no_CFLAGS) $(CFLAGS) -c -o origin3_no-origin3-no.o `test -f 'origin3-no.c' || echo '$(srcdir)/'`origin3-no.c

origin3_no-origin3-no.obj: origin3-no.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(origin3_no_CFLAGS) $(CFLAGS) -MT origin3_no-origin3-no.obj -MD -MP -MF $(DEPDIR)/origin3_no-origin3-no.Tpo -c -o origin3_no-origin3-no.obj `if test -f 'origin3-no.c'; then $(CYGPATH_W) 'origin3-no.c'; else $(CYGPATH_W) '$(srcdir)/origin3-no.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/origin3_no-origin3-no.Tpo $(DEPDIR)/origin3_no-origin3-no.Po
#	$(AM_V_CC)source='origin3-no.c' object='origin3_no-origin3-no.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(origin3_no_CFLAGS) $(CFLAGS) -c -o origin3_no-origin3-no.obj `if test -f 'origin3-no.c'; then $(CYGPATH_W) 'origin3-no.c'; else $(CYGPATH_W) '$(srcdir)/origin3-no.c'; fi`

origin4_many-origin4-many.o: origin4-many.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(origin4_many_CFLAGS) $(CFLAGS) -MT origin4_many-origin4-many.o -MD -MP -MF $(DEPDIR)/origin4_many-origin4-many.Tpo -c -o origin4_many-origin4-many.o `test -f 'origin4-many.c' || echo '$(srcdir)/'`origin4-many.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/origin4_many-origin4-many.Tpo $(DEPDIR)/origin4_many-origin4-many.Po
#	$(AM_V_CC)source='origin4-many.c' object='origin4_many-origin4-many.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(origin4_many_CFLAGS) $(CFLAGS) -c -o origin4_many-origin4-many.o `test -f 'origin4-many.c' || echo '$(srcdir)/'`origin4-many.c

origin4_many-origin4-many.obj: origin4-many.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(origin4_many_CFLAGS) $(CFLAGS) -MT origin4_many-origin4-many.obj -MD -MP -MF $(DEPDIR)/origin4_many-origin4-many.Tpo -c -o origin4_many-origin4-many.obj `if test -f 'origin4-many.c'; then $(CYGPATH_W) 'origin4-many.c'; else $(CYGPATH_W) '$(srcdir)/origin4-many.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/origin4_many-origin4-many.Tpo $(DEPDIR)/origin4_many-origin4-many.Po
#	$(AM_V_CC)source='origin4-many.c' object='origin4_many-origin4-many.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(origin4_many_CFLAGS) $(CFLAGS) -c -o origin4_many-origin4-many.obj `if test -f 'origin4-many.c'; then $(CYGPATH_W) 'origin4-many.c'; else $(CYGPATH_W) '$(srcdir)/origin4-many.c'; fi`

origin5_bz2-origin5-bz2.o: origin5-bz2.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(origin5_bz2_CFLAGS) $(CFLAGS) -MT origin5_bz2-origin5-bz2.o -MD -MP -MF $(DEPDIR)/origin5_bz2-origin5-bz2.Tpo -c -o origin5_bz2-origin5-bz2.o `test -f 'origin5-bz2.c' || echo '$(srcdir)/'`origin5-bz2.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/origin5_bz2-origin5-bz2.Tpo $(DEPDIR)/origin5_bz2-origin5-bz2.Po
#	$(AM_V_CC)source='origin5-bz2.c' object='origin5_bz2-origin5-bz2.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(origin5_bz2_CFLAGS) $(CFLAGS) -c -o origin5_bz2-origin5-bz2.o `test -f 'origin5-bz2.c' || echo '$(srcdir)/'`origin5-bz2.c

origin5_bz2-origin5-bz2.obj: origin5-bz2.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(origin5_bz2_CFLAGS) $(CFLAGS) -MT origin5_bz2-origin5-bz2.obj -MD -MP -MF $(DEPDIR)/origin5_bz2-origin5-bz2.Tpo -c -o origin5_bz2-origin5-bz2.obj `if test -f 'origin5-bz2.c'; then $(CYGPATH_W) 'origin5-bz2.c'; else $(CYGPATH_W) '$(srcdir)/origin5-bz2.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/origin5_bz2-origin5-bz2.Tpo $(DEPDIR)/origin5_bz2-origin5-bz2.Po
#	$(AM_V_CC)source='origin5-bz2.c' object='origin5_bz2-origin5-bz2.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(origin5_bz2_CFLAGS) $(CFLAGS) -c -o origin5_bz2-origin5-bz2.obj `if test -f 'origin5-bz2.c'; then $(CYGPATH_W) 'origin5-bz2.c'; else $(CYGPATH_W) '$(srcdir)/origin5-bz2.c'; fi`

origin6_fp-origin6-fp.o: origin6-fp.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(origin6_fp_CFLAGS) $(CFLAGS) -MT origin6_fp-origin6-fp.o -MD -MP -MF $(DEPDIR)/origin6_fp-origin6-fp.Tpo -c -o origin6_fp-origin6-fp.o `test -f 'origin6-fp.c' || echo '$(srcdir)/'`origin6-fp.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/origin6_fp-origin6-fp.Tpo $(DEPDIR)/origin6_fp-origin6-fp.Po
#	$(AM_V_CC)source='origin6-fp.c' object='origin6_fp-origin6-fp.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(origin6_fp_CFLAGS) $(CFLAGS) -c -o origin6_fp-origin6-fp.o `test -f 'origin6-fp.c' || echo '$(srcdir)/'`origin6-fp.c

origin6_fp-origin6-fp.obj: origin6-fp.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(origin6_fp_CFLAGS) $(CFLAGS) -MT origin6_fp-origin6-fp.obj -MD -MP -MF $(DEPDIR)/origin6_fp-origin6-fp.Tpo -c -o origin6_fp-origin6-fp.obj `if test -f 'origin6-fp.c'; then $(CYGPATH_W) 'origin6-fp.c'; else $(CYGPATH_W) '$(srcdir)/origin6-fp.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/origin6_fp-origin6-fp.Tpo $(DEPDIR)/origin6_fp-origin6-fp.Po
#	$(AM_V_CC)source='origin6-fp.c' object='origin6_fp-origin6-fp.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(origin6_fp_CFLAGS) $(CFLAGS) -c -o origin6_fp-origin6-fp.obj `if test -f 'origin6-fp.c'; then $(CYGPATH_W) 'origin6-fp.c'; else $(CYGPATH_W) '$(srcdir)/origin6-fp.c'; fi`

overlap-overlap.o: overlap.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(overlap_CFLAGS) $(CFLAGS) -MT overlap-overlap.o -MD -MP -MF $(DEPDIR)/overlap-overlap.Tpo -c -o overlap-overlap.o `test -f 'overlap.c' || echo '$(srcdir)/'`overlap.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/overlap-overlap.Tpo $(DEPDIR)/overlap-overlap.Po
#	$(AM_V_CC)source='overlap.c' object='overlap-overlap.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(overlap_CFLAGS) $(CFLAGS) -c -o overlap-overlap.o `test -f 'overlap.c' || echo '$(srcdir)/'`overlap.c

overlap-overlap.obj: overlap.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(overlap_CFLAGS) $(CFLAGS) -MT overlap-overlap.obj -MD -MP -MF $(DEPDIR)/overlap-overlap.Tpo -c -o overlap-overlap.obj `if test -f 'overlap.c'; then $(CYGPATH_W) 'overlap.c'; else $(CYGPATH_W) '$(srcdir)/overlap.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/overlap-overlap.Tpo $(DEPDIR)/overlap-overlap.Po
#	$(AM_V_CC)source='overlap.c' object='overlap-overlap.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(overlap_CFLAGS) $(CFLAGS) -c -o overlap-overlap.obj `if test -f 'overlap.c'; then $(CYGPATH_W) 'overlap.c'; else $(CYGPATH_W) '$(srcdir)/overlap.c'; fi`

reach_thread_register-reach_thread_register.o: reach_thread_register.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(reach_thread_register_CFLAGS) $(CFLAGS) -MT reach_thread_register-reach_thread_register.o -MD -MP -MF $(DEPDIR)/reach_thread_register-reach_thread_register.Tpo -c -o reach_thread_register-reach_thread_register.o `test -f 'reach_thread_register.c' || echo '$(srcdir)/'`reach_thread_register.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/reach_thread_register-reach_thread_register.Tpo $(DEPDIR)/reach_thread_register-reach_thread_register.Po
#	$(AM_V_CC)source='reach_thread_register.c' object='reach_thread_register-reach_thread_register.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(reach_thread_register_CFLAGS) $(CFLAGS) -c -o reach_thread_register-reach_thread_register.o `test -f 'reach_thread_register.c' || echo '$(srcdir)/'`reach_thread_register.c

reach_thread_register-reach_thread_register.obj: reach_thread_register.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(reach_thread_register_CFLAGS) $(CFLAGS) -MT reach_thread_register-reach_thread_register.obj -MD -MP -MF $(DEPDIR)/reach_thread_register-reach_thread_register.Tpo -c -o reach_thread_register-reach_thread_register.obj `if test -f 'reach_thread_register.c'; then $(CYGPATH_W) 'reach_thread_register.c'; else $(CYGPATH_W) '$(srcdir)/reach_thread_register.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/reach_thread_register-reach_thread_register.Tpo $(DEPDIR)/reach_thread_register-reach_thread_register.Po
#	$(AM_V_CC)source='reach_thread_register.c' object='reach_thread_register-reach_thread_register.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(reach_thread_register_CFLAGS) $(CFLAGS) -c -o reach_thread_register-reach_thread_register.obj `if test -f 'reach_thread_register.c'; then $(CYGPATH_W) 'reach_thread_register.c'; else $(CYGPATH_W) '$(srcdir)/reach_thread_register.c'; fi`

resvn_stack-resvn_stack.o: resvn_stack.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(resvn_stack_CFLAGS) $(CFLAGS) -MT resvn_stack-resvn_stack.o -MD -MP -MF $(DEPDIR)/resvn_stack-resvn_stack.Tpo -c -o resvn_stack-resvn_stack.o `test -f 'resvn_stack.c' || echo '$(srcdir)/'`resvn_stack.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/resvn_stack-resvn_stack.Tpo $(DEPDIR)/resvn_stack-resvn_stack.Po
#	$(AM_V_CC)source='resvn_stack.c' object='resvn_stack-resvn_stack.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(resvn_stack_CFLAGS) $(CFLAGS) -c -o resvn_stack-resvn_stack.o `test -f 'resvn_stack.c' || echo '$(srcdir)/'`resvn_stack.c

resvn_stack-resvn_stack.obj: resvn_stack.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(resvn_stack_CFLAGS) $(CFLAGS) -MT resvn_stack-resvn_stack.obj -MD -MP -MF $(DEPDIR)/resvn_stack-resvn_stack.Tpo -c -o resvn_stack-resvn_stack.obj `if test -f 'resvn_stack.c'; then $(CYGPATH_W) 'resvn_stack.c'; else $(CYGPATH_W) '$(srcdir)/resvn_stack.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/resvn_stack-resvn_stack.Tpo $(DEPDIR)/resvn_stack-resvn_stack.Po
#	$(AM_V_CC)source='resvn_stack.c' object='resvn_stack-resvn_stack.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(resvn_stack_CFLAGS) $(CFLAGS) -c -o resvn_stack-resvn_stack.obj `if test -f 'resvn_stack.c'; then $(CYGPATH_W) 'resvn_stack.c'; else $(CYGPATH_W) '$(srcdir)/resvn_stack.c'; fi`

sendmsg-sendmsg.o: sendmsg.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sendmsg_CFLAGS) $(CFLAGS) -MT sendmsg-sendmsg.o -MD -MP -MF $(DEPDIR)/sendmsg-sendmsg.Tpo -c -o sendmsg-sendmsg.o `test -f 'sendmsg.c' || echo '$(srcdir)/'`sendmsg.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/sendmsg-sendmsg.Tpo $(DEPDIR)/sendmsg-sendmsg.Po
#	$(AM_V_CC)source='sendmsg.c' object='sendmsg-sendmsg.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sendmsg_CFLAGS) $(CFLAGS) -c -o sendmsg-sendmsg.o `test -f 'sendmsg.c' || echo '$(srcdir)/'`sendmsg.c

sendmsg-sendmsg.obj: sendmsg.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sendmsg_CFLAGS) $(CFLAGS) -MT sendmsg-sendmsg.obj -MD -MP -MF $(DEPDIR)/sendmsg-sendmsg.Tpo -c -o sendmsg-sendmsg.obj `if test -f 'sendmsg.c'; then $(CYGPATH_W) 'sendmsg.c'; else $(CYGPATH_W) '$(srcdir)/sendmsg.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/sendmsg-sendmsg.Tpo $(DEPDIR)/sendmsg-sendmsg.Po
#	$(AM_V_CC)source='sendmsg.c' object='sendmsg-sendmsg.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sendmsg_CFLAGS) $(CFLAGS) -c -o sendmsg-sendmsg.obj `if test -f 'sendmsg.c'; then $(CYGPATH_W) 'sendmsg.c'; else $(CYGPATH_W) '$(srcdir)/sendmsg.c'; fi`

str_tester-str_tester.o: str_tester.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(str_tester_CFLAGS) $(CFLAGS) -MT str_tester-str_tester.o -MD -MP -MF $(DEPDIR)/str_tester-str_tester.Tpo -c -o str_tester-str_tester.o `test -f 'str_tester.c' || echo '$(srcdir)/'`str_tester.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/str_tester-str_tester.Tpo $(DEPDIR)/str_tester-str_tester.Po
#	$(AM_V_CC)source='str_tester.c' object='str_tester-str_tester.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(str_tester_CFLAGS) $(CFLAGS) -c -o str_tester-str_tester.o `test -f 'str_tester.c' || echo '$(srcdir)/'`str_tester.c

str_tester-str_tester.obj: str_tester.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(str_tester_CFLAGS) $(CFLAGS) -MT str_tester-str_tester.obj -MD -MP -MF $(DEPDIR)/str_tester-str_tester.Tpo -c -o str_tester-str_tester.obj `if test -f 'str_tester.c'; then $(CYGPATH_W) 'str_tester.c'; else $(CYGPATH_W) '$(srcdir)/str_tester.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/str_tester-str_tester.Tpo $(DEPDIR)/str_tester-str_tester.Po
#	$(AM_V_CC)source='str_tester.c' object='str_tester-str_tester.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(str_tester_CFLAGS) $(CFLAGS) -c -o str_tester-str_tester.obj `if test -f 'str_tester.c'; then $(CYGPATH_W) 'str_tester.c'; else $(CYGPATH_W) '$(srcdir)/str_tester.c'; fi`

supp1-supp.o: supp.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(supp1_CFLAGS) $(CFLAGS) -MT supp1-supp.o -MD -MP -MF $(DEPDIR)/supp1-supp.Tpo -c -o supp1-supp.o `test -f 'supp.c' || echo '$(srcdir)/'`supp.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/supp1-supp.Tpo $(DEPDIR)/supp1-supp.Po
#	$(AM_V_CC)source='supp.c' object='supp1-supp.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(supp1_CFLAGS) $(CFLAGS) -c -o supp1-supp.o `test -f 'supp.c' || echo '$(srcdir)/'`supp.c

supp1-supp.obj: supp.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(supp1_CFLAGS) $(CFLAGS) -MT supp1-supp.obj -MD -MP -MF $(DEPDIR)/supp1-supp.Tpo -c -o supp1-supp.obj `if test -f 'supp.c'; then $(CYGPATH_W) 'supp.c'; else $(CYGPATH_W) '$(srcdir)/supp.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/supp1-supp.Tpo $(DEPDIR)/supp1-supp.Po
#	$(AM_V_CC)source='supp.c' object='supp1-supp.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(supp1_CFLAGS) $(CFLAGS) -c -o supp1-supp.obj `if test -f 'supp.c'; then $(CYGPATH_W) 'supp.c'; else $(CYGPATH_W) '$(srcdir)/supp.c'; fi`

supp2-supp.o: supp.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(supp2_CFLAGS) $(CFLAGS) -MT supp2-supp.o -MD -MP -MF $(DEPDIR)/supp2-supp.Tpo -c -o supp2-supp.o `test -f 'supp.c' || echo '$(srcdir)/'`supp.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/supp2-supp.Tpo $(DEPDIR)/supp2-supp.Po
#	$(AM_V_CC)source='supp.c' object='supp2-supp.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(supp2_CFLAGS) $(CFLAGS) -c -o supp2-supp.o `test -f 'supp.c' || echo '$(srcdir)/'`supp.c

supp2-supp.obj: supp.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(supp2_CFLAGS) $(CFLAGS) -MT supp2-supp.obj -MD -MP -MF $(DEPDIR)/supp2-supp.Tpo -c -o supp2-supp.obj `if test -f 'supp.c'; then $(CYGPATH_W) 'supp.c'; else $(CYGPATH_W) '$(srcdir)/supp.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/supp2-supp.Tpo $(DEPDIR)/supp2-supp.Po
#	$(AM_V_CC)source='supp.c' object='supp2-supp.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(supp2_CFLAGS) $(CFLAGS) -c -o supp2-supp.obj `if test -f 'supp.c'; then $(CYGPATH_W) 'supp.c'; else $(CYGPATH_W) '$(srcdir)/supp.c'; fi`

supp_unknown-badjump.o: badjump.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(supp_unknown_CFLAGS) $(CFLAGS) -MT supp_unknown-badjump.o -MD -MP -MF $(DEPDIR)/supp_unknown-badjump.Tpo -c -o supp_unknown-badjump.o `test -f 'badjump.c' || echo '$(srcdir)/'`badjump.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/supp_unknown-badjump.Tpo $(DEPDIR)/supp_unknown-badjump.Po
#	$(AM_V_CC)source='badjump.c' object='supp_unknown-badjump.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(supp_unknown_CFLAGS) $(CFLAGS) -c -o supp_unknown-badjump.o `test -f 'badjump.c' || echo '$(srcdir)/'`badjump.c

supp_unknown-badjump.obj: badjump.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(supp_unknown_CFLAGS) $(CFLAGS) -MT supp_unknown-badjump.obj -MD -MP -MF $(DEPDIR)/supp_unknown-badjump.Tpo -c -o supp_unknown-badjump.obj `if test -f 'badjump.c'; then $(CYGPATH_W) 'badjump.c'; else $(CYGPATH_W) '$(srcdir)/badjump.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/supp_unknown-badjump.Tpo $(DEPDIR)/supp_unknown-badjump.Po
#	$(AM_V_CC)source='badjump.c' object='supp_unknown-badjump.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(supp_unknown_CFLAGS) $(CFLAGS) -c -o supp_unknown-badjump.obj `if test -f 'badjump.c'; then $(CYGPATH_W) 'badjump.c'; else $(CYGPATH_W) '$(srcdir)/badjump.c'; fi`

varinfo1-varinfo1.o: varinfo1.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varinfo1_CFLAGS) $(CFLAGS) -MT varinfo1-varinfo1.o -MD -MP -MF $(DEPDIR)/varinfo1-varinfo1.Tpo -c -o varinfo1-varinfo1.o `test -f 'varinfo1.c' || echo '$(srcdir)/'`varinfo1.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/varinfo1-varinfo1.Tpo $(DEPDIR)/varinfo1-varinfo1.Po
#	$(AM_V_CC)source='varinfo1.c' object='varinfo1-varinfo1.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varinfo1_CFLAGS) $(CFLAGS) -c -o varinfo1-varinfo1.o `test -f 'varinfo1.c' || echo '$(srcdir)/'`varinfo1.c

varinfo1-varinfo1.obj: varinfo1.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varinfo1_CFLAGS) $(CFLAGS) -MT varinfo1-varinfo1.obj -MD -MP -MF $(DEPDIR)/varinfo1-varinfo1.Tpo -c -o varinfo1-varinfo1.obj `if test -f 'varinfo1.c'; then $(CYGPATH_W) 'varinfo1.c'; else $(CYGPATH_W) '$(srcdir)/varinfo1.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/varinfo1-varinfo1.Tpo $(DEPDIR)/varinfo1-varinfo1.Po
#	$(AM_V_CC)source='varinfo1.c' object='varinfo1-varinfo1.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varinfo1_CFLAGS) $(CFLAGS) -c -o varinfo1-varinfo1.obj `if test -f 'varinfo1.c'; then $(CYGPATH_W) 'varinfo1.c'; else $(CYGPATH_W) '$(srcdir)/varinfo1.c'; fi`

varinfo2-varinfo2.o: varinfo2.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varinfo2_CFLAGS) $(CFLAGS) -MT varinfo2-varinfo2.o -MD -MP -MF $(DEPDIR)/varinfo2-varinfo2.Tpo -c -o varinfo2-varinfo2.o `test -f 'varinfo2.c' || echo '$(srcdir)/'`varinfo2.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/varinfo2-varinfo2.Tpo $(DEPDIR)/varinfo2-varinfo2.Po
#	$(AM_V_CC)source='varinfo2.c' object='varinfo2-varinfo2.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varinfo2_CFLAGS) $(CFLAGS) -c -o varinfo2-varinfo2.o `test -f 'varinfo2.c' || echo '$(srcdir)/'`varinfo2.c

varinfo2-varinfo2.obj: varinfo2.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varinfo2_CFLAGS) $(CFLAGS) -MT varinfo2-varinfo2.obj -MD -MP -MF $(DEPDIR)/varinfo2-varinfo2.Tpo -c -o varinfo2-varinfo2.obj `if test -f 'varinfo2.c'; then $(CYGPATH_W) 'varinfo2.c'; else $(CYGPATH_W) '$(srcdir)/varinfo2.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/varinfo2-varinfo2.Tpo $(DEPDIR)/varinfo2-varinfo2.Po
#	$(AM_V_CC)source='varinfo2.c' object='varinfo2-varinfo2.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varinfo2_CFLAGS) $(CFLAGS) -c -o varinfo2-varinfo2.obj `if test -f 'varinfo2.c'; then $(CYGPATH_W) 'varinfo2.c'; else $(CYGPATH_W) '$(srcdir)/varinfo2.c'; fi`

varinfo3-varinfo3.o: varinfo3.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varinfo3_CFLAGS) $(CFLAGS) -MT varinfo3-varinfo3.o -MD -MP -MF $(DEPDIR)/varinfo3-varinfo3.Tpo -c -o varinfo3-varinfo3.o `test -f 'varinfo3.c' || echo '$(srcdir)/'`varinfo3.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/varinfo3-varinfo3.Tpo $(DEPDIR)/varinfo3-varinfo3.Po
#	$(AM_V_CC)source='varinfo3.c' object='varinfo3-varinfo3.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varinfo3_CFLAGS) $(CFLAGS) -c -o varinfo3-varinfo3.o `test -f 'varinfo3.c' || echo '$(srcdir)/'`varinfo3.c

varinfo3-varinfo3.obj: varinfo3.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varinfo3_CFLAGS) $(CFLAGS) -MT varinfo3-varinfo3.obj -MD -MP -MF $(DEPDIR)/varinfo3-varinfo3.Tpo -c -o varinfo3-varinfo3.obj `if test -f 'varinfo3.c'; then $(CYGPATH_W) 'varinfo3.c'; else $(CYGPATH_W) '$(srcdir)/varinfo3.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/varinfo3-varinfo3.Tpo $(DEPDIR)/varinfo3-varinfo3.Po
#	$(AM_V_CC)source='varinfo3.c' object='varinfo3-varinfo3.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varinfo3_CFLAGS) $(CFLAGS) -c -o varinfo3-varinfo3.obj `if test -f 'varinfo3.c'; then $(CYGPATH_W) 'varinfo3.c'; else $(CYGPATH_W) '$(srcdir)/varinfo3.c'; fi`

varinfo4-varinfo4.o: varinfo4.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varinfo4_CFLAGS) $(CFLAGS) -MT varinfo4-varinfo4.o -MD -MP -MF $(DEPDIR)/varinfo4-varinfo4.Tpo -c -o varinfo4-varinfo4.o `test -f 'varinfo4.c' || echo '$(srcdir)/'`varinfo4.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/varinfo4-varinfo4.Tpo $(DEPDIR)/varinfo4-varinfo4.Po
#	$(AM_V_CC)source='varinfo4.c' object='varinfo4-varinfo4.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varinfo4_CFLAGS) $(CFLAGS) -c -o varinfo4-varinfo4.o `test -f 'varinfo4.c' || echo '$(srcdir)/'`varinfo4.c

varinfo4-varinfo4.obj: varinfo4.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varinfo4_CFLAGS) $(CFLAGS) -MT varinfo4-varinfo4.obj -MD -MP -MF $(DEPDIR)/varinfo4-varinfo4.Tpo -c -o varinfo4-varinfo4.obj `if test -f 'varinfo4.c'; then $(CYGPATH_W) 'varinfo4.c'; else $(CYGPATH_W) '$(srcdir)/varinfo4.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/varinfo4-varinfo4.Tpo $(DEPDIR)/varinfo4-varinfo4.Po
#	$(AM_V_CC)source='varinfo4.c' object='varinfo4-varinfo4.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varinfo4_CFLAGS) $(CFLAGS) -c -o varinfo4-varinfo4.obj `if test -f 'varinfo4.c'; then $(CYGPATH_W) 'varinfo4.c'; else $(CYGPATH_W) '$(srcdir)/varinfo4.c'; fi`

varinfo5-varinfo5.o: varinfo5.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varinfo5_CFLAGS) $(CFLAGS) -MT varinfo5-varinfo5.o -MD -MP -MF $(DEPDIR)/varinfo5-varinfo5.Tpo -c -o varinfo5-varinfo5.o `test -f 'varinfo5.c' || echo '$(srcdir)/'`varinfo5.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/varinfo5-varinfo5.Tpo $(DEPDIR)/varinfo5-varinfo5.Po
#	$(AM_V_CC)source='varinfo5.c' object='varinfo5-varinfo5.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varinfo5_CFLAGS) $(CFLAGS) -c -o varinfo5-varinfo5.o `test -f 'varinfo5.c' || echo '$(srcdir)/'`varinfo5.c

varinfo5-varinfo5.obj: varinfo5.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varinfo5_CFLAGS) $(CFLAGS) -MT varinfo5-varinfo5.obj -MD -MP -MF $(DEPDIR)/varinfo5-varinfo5.Tpo -c -o varinfo5-varinfo5.obj `if test -f 'varinfo5.c'; then $(CYGPATH_W) 'varinfo5.c'; else $(CYGPATH_W) '$(srcdir)/varinfo5.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/varinfo5-varinfo5.Tpo $(DEPDIR)/varinfo5-varinfo5.Po
#	$(AM_V_CC)source='varinfo5.c' object='varinfo5-varinfo5.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varinfo5_CFLAGS) $(CFLAGS) -c -o varinfo5-varinfo5.obj `if test -f 'varinfo5.c'; then $(CYGPATH_W) 'varinfo5.c'; else $(CYGPATH_W) '$(srcdir)/varinfo5.c'; fi`

varinfo5so_so-varinfo5so.o: varinfo5so.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varinfo5so_so_CFLAGS) $(CFLAGS) -MT varinfo5so_so-varinfo5so.o -MD -MP -MF $(DEPDIR)/varinfo5so_so-varinfo5so.Tpo -c -o varinfo5so_so-varinfo5so.o `test -f 'varinfo5so.c' || echo '$(srcdir)/'`varinfo5so.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/varinfo5so_so-varinfo5so.Tpo $(DEPDIR)/varinfo5so_so-varinfo5so.Po
#	$(AM_V_CC)source='varinfo5so.c' object='varinfo5so_so-varinfo5so.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varinfo5so_so_CFLAGS) $(CFLAGS) -c -o varinfo5so_so-varinfo5so.o `test -f 'varinfo5so.c' || echo '$(srcdir)/'`varinfo5so.c

varinfo5so_so-varinfo5so.obj: varinfo5so.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varinfo5so_so_CFLAGS) $(CFLAGS) -MT varinfo5so_so-varinfo5so.obj -MD -MP -MF $(DEPDIR)/varinfo5so_so-varinfo5so.Tpo -c -o varinfo5so_so-varinfo5so.obj `if test -f 'varinfo5so.c'; then $(CYGPATH_W) 'varinfo5so.c'; else $(CYGPATH_W) '$(srcdir)/varinfo5so.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/varinfo5so_so-varinfo5so.Tpo $(DEPDIR)/varinfo5so_so-varinfo5so.Po
#	$(AM_V_CC)source='varinfo5so.c' object='varinfo5so_so-varinfo5so.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varinfo5so_so_CFLAGS) $(CFLAGS) -c -o varinfo5so_so-varinfo5so.obj `if test -f 'varinfo5so.c'; then $(CYGPATH_W) 'varinfo5so.c'; else $(CYGPATH_W) '$(srcdir)/varinfo5so.c'; fi`

varinfo6-varinfo6.o: varinfo6.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varinfo6_CFLAGS) $(CFLAGS) -MT varinfo6-varinfo6.o -MD -MP -MF $(DEPDIR)/varinfo6-varinfo6.Tpo -c -o varinfo6-varinfo6.o `test -f 'varinfo6.c' || echo '$(srcdir)/'`varinfo6.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/varinfo6-varinfo6.Tpo $(DEPDIR)/varinfo6-varinfo6.Po
#	$(AM_V_CC)source='varinfo6.c' object='varinfo6-varinfo6.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varinfo6_CFLAGS) $(CFLAGS) -c -o varinfo6-varinfo6.o `test -f 'varinfo6.c' || echo '$(srcdir)/'`varinfo6.c

varinfo6-varinfo6.obj: varinfo6.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varinfo6_CFLAGS) $(CFLAGS) -MT varinfo6-varinfo6.obj -MD -MP -MF $(DEPDIR)/varinfo6-varinfo6.Tpo -c -o varinfo6-varinfo6.obj `if test -f 'varinfo6.c'; then $(CYGPATH_W) 'varinfo6.c'; else $(CYGPATH_W) '$(srcdir)/varinfo6.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/varinfo6-varinfo6.Tpo $(DEPDIR)/varinfo6-varinfo6.Po
#	$(AM_V_CC)source='varinfo6.c' object='varinfo6-varinfo6.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varinfo6_CFLAGS) $(CFLAGS) -c -o varinfo6-varinfo6.obj `if test -f 'varinfo6.c'; then $(CYGPATH_W) 'varinfo6.c'; else $(CYGPATH_W) '$(srcdir)/varinfo6.c'; fi`

varinforestrict-varinforestrict.o: varinforestrict.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varinforestrict_CFLAGS) $(CFLAGS) -MT varinforestrict-varinforestrict.o -MD -MP -MF $(DEPDIR)/varinforestrict-varinforestrict.Tpo -c -o varinforestrict-varinforestrict.o `test -f 'varinforestrict.c' || echo '$(srcdir)/'`varinforestrict.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/varinforestrict-varinforestrict.Tpo $(DEPDIR)/varinforestrict-varinforestrict.Po
#	$(AM_V_CC)source='varinforestrict.c' object='varinforestrict-varinforestrict.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varinforestrict_CFLAGS) $(CFLAGS) -c -o varinforestrict-varinforestrict.o `test -f 'varinforestrict.c' || echo '$(srcdir)/'`varinforestrict.c

varinforestrict-varinforestrict.obj: varinforestrict.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varinforestrict_CFLAGS) $(CFLAGS) -MT varinforestrict-varinforestrict.obj -MD -MP -MF $(DEPDIR)/varinforestrict-varinforestrict.Tpo -c -o varinforestrict-varinforestrict.obj `if test -f 'varinforestrict.c'; then $(CYGPATH_W) 'varinforestrict.c'; else $(CYGPATH_W) '$(srcdir)/varinforestrict.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/varinforestrict-varinforestrict.Tpo $(DEPDIR)/varinforestrict-varinforestrict.Po
#	$(AM_V_CC)source='varinforestrict.c' object='varinforestrict-varinforestrict.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varinforestrict_CFLAGS) $(CFLAGS) -c -o varinforestrict-varinforestrict.obj `if test -f 'varinforestrict.c'; then $(CYGPATH_W) 'varinforestrict.c'; else $(CYGPATH_W) '$(srcdir)/varinforestrict.c'; fi`

vcpu_fbench-vcpu_fbench.o: vcpu_fbench.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vcpu_fbench_CFLAGS) $(CFLAGS) -MT vcpu_fbench-vcpu_fbench.o -MD -MP -MF $(DEPDIR)/vcpu_fbench-vcpu_fbench.Tpo -c -o vcpu_fbench-vcpu_fbench.o `test -f 'vcpu_fbench.c' || echo '$(srcdir)/'`vcpu_fbench.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/vcpu_fbench-vcpu_fbench.Tpo $(DEPDIR)/vcpu_fbench-vcpu_fbench.Po
#	$(AM_V_CC)source='vcpu_fbench.c' object='vcpu_fbench-vcpu_fbench.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vcpu_fbench_CFLAGS) $(CFLAGS) -c -o vcpu_fbench-vcpu_fbench.o `test -f 'vcpu_fbench.c' || echo '$(srcdir)/'`vcpu_fbench.c

vcpu_fbench-vcpu_fbench.obj: vcpu_fbench.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vcpu_fbench_CFLAGS) $(CFLAGS) -MT vcpu_fbench-vcpu_fbench.obj -MD -MP -MF $(DEPDIR)/vcpu_fbench-vcpu_fbench.Tpo -c -o vcpu_fbench-vcpu_fbench.obj `if test -f 'vcpu_fbench.c'; then $(CYGPATH_W) 'vcpu_fbench.c'; else $(CYGPATH_W) '$(srcdir)/vcpu_fbench.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/vcpu_fbench-vcpu_fbench.Tpo $(DEPDIR)/vcpu_fbench-vcpu_fbench.Po
#	$(AM_V_CC)source='vcpu_fbench.c' object='vcpu_fbench-vcpu_fbench.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vcpu_fbench_CFLAGS) $(CFLAGS) -c -o vcpu_fbench-vcpu_fbench.obj `if test -f 'vcpu_fbench.c'; then $(CYGPATH_W) 'vcpu_fbench.c'; else $(CYGPATH_W) '$(srcdir)/vcpu_fbench.c'; fi`

vcpu_fnfns-vcpu_fnfns.o: vcpu_fnfns.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vcpu_fnfns_CFLAGS) $(CFLAGS) -MT vcpu_fnfns-vcpu_fnfns.o -MD -MP -MF $(DEPDIR)/vcpu_fnfns-vcpu_fnfns.Tpo -c -o vcpu_fnfns-vcpu_fnfns.o `test -f 'vcpu_fnfns.c' || echo '$(srcdir)/'`vcpu_fnfns.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/vcpu_fnfns-vcpu_fnfns.Tpo $(DEPDIR)/vcpu_fnfns-vcpu_fnfns.Po
#	$(AM_V_CC)source='vcpu_fnfns.c' object='vcpu_fnfns-vcpu_fnfns.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vcpu_fnfns_CFLAGS) $(CFLAGS) -c -o vcpu_fnfns-vcpu_fnfns.o `test -f 'vcpu_fnfns.c' || echo '$(srcdir)/'`vcpu_fnfns.c

vcpu_fnfns-vcpu_fnfns.obj: vcpu_fnfns.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vcpu_fnfns_CFLAGS) $(CFLAGS) -MT vcpu_fnfns-vcpu_fnfns.obj -MD -MP -MF $(DEPDIR)/vcpu_fnfns-vcpu_fnfns.Tpo -c -o vcpu_fnfns-vcpu_fnfns.obj `if test -f 'vcpu_fnfns.c'; then $(CYGPATH_W) 'vcpu_fnfns.c'; else $(CYGPATH_W) '$(srcdir)/vcpu_fnfns.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/vcpu_fnfns-vcpu_fnfns.Tpo $(DEPDIR)/vcpu_fnfns-vcpu_fnfns.Po
#	$(AM_V_CC)source='vcpu_fnfns.c' object='vcpu_fnfns-vcpu_fnfns.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vcpu_fnfns_CFLAGS) $(CFLAGS) -c -o vcpu_fnfns-vcpu_fnfns.obj `if test -f 'vcpu_fnfns.c'; then $(CYGPATH_W) 'vcpu_fnfns.c'; else $(CYGPATH_W) '$(srcdir)/vcpu_fnfns.c'; fi`

wrap6-wrap6.o: wrap6.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(wrap6_CFLAGS) $(CFLAGS) -MT wrap6-wrap6.o -MD -MP -MF $(DEPDIR)/wrap6-wrap6.Tpo -c -o wrap6-wrap6.o `test -f 'wrap6.c' || echo '$(srcdir)/'`wrap6.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/wrap6-wrap6.Tpo $(DEPDIR)/wrap6-wrap6.Po
#	$(AM_V_CC)source='wrap6.c' object='wrap6-wrap6.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(wrap6_CFLAGS) $(CFLAGS) -c -o wrap6-wrap6.o `test -f 'wrap6.c' || echo '$(srcdir)/'`wrap6.c

wrap6-wrap6.obj: wrap6.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(wrap6_CFLAGS) $(CFLAGS) -MT wrap6-wrap6.obj -MD -MP -MF $(DEPDIR)/wrap6-wrap6.Tpo -c -o wrap6-wrap6.obj `if test -f 'wrap6.c'; then $(CYGPATH_W) 'wrap6.c'; else $(CYGPATH_W) '$(srcdir)/wrap6.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/wrap6-wrap6.Tpo $(DEPDIR)/wrap6-wrap6.Po
#	$(AM_V_CC)source='wrap6.c' object='wrap6-wrap6.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(wrap6_CFLAGS) $(CFLAGS) -c -o wrap6-wrap6.obj `if test -f 'wrap6.c'; then $(CYGPATH_W) 'wrap6.c'; else $(CYGPATH_W) '$(srcdir)/wrap6.c'; fi`

wrap7so_so-wrap7so.o: wrap7so.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(wrap7so_so_CFLAGS) $(CFLAGS) -MT wrap7so_so-wrap7so.o -MD -MP -MF $(DEPDIR)/wrap7so_so-wrap7so.Tpo -c -o wrap7so_so-wrap7so.o `test -f 'wrap7so.c' || echo '$(srcdir)/'`wrap7so.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/wrap7so_so-wrap7so.Tpo $(DEPDIR)/wrap7so_so-wrap7so.Po
#	$(AM_V_CC)source='wrap7so.c' object='wrap7so_so-wrap7so.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(wrap7so_so_CFLAGS) $(CFLAGS) -c -o wrap7so_so-wrap7so.o `test -f 'wrap7so.c' || echo '$(srcdir)/'`wrap7so.c

wrap7so_so-wrap7so.obj: wrap7so.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(wrap7so_so_CFLAGS) $(CFLAGS) -MT wrap7so_so-wrap7so.obj -MD -MP -MF $(DEPDIR)/wrap7so_so-wrap7so.Tpo -c -o wrap7so_so-wrap7so.obj `if test -f 'wrap7so.c'; then $(CYGPATH_W) 'wrap7so.c'; else $(CYGPATH_W) '$(srcdir)/wrap7so.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/wrap7so_so-wrap7so.Tpo $(DEPDIR)/wrap7so_so-wrap7so.Po
#	$(AM_V_CC)source='wrap7so.c' object='wrap7so_so-wrap7so.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(wrap7so_so_CFLAGS) $(CFLAGS) -c -o wrap7so_so-wrap7so.obj `if test -f 'wrap7so.c'; then $(CYGPATH_W) 'wrap7so.c'; else $(CYGPATH_W) '$(srcdir)/wrap7so.c'; fi`

xml1-xml1.o: xml1.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(xml1_CFLAGS) $(CFLAGS) -MT xml1-xml1.o -MD -MP -MF $(DEPDIR)/xml1-xml1.Tpo -c -o xml1-xml1.o `test -f 'xml1.c' || echo '$(srcdir)/'`xml1.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/xml1-xml1.Tpo $(DEPDIR)/xml1-xml1.Po
#	$(AM_V_CC)source='xml1.c' object='xml1-xml1.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(xml1_CFLAGS) $(CFLAGS) -c -o xml1-xml1.o `test -f 'xml1.c' || echo '$(srcdir)/'`xml1.c

xml1-xml1.obj: xml1.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(xml1_CFLAGS) $(CFLAGS) -MT xml1-xml1.obj -MD -MP -MF $(DEPDIR)/xml1-xml1.Tpo -c -o xml1-xml1.obj `if test -f 'xml1.c'; then $(CYGPATH_W) 'xml1.c'; else $(CYGPATH_W) '$(srcdir)/xml1.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/xml1-xml1.Tpo $(DEPDIR)/xml1-xml1.Po
#	$(AM_V_CC)source='xml1.c' object='xml1-xml1.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(xml1_CFLAGS) $(CFLAGS) -c -o xml1-xml1.obj `if test -f 'xml1.c'; then $(CYGPATH_W) 'xml1.c'; else $(CYGPATH_W) '$(srcdir)/xml1.c'; fi`

.cpp.o:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

inltemplate-inltemplate.o: inltemplate.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(inltemplate_CXXFLAGS) $(CXXFLAGS) -MT inltemplate-inltemplate.o -MD -MP -MF $(DEPDIR)/inltemplate-inltemplate.Tpo -c -o inltemplate-inltemplate.o `test -f 'inltemplate.cpp' || echo '$(srcdir)/'`inltemplate.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/inltemplate-inltemplate.Tpo $(DEPDIR)/inltemplate-inltemplate.Po
#	$(AM_V_CXX)source='inltemplate.cpp' object='inltemplate-inltemplate.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(inltemplate_CXXFLAGS) $(CXXFLAGS) -c -o inltemplate-inltemplate.o `test -f 'inltemplate.cpp' || echo '$(srcdir)/'`inltemplate.cpp

inltemplate-inltemplate.obj: inltemplate.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(inltemplate_CXXFLAGS) $(CXXFLAGS) -MT inltemplate-inltemplate.obj -MD -MP -MF $(DEPDIR)/inltemplate-inltemplate.Tpo -c -o inltemplate-inltemplate.obj `if test -f 'inltemplate.cpp'; then $(CYGPATH_W) 'inltemplate.cpp'; else $(CYGPATH_W) '$(srcdir)/inltemplate.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/inltemplate-inltemplate.Tpo $(DEPDIR)/inltemplate-inltemplate.Po
#	$(AM_V_CXX)source='inltemplate.cpp' object='inltemplate-inltemplate.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(inltemplate_CXXFLAGS) $(CXXFLAGS) -c -o inltemplate-inltemplate.obj `if test -f 'inltemplate.cpp'; then $(CYGPATH_W) 'inltemplate.cpp'; else $(CYGPATH_W) '$(srcdir)/inltemplate.cpp'; fi`

mismatches-mismatches.o: mismatches.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mismatches_CXXFLAGS) $(CXXFLAGS) -MT mismatches-mismatches.o -MD -MP -MF $(DEPDIR)/mismatches-mismatches.Tpo -c -o mismatches-mismatches.o `test -f 'mismatches.cpp' || echo '$(srcdir)/'`mismatches.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/mismatches-mismatches.Tpo $(DEPDIR)/mismatches-mismatches.Po
#	$(AM_V_CXX)source='mismatches.cpp' object='mismatches-mismatches.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mismatches_CXXFLAGS) $(CXXFLAGS) -c -o mismatches-mismatches.o `test -f 'mismatches.cpp' || echo '$(srcdir)/'`mismatches.cpp

mismatches-mismatches.obj: mismatches.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mismatches_CXXFLAGS) $(CXXFLAGS) -MT mismatches-mismatches.obj -MD -MP -MF $(DEPDIR)/mismatches-mismatches.Tpo -c -o mismatches-mismatches.obj `if test -f 'mismatches.cpp'; then $(CYGPATH_W) 'mismatches.cpp'; else $(CYGPATH_W) '$(srcdir)/mismatches.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/mismatches-mismatches.Tpo $(DEPDIR)/mismatches-mismatches.Po
#	$(AM_V_CXX)source='mismatches.cpp' object='mismatches-mismatches.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mismatches_CXXFLAGS) $(CXXFLAGS) -c -o mismatches-mismatches.obj `if test -f 'mismatches.cpp'; then $(CYGPATH_W) 'mismatches.cpp'; else $(CYGPATH_W) '$(srcdir)/mismatches.cpp'; fi`

# This directory's subdirectories are mostly independent; you can cd
# into them and run 'make' without going through this Makefile.
# To change the values of 'make' variables: instead of editing Makefiles,
# (1) if the variable is set in 'config.status', edit 'config.status'
#     (which will cause the Makefiles to be regenerated when you run 'make');
# (2) otherwise, pass the desired values on the 'make' command line.
$(am__recursive_targets):
	@fail=; \
	if $(am__make_keepgoing); then \
	  failcom='fail=yes'; \
	else \
	  failcom='exit 1'; \
	fi; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-recursive
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      set "$$@" "$$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-recursive

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-recursive

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    $(am__make_dryrun) \
	      || test -d "$(distdir)/$$subdir" \
	      || $(MKDIR_P) "$(distdir)/$$subdir" \
	      || exit 1; \
	    dir1=$$subdir; dir2="$(distdir)/$$subdir"; \
	    $(am__relativize); \
	    new_distdir=$$reldir; \
	    dir1=$$subdir; dir2="$(top_distdir)"; \
	    $(am__relativize); \
	    new_top_distdir=$$reldir; \
	    echo " (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) top_distdir="$$new_top_distdir" distdir="$$new_distdir" \\"; \
	    echo "     am__remove_distdir=: am__skip_length_check=: am__skip_mode_fix=: distdir)"; \
	    ($(am__cd) $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$new_top_distdir" \
	        distdir="$$new_distdir" \
		am__remove_distdir=: \
		am__skip_length_check=: \
		am__skip_mode_fix=: \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS)
	$(MAKE) $(AM_MAKEFLAGS) check-local
check: check-recursive
all-am: Makefile $(SCRIPTS) $(HEADERS)
installdirs: installdirs-recursive
installdirs-am:
install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-recursive

clean-am: clean-checkPROGRAMS clean-generic clean-local mostlyclean-am

distclean: distclean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

html-am:

info: info-recursive

info-am:

install-data-am:

install-dvi: install-dvi-recursive

install-dvi-am:

install-exec-am:

install-html: install-html-recursive

install-html-am:

install-info: install-info-recursive

install-info-am:

install-man:

install-pdf: install-pdf-recursive

install-pdf-am:

install-ps: install-ps-recursive

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am:

.MAKE: $(am__recursive_targets) check-am install-am install-strip

.PHONY: $(am__recursive_targets) CTAGS GTAGS TAGS all all-am check \
	check-am check-local clean clean-checkPROGRAMS clean-generic \
	clean-local cscopelist-am ctags ctags-am distclean \
	distclean-compile distclean-generic distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs installdirs-am \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic pdf pdf-am ps ps-am \
	tags tags-am uninstall uninstall-am


# This used to be required when Vex had a handwritten Makefile.  It
# shouldn't be needed any more, though.

#----------------------------------------------------------------------------
# noinst_PROGRAMS and noinst_DSYMS targets
#----------------------------------------------------------------------------

# On Darwin, for a program 'p', the DWARF debug info is stored in the
# directory 'p.dSYM'.  This must be generated after the executable is
# created, with 'dsymutil p'.  We could redefine LINK with a script that
# executes 'dsymutil' after linking, but that's a pain.  Instead we use this
# hook so that every time "make check" is run, we subsequently invoke
# 'dsymutil' on all the executables that lack a .dSYM directory, or that are
# newer than their corresponding .dSYM directory.
build-noinst_DSYMS: $(noinst_DSYMS)
	for f in $(noinst_DSYMS); do \
	  if [ ! -e $$f.dSYM  -o  $$f -nt $$f.dSYM ] ; then \
	      echo "dsymutil $$f"; \
	      dsymutil $$f; \
	  fi; \
	done

# This is used by coregrind/Makefile.am and Makefile.tool.am for doing
# "in-place" installs.  It copies $(noinst_PROGRAMS) into $inplacedir.
# It needs to be depended on by an 'all-local' rule.
inplace-noinst_PROGRAMS: $(noinst_PROGRAMS)
	mkdir -p $(inplacedir); \
	for f in $(noinst_PROGRAMS) ; do \
	  rm -f $(inplacedir)/$$f; \
	  ln -f -s ../$(subdir)/$$f $(inplacedir); \
	done

# Similar to inplace-noinst_PROGRAMS
inplace-noinst_DSYMS: build-noinst_DSYMS
	mkdir -p $(inplacedir); \
	for f in $(noinst_DSYMS); do \
	  rm -f $(inplacedir)/$$f.dSYM; \
	  ln -f -s ../$(subdir)/$$f.dSYM $(inplacedir); \
	done

# This is used by coregrind/Makefile.am and by <tool>/Makefile.am for doing
# "make install".  It copies $(noinst_PROGRAMS) into $prefix/lib/valgrind/.
# It needs to be depended on by an 'install-exec-local' rule.
install-noinst_PROGRAMS: $(noinst_PROGRAMS)
	$(mkinstalldirs) $(DESTDIR)$(pkglibdir); \
	for f in $(noinst_PROGRAMS); do \
	  $(INSTALL_PROGRAM) $$f $(DESTDIR)$(pkglibdir); \
	done

# This is used by coregrind/Makefile.am and by <tool>/Makefile.am for doing
# "make uninstall".  It removes $(noinst_PROGRAMS) from $prefix/lib/valgrind/.
# It needs to be depended on by an 'uninstall-local' rule.
uninstall-noinst_PROGRAMS:
	for f in $(noinst_PROGRAMS); do \
	  rm -f $(DESTDIR)$(pkglibdir)/$$f; \
	done

# Similar to install-noinst_PROGRAMS.
# Nb: we don't use $(INSTALL_PROGRAM) here because it doesn't work with
# directories.  XXX: not sure whether the resulting permissions will be
# correct when using 'cp -R'...
install-noinst_DSYMS: build-noinst_DSYMS
	$(mkinstalldirs) $(DESTDIR)$(pkglibdir); \
	for f in $(noinst_DSYMS); do \
	  cp -R $$f.dSYM $(DESTDIR)$(pkglibdir); \
	done

# Similar to uninstall-noinst_PROGRAMS.
uninstall-noinst_DSYMS:
	for f in $(noinst_DSYMS); do \
	  rm -f $(DESTDIR)$(pkglibdir)/$$f.dSYM; \
	done

# This needs to be depended on by a 'clean-local' rule.
clean-noinst_DSYMS:
	for f in $(noinst_DSYMS); do \
	  rm -rf $$f.dSYM; \
	done

check-local: build-noinst_DSYMS

clean-local: clean-noinst_DSYMS

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
