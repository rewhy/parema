# Makefile.in generated by automake 1.14.1 from Makefile.am.
# memcheck/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2013 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



# This file should be included (directly or indirectly) by every
# Makefile.am that builds programs.  And also the top-level Makefile.am.

#----------------------------------------------------------------------------
# Global stuff
#----------------------------------------------------------------------------



am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/valgrind
pkgincludedir = $(includedir)/valgrind
pkglibdir = $(libdir)/valgrind
pkglibexecdir = $(libexecdir)/valgrind
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-unknown-linux-gnu
host_triplet = armv7-unknown-linux-gnu
DIST_COMMON = $(top_srcdir)/Makefile.tool.am \
	$(top_srcdir)/Makefile.all.am $(srcdir)/Makefile.in \
	$(srcdir)/Makefile.am $(top_srcdir)/depcomp $(noinst_HEADERS) \
	$(pkginclude_HEADERS)
#am__append_1 = -Wno-cast-align -Wno-self-assign \
#                  -Wno-tautological-compare

#am__append_2 = -Wl,-M,$(top_srcdir)/solaris/vgpreload-solaris.mapfile

# The Android toolchain includes all kinds of stdlib helpers present in
# bionic which is bad because we are not linking with it and the Android
# linker will panic.
am__append_3 = -nostdlib

# On Android we must ask for non-executable stack, not sure why.
am__append_4 = -Wl,-z,noexecstack
noinst_PROGRAMS = memcheck-arm-linux$(EXEEXT) \
	$(am__EXEEXT_1) \
	vgpreload_memcheck-arm-linux.so$(EXEEXT) \
	$(am__EXEEXT_2)
#am__append_5 = memcheck--linux
memcheck__linux_DEPENDENCIES =
#am__append_6 = vgpreload_memcheck--linux.so
subdir = memcheck
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
#am__EXEEXT_1 = memcheck--linux$(EXEEXT)
#am__EXEEXT_2 = vgpreload_memcheck--linux.so$(EXEEXT)
PROGRAMS = $(noinst_PROGRAMS)
am__objects_1 =  \
	memcheck_arm_linux-mc_leakcheck.$(OBJEXT) \
	memcheck_arm_linux-mc_malloc_wrappers.$(OBJEXT) \
	memcheck_arm_linux-mc_main.$(OBJEXT) \
	memcheck_arm_linux-mc_translate.$(OBJEXT) \
	memcheck_arm_linux-mc_machine.$(OBJEXT) \
	memcheck_arm_linux-mc_errors.$(OBJEXT)
am_memcheck_arm_linux_OBJECTS = $(am__objects_1)
memcheck_arm_linux_OBJECTS =  \
	$(am_memcheck_arm_linux_OBJECTS)
am__memcheck__linux_SOURCES_DIST =  \
	mc_leakcheck.c mc_malloc_wrappers.c mc_main.c mc_translate.c \
	mc_machine.c mc_errors.c
am__objects_2 =  \
	memcheck__linux-mc_leakcheck.$(OBJEXT) \
	memcheck__linux-mc_malloc_wrappers.$(OBJEXT) \
	memcheck__linux-mc_main.$(OBJEXT) \
	memcheck__linux-mc_translate.$(OBJEXT) \
	memcheck__linux-mc_machine.$(OBJEXT) \
	memcheck__linux-mc_errors.$(OBJEXT)
#am_memcheck__linux_OBJECTS =  \
#	$(am__objects_2)
memcheck__linux_OBJECTS =  \
	$(am_memcheck__linux_OBJECTS)
am__objects_3 = vgpreload_memcheck_arm_linux_so-mc_replace_strmem.$(OBJEXT)
am_vgpreload_memcheck_arm_linux_so_OBJECTS =  \
	$(am__objects_3)
vgpreload_memcheck_arm_linux_so_OBJECTS = $(am_vgpreload_memcheck_arm_linux_so_OBJECTS)
vgpreload_memcheck_arm_linux_so_LDADD = $(LDADD)
vgpreload_memcheck_arm_linux_so_LINK = $(CCLD) \
	$(vgpreload_memcheck_arm_linux_so_CFLAGS) \
	$(CFLAGS) \
	$(vgpreload_memcheck_arm_linux_so_LDFLAGS) \
	$(LDFLAGS) -o $@
am__vgpreload_memcheck__linux_so_SOURCES_DIST =  \
	mc_replace_strmem.c
am__objects_4 = vgpreload_memcheck__linux_so-mc_replace_strmem.$(OBJEXT)
#am_vgpreload_memcheck__linux_so_OBJECTS =  \
#	$(am__objects_4)
vgpreload_memcheck__linux_so_OBJECTS = $(am_vgpreload_memcheck__linux_so_OBJECTS)
vgpreload_memcheck__linux_so_LDADD = $(LDADD)
vgpreload_memcheck__linux_so_LINK = $(CCLD) \
	$(vgpreload_memcheck__linux_so_CFLAGS) \
	$(CFLAGS) \
	$(vgpreload_memcheck__linux_so_LDFLAGS) \
	$(LDFLAGS) -o $@
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(memcheck_arm_linux_SOURCES) \
	$(memcheck__linux_SOURCES) \
	$(vgpreload_memcheck_arm_linux_so_SOURCES) \
	$(vgpreload_memcheck__linux_so_SOURCES)
DIST_SOURCES = $(memcheck_arm_linux_SOURCES) \
	$(am__memcheck__linux_SOURCES_DIST) \
	$(vgpreload_memcheck_arm_linux_so_SOURCES) \
	$(am__vgpreload_memcheck__linux_so_SOURCES_DIST)
RECURSIVE_TARGETS = all-recursive check-recursive cscopelist-recursive \
	ctags-recursive dvi-recursive html-recursive info-recursive \
	install-data-recursive install-dvi-recursive \
	install-exec-recursive install-html-recursive \
	install-info-recursive install-pdf-recursive \
	install-ps-recursive install-recursive installcheck-recursive \
	installdirs-recursive pdf-recursive ps-recursive \
	tags-recursive uninstall-recursive
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__installdirs = "$(DESTDIR)$(pkgincludedir)"
HEADERS = $(noinst_HEADERS) $(pkginclude_HEADERS)
RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
  distclean-recursive maintainer-clean-recursive
am__recursive_targets = \
  $(RECURSIVE_TARGETS) \
  $(RECURSIVE_CLEAN_TARGETS) \
  $(am__extra_recursive_targets)
AM_RECURSIVE_TARGETS = $(am__recursive_targets:-recursive=) TAGS CTAGS \
	distdir
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
DIST_SUBDIRS = $(SUBDIRS)
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
am__relativize = \
  dir0=`pwd`; \
  sed_first='s,^\([^/]*\)/.*$$,\1,'; \
  sed_rest='s,^[^/]*/*,,'; \
  sed_last='s,^.*/\([^/]*\)$$,\1,'; \
  sed_butlast='s,/*[^/]*$$,,'; \
  while test -n "$$dir1"; do \
    first=`echo "$$dir1" | sed -e "$$sed_first"`; \
    if test "$$first" != "."; then \
      if test "$$first" = ".."; then \
        dir2=`echo "$$dir0" | sed -e "$$sed_last"`/"$$dir2"; \
        dir0=`echo "$$dir0" | sed -e "$$sed_butlast"`; \
      else \
        first2=`echo "$$dir2" | sed -e "$$sed_first"`; \
        if test "$$first2" = "$$first"; then \
          dir2=`echo "$$dir2" | sed -e "$$sed_rest"`; \
        else \
          dir2="../$$dir2"; \
        fi; \
        dir0="$$dir0"/"$$first"; \
      fi; \
    fi; \
    dir1=`echo "$$dir1" | sed -e "$$sed_rest"`; \
  done; \
  reldir="$$dir2"
ACLOCAL = ${SHELL} /home/jeremy/Data/AndroidSource/Android-M/external/valgrind/missing aclocal-1.14
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 1
AR = /home/jeremy/tools/android-ndk-r10e/toolchains/arm-linux-androideabi-4.9/prebuilt/linux-x86_64/bin/arm-linux-androideabi-ar
AUTOCONF = ${SHELL} /home/jeremy/Data/AndroidSource/Android-M/external/valgrind/missing autoconf
AUTOHEADER = ${SHELL} /home/jeremy/Data/AndroidSource/Android-M/external/valgrind/missing autoheader
AUTOMAKE = ${SHELL} /home/jeremy/Data/AndroidSource/Android-M/external/valgrind/missing automake-1.14
AWK = gawk
BOOST_CFLAGS = 
BOOST_LIBS = 
CC = /home/jeremy/tools/android-ndk-r10e/toolchains/arm-linux-androideabi-4.9/prebuilt/linux-x86_64/bin/arm-linux-androideabi-gcc
CCAS = /home/jeremy/tools/android-ndk-r10e/toolchains/arm-linux-androideabi-4.9/prebuilt/linux-x86_64/bin/arm-linux-androideabi-gcc
CCASDEPMODE = depmode=gcc3
CCASFLAGS = --sysroot=/home/jeremy/tools/android-ndk-r10e/platforms/android-19/arch-arm
CCDEPMODE = depmode=gcc3
CFLAGS = --sysroot=/home/jeremy/tools/android-ndk-r10e/platforms/android-19/arch-arm
CFLAGS_MPI = -g -O -fno-omit-frame-pointer -Wall -fpic
CPP = /home/jeremy/tools/android-ndk-r10e/toolchains/arm-linux-androideabi-4.9/prebuilt/linux-x86_64/bin/arm-linux-androideabi-gcc -E
CPPFLAGS = --sysroot=/home/jeremy/tools/android-ndk-r10e/platforms/android-19/arch-arm -DANDROID_HARDWARE_NEXUS_5
CXX = /home/jeremy/tools/android-ndk-r10e/toolchains/arm-linux-androideabi-4.9/prebuilt/linux-x86_64/bin/arm-linux-androideabi-g++
CXXDEPMODE = depmode=gcc3
CXXFLAGS = 
CYGPATH_W = echo
DEFAULT_SUPP = exp-sgcheck.supp xfree-3.supp xfree-4.supp bionic.supp 
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DIFF = diff -u
DIS_PATH = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
FLAG_FNO_IPA_ICF = 
FLAG_FNO_STACK_PROTECTOR = -fno-stack-protector
FLAG_FSANITIZE = 
FLAG_M32 = 
FLAG_M64 = 
FLAG_MIPS32 = 
FLAG_MIPS64 = 
FLAG_MLONG_DOUBLE_128 = -mlong-double-128
FLAG_MMMX = 
FLAG_MSSE = 
FLAG_NO_BUILD_ID = 
FLAG_OCTEON = 
FLAG_OCTEON2 = 
FLAG_T_TEXT = -Ttext-segment
FLAG_UNLIMITED_INLINE_UNIT_GROWTH = --param inline-unit-growth=900
FLAG_W_CAST_ALIGN = 
FLAG_W_CAST_QUAL = -Wcast-qual
FLAG_W_EMPTY_BODY = -Wempty-body
FLAG_W_EXTRA = -Wextra
FLAG_W_FORMAT = -Wformat
FLAG_W_FORMAT_SECURITY = -Wformat-security
FLAG_W_FORMAT_SIGNEDNESS = 
FLAG_W_IGNORED_QUALIFIERS = -Wignored-qualifiers
FLAG_W_MISSING_PARAMETER_TYPE = -Wmissing-parameter-type
FLAG_W_NO_INFINITE_RECURSION = 
FLAG_W_NO_MEMSET_TRANSPOSED_ARGS = 
FLAG_W_NO_MISMATCHED_NEW_DELETE = 
FLAG_W_NO_NONNULL = -Wno-nonnull
FLAG_W_NO_OVERFLOW = -Wno-overflow
FLAG_W_NO_POINTER_SIGN = -Wno-pointer-sign
FLAG_W_NO_STATIC_LOCAL_IN_INLINE = 
FLAG_W_NO_UNINITIALIZED = -Wno-uninitialized
FLAG_W_NO_UNUSED_FUNCTION = -Wno-unused-function
FLAG_W_OLD_STYLE_DECLARATION = -Wold-style-declaration
FLAG_W_WRITE_STRINGS = -Wwrite-strings
GDB = /usr/bin/gdb
GLIBC_VERSION = bionic
GREP = /bin/grep
HWCAP_HAS_ALTIVEC = 
HWCAP_HAS_DFP = 
HWCAP_HAS_HTM = 
HWCAP_HAS_ISA_2_05 = 
HWCAP_HAS_ISA_2_06 = 
HWCAP_HAS_ISA_2_07 = 
HWCAP_HAS_VSX = 
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LDFLAGS = 
LDFLAGS_MPI = -fpic -shared
LIBOBJS =  ${LIBOBJDIR}memcmp$U.o
LIBS = 
LIB_UBSAN = 
LN_S = ln -s
LTLIBOBJS =  ${LIBOBJDIR}memcmp$U.lo
MAINT = #
MAKEINFO = ${SHELL} /home/jeremy/Data/AndroidSource/Android-M/external/valgrind/missing makeinfo
MKDIR_P = /bin/mkdir -p
MPI_CC = /usr/bin/mpicc
OBJEXT = o
PACKAGE = valgrind
PACKAGE_BUGREPORT = valgrind-users@lists.sourceforge.net
PACKAGE_NAME = Valgrind
PACKAGE_STRING = Valgrind 3.11.0
PACKAGE_TARNAME = valgrind
PACKAGE_URL = 
PACKAGE_VERSION = 3.11.0
PATH_SEPARATOR = :
PERL = /usr/bin/perl
PREFERRED_STACK_BOUNDARY_2 = 
RANLIB = ranlib
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/bash
STRIP = strip
VALT_LOAD_ADDRESS_PRI = 0x38000000
VALT_LOAD_ADDRESS_SEC = 0xUNSET
VERSION = 3.11.0
VGCONF_ARCH_PRI = arm
VGCONF_ARCH_SEC = 
VGCONF_OS = linux
VGCONF_PLATFORM_PRI_CAPS = ARM_LINUX
VGCONF_PLATFORM_SEC_CAPS = 
VGCONF_PLATVARIANT = android
VG_TMPDIR = /sdcard 
abs_builddir = /home/jeremy/Data/AndroidSource/Android-M/external/valgrind/memcheck
abs_srcdir = /home/jeremy/Data/AndroidSource/Android-M/external/valgrind/memcheck
abs_top_builddir = /home/jeremy/Data/AndroidSource/Android-M/external/valgrind
abs_top_srcdir = /home/jeremy/Data/AndroidSource/Android-M/external/valgrind
ac_ct_CC = 
ac_ct_CXX = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
build = x86_64-unknown-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = unknown
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = armv7-unknown-linux-gnu
host_alias = armv7-unknown-linux
host_cpu = armv7
host_os = linux-gnu
host_vendor = unknown
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/jeremy/Data/AndroidSource/Android-M/external/valgrind/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /data/local/tmp/Inst
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = armv7-unknown-linux
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..
SUBDIRS = . tests
inplacedir = $(top_builddir)/.in_place

#----------------------------------------------------------------------------
# Flags
#----------------------------------------------------------------------------

# Baseline flags for all compilations.  Aim here is to maximise
# performance and get whatever useful warnings we can out of gcc.
# -fno-builtin is important for defeating LLVM's idiom recognition
# that somehow causes VG_(memset) to get into infinite recursion.
AM_CFLAGS_BASE = -O2 -g -std=gnu99 -Wall -Wmissing-prototypes -Wshadow \
	-Wpointer-arith -Wstrict-prototypes -Wmissing-declarations \
	 -Wcast-qual -Wwrite-strings \
	-Wempty-body -Wformat  \
	-Wformat-security -Wignored-qualifiers \
	-Wmissing-parameter-type -Wold-style-declaration \
	-fno-stack-protector  \
	-fno-strict-aliasing -fno-builtin $(am__append_1)
AM_CFLAGS_PSO_BASE = -O -g -fno-omit-frame-pointer -fno-strict-aliasing \
		     -fpic -fno-builtin 


# These flags are used for building the preload shared objects (PSOs).
# The aim is to give reasonable performance but also to have good
# stack traces, since users often see stack traces extending 
# into (and through) the preloads.  Also, we must use any
# -mpreferred-stack-boundary flag to build the preload shared
# objects, since that risks misaligning the client's stack and
# results in segfaults like (eg) #324050.
#AM_CFLAGS_PSO_BASE = -dynamic \
#		     -O -g -fno-omit-frame-pointer -fno-strict-aliasing \
#		     -fpic -fPIC -fno-builtin 


# Flags for specific targets.
#
# Nb: the AM_CPPFLAGS_* values are suitable for building tools and auxprogs.
# For building the core, coregrind/Makefile.am files add some extra things.
AM_CPPFLAGS_ARM_LINUX = \
	-I$(top_srcdir) \
	-I$(top_srcdir)/include \
	-I$(top_srcdir)/VEX/pub \
	-I$(top_builddir)/VEX/pub \
	-DVGA_arm=1 \
	-DVGO_linux=1 \
	-DVGP_arm_linux=1 \
	-DVGPV_arm_linux_android=1

#AM_CPPFLAGS_ = \
#	-I$(top_srcdir) \
#	-I$(top_srcdir)/include \
#	-I$(top_srcdir)/VEX/pub \
#	-I$(top_builddir)/VEX/pub \
#	-DVGA_=1 \
#	-DVGO_linux=1 \
#	-DVGP__linux=1 \
#	-DVGPV__linux_android=1

AM_FLAG_M3264_X86_LINUX = 
AM_CFLAGS_X86_LINUX =   \
				$(AM_CFLAGS_BASE) -fomit-frame-pointer

AM_CFLAGS_PSO_X86_LINUX =  $(AM_CFLAGS_BASE) $(AM_CFLAGS_PSO_BASE)
AM_CCASFLAGS_X86_LINUX =  -g
AM_FLAG_M3264_AMD64_LINUX = 
AM_CFLAGS_AMD64_LINUX =  \
				$(AM_CFLAGS_BASE) -fomit-frame-pointer

AM_CFLAGS_PSO_AMD64_LINUX =  $(AM_CFLAGS_BASE) $(AM_CFLAGS_PSO_BASE)
AM_CCASFLAGS_AMD64_LINUX =  -g
AM_FLAG_M3264_PPC32_LINUX = 
AM_CFLAGS_PPC32_LINUX =  $(AM_CFLAGS_BASE)
AM_CFLAGS_PSO_PPC32_LINUX =  $(AM_CFLAGS_BASE) $(AM_CFLAGS_PSO_BASE)
AM_CCASFLAGS_PPC32_LINUX =  -g
AM_FLAG_M3264_PPC64BE_LINUX = 
AM_CFLAGS_PPC64BE_LINUX =  $(AM_CFLAGS_BASE)
AM_CFLAGS_PSO_PPC64BE_LINUX =  $(AM_CFLAGS_BASE) $(AM_CFLAGS_PSO_BASE)
AM_CCASFLAGS_PPC64BE_LINUX =  -g
AM_FLAG_M3264_PPC64LE_LINUX = 
AM_CFLAGS_PPC64LE_LINUX =  $(AM_CFLAGS_BASE)
AM_CFLAGS_PSO_PPC64LE_LINUX =  $(AM_CFLAGS_BASE) $(AM_CFLAGS_PSO_BASE)
AM_CCASFLAGS_PPC64LE_LINUX =  -g
AM_FLAG_M3264_ARM_LINUX = 
AM_CFLAGS_ARM_LINUX =  \
			 	$(AM_CFLAGS_BASE) -marm -mcpu=cortex-a8

AM_CFLAGS_PSO_ARM_LINUX =  $(AM_CFLAGS_BASE) \
				-marm -mcpu=cortex-a8 $(AM_CFLAGS_PSO_BASE)

AM_CCASFLAGS_ARM_LINUX =  \
				-marm -mcpu=cortex-a8 -g

AM_FLAG_M3264_ARM64_LINUX = 
AM_CFLAGS_ARM64_LINUX =  $(AM_CFLAGS_BASE)
AM_CFLAGS_PSO_ARM64_LINUX =  $(AM_CFLAGS_BASE) $(AM_CFLAGS_PSO_BASE)
AM_CCASFLAGS_ARM64_LINUX =  -g
AM_FLAG_M3264_X86_DARWIN = -arch i386
AM_CFLAGS_X86_DARWIN = $(WERROR) -arch i386 $(AM_CFLAGS_BASE) \
				-mmacosx-version-min=10.5 \
				-fno-stack-protector -fno-pic -fno-PIC

AM_CFLAGS_PSO_X86_DARWIN = $(AM_CFLAGS_X86_DARWIN) $(AM_CFLAGS_PSO_BASE)
AM_CCASFLAGS_X86_DARWIN = -arch i386 -g
AM_FLAG_M3264_AMD64_DARWIN = -arch x86_64
AM_CFLAGS_AMD64_DARWIN = $(WERROR) -arch x86_64 $(AM_CFLAGS_BASE) \
			    -mmacosx-version-min=10.5 -fno-stack-protector

AM_CFLAGS_PSO_AMD64_DARWIN = $(AM_CFLAGS_AMD64_DARWIN) $(AM_CFLAGS_PSO_BASE)
AM_CCASFLAGS_AMD64_DARWIN = -arch x86_64 -g
AM_FLAG_M3264_S390X_LINUX = 
AM_CFLAGS_S390X_LINUX =  $(AM_CFLAGS_BASE) -fomit-frame-pointer
AM_CFLAGS_PSO_S390X_LINUX =  $(AM_CFLAGS_BASE) $(AM_CFLAGS_PSO_BASE)
AM_CCASFLAGS_S390X_LINUX =  -g -mzarch -march=z900
AM_FLAG_M3264_MIPS32_LINUX = 
AM_CFLAGS_MIPS32_LINUX =  $(AM_CFLAGS_BASE) 
AM_CFLAGS_PSO_MIPS32_LINUX =  $(AM_CFLAGS_BASE)  \
				$(AM_CFLAGS_PSO_BASE)

AM_CCASFLAGS_MIPS32_LINUX =  -g 
AM_FLAG_M3264_MIPS64_LINUX = 
AM_CFLAGS_MIPS64_LINUX =  $(AM_CFLAGS_BASE) 
AM_CFLAGS_PSO_MIPS64_LINUX =  $(AM_CFLAGS_BASE)  \
				$(AM_CFLAGS_PSO_BASE)

AM_CCASFLAGS_MIPS64_LINUX =  -g 
AM_CFLAGS_TILEGX_LINUX =  $(AM_CFLAGS_BASE)
AM_CFLAGS_PSO_TILEGX_LINUX =  $(AM_CFLAGS_BASE) $(AM_CFLAGS_PSO_BASE)
AM_FLAG_M3264_X86_SOLARIS = 
AM_CFLAGS_X86_SOLARIS =   \
			 	$(AM_CFLAGS_BASE) -fomit-frame-pointer

AM_CFLAGS_PSO_X86_SOLARIS =  $(AM_CFLAGS_BASE) $(AM_CFLAGS_PSO_BASE)
AM_CCASFLAGS_X86_SOLARIS =  -g -D_ASM
AM_FLAG_M3264_AMD64_SOLARIS = 
AM_CFLAGS_AMD64_SOLARIS =  \
				$(AM_CFLAGS_BASE) -fomit-frame-pointer

AM_CFLAGS_PSO_AMD64_SOLARIS =  $(AM_CFLAGS_BASE) $(AM_CFLAGS_PSO_BASE)
AM_CCASFLAGS_AMD64_SOLARIS =  -g -D_ASM

# Flags for the primary target.  These must be used to build the
# regtests and performance tests.  In fact, these must be used to
# build anything which is built only once on a dual-arch build.
#
AM_FLAG_M3264_PRI = $(AM_FLAG_M3264_ARM_LINUX)
AM_CPPFLAGS_PRI = $(AM_CPPFLAGS_ARM_LINUX)
AM_CFLAGS_PRI = $(AM_CFLAGS_ARM_LINUX)
AM_CCASFLAGS_PRI = $(AM_CCASFLAGS_ARM_LINUX)
AM_FLAG_M3264_SEC = 
#AM_FLAG_M3264_SEC = $(AM_FLAG_M3264_)

# Baseline link flags for making vgpreload shared objects.
#
PRELOAD_LDFLAGS_COMMON_LINUX = -nodefaultlibs -shared \
	-Wl,-z,interpose,-z,initfirst $(am__append_3)
PRELOAD_LDFLAGS_COMMON_DARWIN = -dynamic -dynamiclib -all_load
PRELOAD_LDFLAGS_COMMON_SOLARIS = -nodefaultlibs -shared \
	-Wl,-z,interpose,-z,initfirst $(am__append_2)
PRELOAD_LDFLAGS_X86_LINUX = $(PRELOAD_LDFLAGS_COMMON_LINUX) 
PRELOAD_LDFLAGS_AMD64_LINUX = $(PRELOAD_LDFLAGS_COMMON_LINUX) 
PRELOAD_LDFLAGS_PPC32_LINUX = $(PRELOAD_LDFLAGS_COMMON_LINUX) 
PRELOAD_LDFLAGS_PPC64BE_LINUX = $(PRELOAD_LDFLAGS_COMMON_LINUX) 
PRELOAD_LDFLAGS_PPC64LE_LINUX = $(PRELOAD_LDFLAGS_COMMON_LINUX) 
PRELOAD_LDFLAGS_ARM_LINUX = $(PRELOAD_LDFLAGS_COMMON_LINUX) 
PRELOAD_LDFLAGS_ARM64_LINUX = $(PRELOAD_LDFLAGS_COMMON_LINUX) 
PRELOAD_LDFLAGS_X86_DARWIN = $(PRELOAD_LDFLAGS_COMMON_DARWIN) -arch i386
PRELOAD_LDFLAGS_AMD64_DARWIN = $(PRELOAD_LDFLAGS_COMMON_DARWIN) -arch x86_64
PRELOAD_LDFLAGS_S390X_LINUX = $(PRELOAD_LDFLAGS_COMMON_LINUX) 
PRELOAD_LDFLAGS_MIPS32_LINUX = $(PRELOAD_LDFLAGS_COMMON_LINUX) 
PRELOAD_LDFLAGS_MIPS64_LINUX = $(PRELOAD_LDFLAGS_COMMON_LINUX) 
PRELOAD_LDFLAGS_TILEGX_LINUX = $(PRELOAD_LDFLAGS_COMMON_LINUX) 
PRELOAD_LDFLAGS_X86_SOLARIS = $(PRELOAD_LDFLAGS_COMMON_SOLARIS) 
PRELOAD_LDFLAGS_AMD64_SOLARIS = $(PRELOAD_LDFLAGS_COMMON_SOLARIS) 

#----------------------------------------------------------------------------
# <tool>-<platform> stuff
#----------------------------------------------------------------------------
TOOL_DEPENDENCIES_ARM_LINUX = \
	$(top_builddir)/coregrind/libcoregrind-arm-linux.a \
	$(top_builddir)/VEX/libvex-arm-linux.a

#TOOL_DEPENDENCIES_ = \
#	$(top_builddir)/coregrind/libcoregrind--linux.a \
#	$(top_builddir)/VEX/libvex--linux.a

TOOL_LDADD_COMMON = -lgcc
TOOL_LDADD_ARM_LINUX = \
	$(TOOL_DEPENDENCIES_ARM_LINUX) $(TOOL_LDADD_COMMON)

#TOOL_LDADD_ = \
#	$(TOOL_DEPENDENCIES_) $(TOOL_LDADD_COMMON)


# -Wl,--build-id=none is needed when linking tools with a linker that only
# knows -Ttext and not -Ttext-segment. Without this flag newer ld versions
# (2.20 and later) create a .note.gnu.build-id at the default text segment
# address, which of course means the resulting executable
# is unusable. So we have to tell ld not to generate that, with
# --build-id=none unless the linker supports -Ttext-segment.
TOOL_LDFLAGS_COMMON_LINUX = \
	-static -nodefaultlibs -nostartfiles -u _start 

TOOL_LDFLAGS_COMMON_DARWIN = \
	-nodefaultlibs -nostartfiles -Wl,-u,__start -Wl,-e,__start

TOOL_LDFLAGS_COMMON_SOLARIS = \
	-static -nodefaultlibs -nostartfiles -u _start

TOOL_LDFLAGS_X86_LINUX = \
	$(TOOL_LDFLAGS_COMMON_LINUX) 

TOOL_LDFLAGS_AMD64_LINUX = \
	$(TOOL_LDFLAGS_COMMON_LINUX) 

TOOL_LDFLAGS_PPC32_LINUX = \
	$(TOOL_LDFLAGS_COMMON_LINUX) 

TOOL_LDFLAGS_PPC64BE_LINUX = \
	$(TOOL_LDFLAGS_COMMON_LINUX) 

TOOL_LDFLAGS_PPC64LE_LINUX = \
	$(TOOL_LDFLAGS_COMMON_LINUX) 

TOOL_LDFLAGS_ARM_LINUX = $(TOOL_LDFLAGS_COMMON_LINUX)  \
	$(am__append_4)
TOOL_LDFLAGS_ARM64_LINUX = \
	$(TOOL_LDFLAGS_COMMON_LINUX) 

TOOL_LDFLAGS_S390X_LINUX = \
	$(TOOL_LDFLAGS_COMMON_LINUX) 

TOOL_LDFLAGS_X86_DARWIN = \
	$(TOOL_LDFLAGS_COMMON_DARWIN) -arch i386

TOOL_LDFLAGS_AMD64_DARWIN = \
	$(TOOL_LDFLAGS_COMMON_DARWIN) -arch x86_64


# MIPS Linux default start symbol is __start, not _start like on x86 or amd
TOOL_LDFLAGS_MIPS32_LINUX = \
	-static -nodefaultlibs -nostartfiles -u __start  \
	

TOOL_LDFLAGS_MIPS64_LINUX = \
	-static -nodefaultlibs -nostartfiles -u __start  \
	

TOOL_LDFLAGS_TILEGX_LINUX = \
	$(TOOL_LDFLAGS_COMMON_LINUX) 

TOOL_LDFLAGS_X86_SOLARIS = \
	$(TOOL_LDFLAGS_COMMON_SOLARIS) 

TOOL_LDFLAGS_AMD64_SOLARIS = \
	$(TOOL_LDFLAGS_COMMON_SOLARIS) 


# NB for 64-bit darwin.  We may want to set -Wl,-pagezero_size to
# something smaller than the default of 4G, so as to facilitate
# loading clients who are also linked thusly (currently m_ume.c
# will fail to load them).  Although such setting is probably
# better done in link_tool_exe.c.
#
#	-Wl,-pagezero_size,0x100000000

#----------------------------------------------------------------------------
# vgpreload_<tool>-<platform>.a stuff
#----------------------------------------------------------------------------
LIBREPLACEMALLOC_X86_LINUX = \
	$(top_builddir)/coregrind/libreplacemalloc_toolpreload-x86-linux.a

LIBREPLACEMALLOC_AMD64_LINUX = \
	$(top_builddir)/coregrind/libreplacemalloc_toolpreload-amd64-linux.a

LIBREPLACEMALLOC_PPC32_LINUX = \
	$(top_builddir)/coregrind/libreplacemalloc_toolpreload-ppc32-linux.a

LIBREPLACEMALLOC_PPC64BE_LINUX = \
	$(top_builddir)/coregrind/libreplacemalloc_toolpreload-ppc64be-linux.a

LIBREPLACEMALLOC_PPC64LE_LINUX = \
	$(top_builddir)/coregrind/libreplacemalloc_toolpreload-ppc64le-linux.a

LIBREPLACEMALLOC_ARM_LINUX = \
	$(top_builddir)/coregrind/libreplacemalloc_toolpreload-arm-linux.a

LIBREPLACEMALLOC_ARM64_LINUX = \
	$(top_builddir)/coregrind/libreplacemalloc_toolpreload-arm64-linux.a

LIBREPLACEMALLOC_X86_DARWIN = \
	$(top_builddir)/coregrind/libreplacemalloc_toolpreload-x86-darwin.a

LIBREPLACEMALLOC_AMD64_DARWIN = \
	$(top_builddir)/coregrind/libreplacemalloc_toolpreload-amd64-darwin.a

LIBREPLACEMALLOC_S390X_LINUX = \
	$(top_builddir)/coregrind/libreplacemalloc_toolpreload-s390x-linux.a

LIBREPLACEMALLOC_MIPS32_LINUX = \
	$(top_builddir)/coregrind/libreplacemalloc_toolpreload-mips32-linux.a

LIBREPLACEMALLOC_MIPS64_LINUX = \
	$(top_builddir)/coregrind/libreplacemalloc_toolpreload-mips64-linux.a

LIBREPLACEMALLOC_TILEGX_LINUX = \
	$(top_builddir)/coregrind/libreplacemalloc_toolpreload-tilegx-linux.a

LIBREPLACEMALLOC_X86_SOLARIS = \
	$(top_builddir)/coregrind/libreplacemalloc_toolpreload-x86-solaris.a

LIBREPLACEMALLOC_AMD64_SOLARIS = \
	$(top_builddir)/coregrind/libreplacemalloc_toolpreload-amd64-solaris.a

LIBREPLACEMALLOC_LDFLAGS_X86_LINUX = \
	-Wl,--whole-archive \
	$(LIBREPLACEMALLOC_X86_LINUX) \
	-Wl,--no-whole-archive

LIBREPLACEMALLOC_LDFLAGS_AMD64_LINUX = \
	-Wl,--whole-archive \
	$(LIBREPLACEMALLOC_AMD64_LINUX) \
	-Wl,--no-whole-archive

LIBREPLACEMALLOC_LDFLAGS_PPC32_LINUX = \
	-Wl,--whole-archive \
	$(LIBREPLACEMALLOC_PPC32_LINUX) \
	-Wl,--no-whole-archive

LIBREPLACEMALLOC_LDFLAGS_PPC64BE_LINUX = \
	-Wl,--whole-archive \
	$(LIBREPLACEMALLOC_PPC64BE_LINUX) \
	-Wl,--no-whole-archive

LIBREPLACEMALLOC_LDFLAGS_PPC64LE_LINUX = \
	-Wl,--whole-archive \
	$(LIBREPLACEMALLOC_PPC64LE_LINUX) \
	-Wl,--no-whole-archive

LIBREPLACEMALLOC_LDFLAGS_ARM_LINUX = \
	-Wl,--whole-archive \
	$(LIBREPLACEMALLOC_ARM_LINUX) \
	-Wl,--no-whole-archive

LIBREPLACEMALLOC_LDFLAGS_ARM64_LINUX = \
	-Wl,--whole-archive \
	$(LIBREPLACEMALLOC_ARM64_LINUX) \
	-Wl,--no-whole-archive

LIBREPLACEMALLOC_LDFLAGS_X86_DARWIN = \
	$(LIBREPLACEMALLOC_X86_DARWIN)

LIBREPLACEMALLOC_LDFLAGS_AMD64_DARWIN = \
	$(LIBREPLACEMALLOC_AMD64_DARWIN)

LIBREPLACEMALLOC_LDFLAGS_S390X_LINUX = \
	-Wl,--whole-archive \
	$(LIBREPLACEMALLOC_S390X_LINUX) \
	-Wl,--no-whole-archive

LIBREPLACEMALLOC_LDFLAGS_MIPS32_LINUX = \
	-Wl,--whole-archive \
	$(LIBREPLACEMALLOC_MIPS32_LINUX) \
	-Wl,--no-whole-archive

LIBREPLACEMALLOC_LDFLAGS_MIPS64_LINUX = \
	-Wl,--whole-archive \
	$(LIBREPLACEMALLOC_MIPS64_LINUX) \
	-Wl,--no-whole-archive

LIBREPLACEMALLOC_LDFLAGS_TILEGX_LINUX = \
	-Wl,--whole-archive \
	$(LIBREPLACEMALLOC_TILEGX_LINUX) \
	-Wl,--no-whole-archive

LIBREPLACEMALLOC_LDFLAGS_X86_SOLARIS = \
	-Wl,--whole-archive \
	$(LIBREPLACEMALLOC_X86_SOLARIS) \
	-Wl,--no-whole-archive

LIBREPLACEMALLOC_LDFLAGS_AMD64_SOLARIS = \
	-Wl,--whole-archive \
	$(LIBREPLACEMALLOC_AMD64_SOLARIS) \
	-Wl,--no-whole-archive

EXTRA_DIST = docs/mc-manual.xml docs/mc-tech-docs.xml

#----------------------------------------------------------------------------
# Headers
#----------------------------------------------------------------------------
pkginclude_HEADERS = \
	memcheck.h

noinst_HEADERS = \
	mc_include.h

MEMCHECK_SOURCES_COMMON = \
	mc_leakcheck.c \
	mc_malloc_wrappers.c \
	mc_main.c \
	mc_translate.c \
	mc_machine.c \
	mc_errors.c

memcheck_arm_linux_SOURCES = \
	$(MEMCHECK_SOURCES_COMMON)

memcheck_arm_linux_CPPFLAGS = \
	$(AM_CPPFLAGS_ARM_LINUX)

memcheck_arm_linux_CFLAGS = \
	$(AM_CFLAGS_ARM_LINUX) -O2

memcheck_arm_linux_DEPENDENCIES = \
	$(TOOL_DEPENDENCIES_ARM_LINUX)

memcheck_arm_linux_LDADD = \
	$(TOOL_LDADD_ARM_LINUX)

memcheck_arm_linux_LDFLAGS = \
	$(TOOL_LDFLAGS_ARM_LINUX)

memcheck_arm_linux_LINK = \
	$(top_builddir)/coregrind/link_tool_exe_linux \
	0x38000000 \
	$(LINK) \
	$(memcheck_arm_linux_CFLAGS) \
	$(memcheck_arm_linux_LDFLAGS)

#memcheck__linux_SOURCES = \
#	$(MEMCHECK_SOURCES_COMMON)

#memcheck__linux_CPPFLAGS = \
#	$(AM_CPPFLAGS_)

#memcheck__linux_CFLAGS = \
#	$(AM_CFLAGS_) -O2

#memcheck__linux_DEPENDENCIES = \
#	$(TOOL_DEPENDENCIES_)

#memcheck__linux_LDADD = \
#	$(TOOL_LDADD_)

#memcheck__linux_LDFLAGS = \
#	$(TOOL_LDFLAGS_)

#memcheck__linux_LINK = \
#	$(top_builddir)/coregrind/link_tool_exe_linux \
#	0xUNSET \
#	$(LINK) \
#	$(memcheck__linux_CFLAGS) \
#	$(memcheck__linux_LDFLAGS)

#noinst_DSYMS = $(noinst_PROGRAMS)
VGPRELOAD_MEMCHECK_SOURCES_COMMON = mc_replace_strmem.c
vgpreload_memcheck_arm_linux_so_SOURCES = \
	$(VGPRELOAD_MEMCHECK_SOURCES_COMMON)

vgpreload_memcheck_arm_linux_so_CPPFLAGS = \
	$(AM_CPPFLAGS_ARM_LINUX)

vgpreload_memcheck_arm_linux_so_CFLAGS = \
	$(AM_CFLAGS_PSO_ARM_LINUX) -O2

vgpreload_memcheck_arm_linux_so_DEPENDENCIES = \
	$(LIBREPLACEMALLOC_ARM_LINUX)

vgpreload_memcheck_arm_linux_so_LDFLAGS = \
	$(PRELOAD_LDFLAGS_ARM_LINUX) \
	$(LIBREPLACEMALLOC_LDFLAGS_ARM_LINUX)

#vgpreload_memcheck__linux_so_SOURCES = \
#	$(VGPRELOAD_MEMCHECK_SOURCES_COMMON)

#vgpreload_memcheck__linux_so_CPPFLAGS = \
#	$(AM_CPPFLAGS_)

#vgpreload_memcheck__linux_so_CFLAGS = \
#	$(AM_CFLAGS_PSO_) -O2

#vgpreload_memcheck__linux_so_DEPENDENCIES = \
#	$(LIBREPLACEMALLOC_)

#vgpreload_memcheck__linux_so_LDFLAGS = \
#	$(PRELOAD_LDFLAGS_) \
#	$(LIBREPLACEMALLOC_LDFLAGS_)

all: all-recursive

.SUFFIXES:
.SUFFIXES: .c .o .obj
$(srcdir)/Makefile.in: # $(srcdir)/Makefile.am $(top_srcdir)/Makefile.tool.am $(top_srcdir)/Makefile.all.am $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign memcheck/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign memcheck/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;
$(top_srcdir)/Makefile.tool.am $(top_srcdir)/Makefile.all.am:

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: # $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): # $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-noinstPROGRAMS:
	-test -z "$(noinst_PROGRAMS)" || rm -f $(noinst_PROGRAMS)

memcheck-arm-linux$(EXEEXT): $(memcheck_arm_linux_OBJECTS) $(memcheck_arm_linux_DEPENDENCIES) $(EXTRA_memcheck_arm_linux_DEPENDENCIES) 
	@rm -f memcheck-arm-linux$(EXEEXT)
	$(AM_V_GEN)$(memcheck_arm_linux_LINK) $(memcheck_arm_linux_OBJECTS) $(memcheck_arm_linux_LDADD) $(LIBS)

memcheck--linux$(EXEEXT): $(memcheck__linux_OBJECTS) $(memcheck__linux_DEPENDENCIES) $(EXTRA_memcheck__linux_DEPENDENCIES) 
	@rm -f memcheck--linux$(EXEEXT)
	$(AM_V_GEN)$(memcheck__linux_LINK) $(memcheck__linux_OBJECTS) $(memcheck__linux_LDADD) $(LIBS)

vgpreload_memcheck-arm-linux.so$(EXEEXT): $(vgpreload_memcheck_arm_linux_so_OBJECTS) $(vgpreload_memcheck_arm_linux_so_DEPENDENCIES) $(EXTRA_vgpreload_memcheck_arm_linux_so_DEPENDENCIES) 
	@rm -f vgpreload_memcheck-arm-linux.so$(EXEEXT)
	$(AM_V_CCLD)$(vgpreload_memcheck_arm_linux_so_LINK) $(vgpreload_memcheck_arm_linux_so_OBJECTS) $(vgpreload_memcheck_arm_linux_so_LDADD) $(LIBS)

vgpreload_memcheck--linux.so$(EXEEXT): $(vgpreload_memcheck__linux_so_OBJECTS) $(vgpreload_memcheck__linux_so_DEPENDENCIES) $(EXTRA_vgpreload_memcheck__linux_so_DEPENDENCIES) 
	@rm -f vgpreload_memcheck--linux.so$(EXEEXT)
	$(AM_V_CCLD)$(vgpreload_memcheck__linux_so_LINK) $(vgpreload_memcheck__linux_so_OBJECTS) $(vgpreload_memcheck__linux_so_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/memcheck_arm_linux-mc_errors.Po
include ./$(DEPDIR)/memcheck_arm_linux-mc_leakcheck.Po
include ./$(DEPDIR)/memcheck_arm_linux-mc_machine.Po
include ./$(DEPDIR)/memcheck_arm_linux-mc_main.Po
include ./$(DEPDIR)/memcheck_arm_linux-mc_malloc_wrappers.Po
include ./$(DEPDIR)/memcheck_arm_linux-mc_translate.Po
include ./$(DEPDIR)/memcheck__linux-mc_errors.Po
include ./$(DEPDIR)/memcheck__linux-mc_leakcheck.Po
include ./$(DEPDIR)/memcheck__linux-mc_machine.Po
include ./$(DEPDIR)/memcheck__linux-mc_main.Po
include ./$(DEPDIR)/memcheck__linux-mc_malloc_wrappers.Po
include ./$(DEPDIR)/memcheck__linux-mc_translate.Po
include ./$(DEPDIR)/vgpreload_memcheck_arm_linux_so-mc_replace_strmem.Po
include ./$(DEPDIR)/vgpreload_memcheck__linux_so-mc_replace_strmem.Po

.c.o:
	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ $<

.c.obj:
	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

memcheck_arm_linux-mc_leakcheck.o: mc_leakcheck.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(memcheck_arm_linux_CPPFLAGS) $(CPPFLAGS) $(memcheck_arm_linux_CFLAGS) $(CFLAGS) -MT memcheck_arm_linux-mc_leakcheck.o -MD -MP -MF $(DEPDIR)/memcheck_arm_linux-mc_leakcheck.Tpo -c -o memcheck_arm_linux-mc_leakcheck.o `test -f 'mc_leakcheck.c' || echo '$(srcdir)/'`mc_leakcheck.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/memcheck_arm_linux-mc_leakcheck.Tpo $(DEPDIR)/memcheck_arm_linux-mc_leakcheck.Po
#	$(AM_V_CC)source='mc_leakcheck.c' object='memcheck_arm_linux-mc_leakcheck.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(memcheck_arm_linux_CPPFLAGS) $(CPPFLAGS) $(memcheck_arm_linux_CFLAGS) $(CFLAGS) -c -o memcheck_arm_linux-mc_leakcheck.o `test -f 'mc_leakcheck.c' || echo '$(srcdir)/'`mc_leakcheck.c

memcheck_arm_linux-mc_leakcheck.obj: mc_leakcheck.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(memcheck_arm_linux_CPPFLAGS) $(CPPFLAGS) $(memcheck_arm_linux_CFLAGS) $(CFLAGS) -MT memcheck_arm_linux-mc_leakcheck.obj -MD -MP -MF $(DEPDIR)/memcheck_arm_linux-mc_leakcheck.Tpo -c -o memcheck_arm_linux-mc_leakcheck.obj `if test -f 'mc_leakcheck.c'; then $(CYGPATH_W) 'mc_leakcheck.c'; else $(CYGPATH_W) '$(srcdir)/mc_leakcheck.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/memcheck_arm_linux-mc_leakcheck.Tpo $(DEPDIR)/memcheck_arm_linux-mc_leakcheck.Po
#	$(AM_V_CC)source='mc_leakcheck.c' object='memcheck_arm_linux-mc_leakcheck.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(memcheck_arm_linux_CPPFLAGS) $(CPPFLAGS) $(memcheck_arm_linux_CFLAGS) $(CFLAGS) -c -o memcheck_arm_linux-mc_leakcheck.obj `if test -f 'mc_leakcheck.c'; then $(CYGPATH_W) 'mc_leakcheck.c'; else $(CYGPATH_W) '$(srcdir)/mc_leakcheck.c'; fi`

memcheck_arm_linux-mc_malloc_wrappers.o: mc_malloc_wrappers.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(memcheck_arm_linux_CPPFLAGS) $(CPPFLAGS) $(memcheck_arm_linux_CFLAGS) $(CFLAGS) -MT memcheck_arm_linux-mc_malloc_wrappers.o -MD -MP -MF $(DEPDIR)/memcheck_arm_linux-mc_malloc_wrappers.Tpo -c -o memcheck_arm_linux-mc_malloc_wrappers.o `test -f 'mc_malloc_wrappers.c' || echo '$(srcdir)/'`mc_malloc_wrappers.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/memcheck_arm_linux-mc_malloc_wrappers.Tpo $(DEPDIR)/memcheck_arm_linux-mc_malloc_wrappers.Po
#	$(AM_V_CC)source='mc_malloc_wrappers.c' object='memcheck_arm_linux-mc_malloc_wrappers.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(memcheck_arm_linux_CPPFLAGS) $(CPPFLAGS) $(memcheck_arm_linux_CFLAGS) $(CFLAGS) -c -o memcheck_arm_linux-mc_malloc_wrappers.o `test -f 'mc_malloc_wrappers.c' || echo '$(srcdir)/'`mc_malloc_wrappers.c

memcheck_arm_linux-mc_malloc_wrappers.obj: mc_malloc_wrappers.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(memcheck_arm_linux_CPPFLAGS) $(CPPFLAGS) $(memcheck_arm_linux_CFLAGS) $(CFLAGS) -MT memcheck_arm_linux-mc_malloc_wrappers.obj -MD -MP -MF $(DEPDIR)/memcheck_arm_linux-mc_malloc_wrappers.Tpo -c -o memcheck_arm_linux-mc_malloc_wrappers.obj `if test -f 'mc_malloc_wrappers.c'; then $(CYGPATH_W) 'mc_malloc_wrappers.c'; else $(CYGPATH_W) '$(srcdir)/mc_malloc_wrappers.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/memcheck_arm_linux-mc_malloc_wrappers.Tpo $(DEPDIR)/memcheck_arm_linux-mc_malloc_wrappers.Po
#	$(AM_V_CC)source='mc_malloc_wrappers.c' object='memcheck_arm_linux-mc_malloc_wrappers.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(memcheck_arm_linux_CPPFLAGS) $(CPPFLAGS) $(memcheck_arm_linux_CFLAGS) $(CFLAGS) -c -o memcheck_arm_linux-mc_malloc_wrappers.obj `if test -f 'mc_malloc_wrappers.c'; then $(CYGPATH_W) 'mc_malloc_wrappers.c'; else $(CYGPATH_W) '$(srcdir)/mc_malloc_wrappers.c'; fi`

memcheck_arm_linux-mc_main.o: mc_main.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(memcheck_arm_linux_CPPFLAGS) $(CPPFLAGS) $(memcheck_arm_linux_CFLAGS) $(CFLAGS) -MT memcheck_arm_linux-mc_main.o -MD -MP -MF $(DEPDIR)/memcheck_arm_linux-mc_main.Tpo -c -o memcheck_arm_linux-mc_main.o `test -f 'mc_main.c' || echo '$(srcdir)/'`mc_main.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/memcheck_arm_linux-mc_main.Tpo $(DEPDIR)/memcheck_arm_linux-mc_main.Po
#	$(AM_V_CC)source='mc_main.c' object='memcheck_arm_linux-mc_main.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(memcheck_arm_linux_CPPFLAGS) $(CPPFLAGS) $(memcheck_arm_linux_CFLAGS) $(CFLAGS) -c -o memcheck_arm_linux-mc_main.o `test -f 'mc_main.c' || echo '$(srcdir)/'`mc_main.c

memcheck_arm_linux-mc_main.obj: mc_main.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(memcheck_arm_linux_CPPFLAGS) $(CPPFLAGS) $(memcheck_arm_linux_CFLAGS) $(CFLAGS) -MT memcheck_arm_linux-mc_main.obj -MD -MP -MF $(DEPDIR)/memcheck_arm_linux-mc_main.Tpo -c -o memcheck_arm_linux-mc_main.obj `if test -f 'mc_main.c'; then $(CYGPATH_W) 'mc_main.c'; else $(CYGPATH_W) '$(srcdir)/mc_main.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/memcheck_arm_linux-mc_main.Tpo $(DEPDIR)/memcheck_arm_linux-mc_main.Po
#	$(AM_V_CC)source='mc_main.c' object='memcheck_arm_linux-mc_main.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(memcheck_arm_linux_CPPFLAGS) $(CPPFLAGS) $(memcheck_arm_linux_CFLAGS) $(CFLAGS) -c -o memcheck_arm_linux-mc_main.obj `if test -f 'mc_main.c'; then $(CYGPATH_W) 'mc_main.c'; else $(CYGPATH_W) '$(srcdir)/mc_main.c'; fi`

memcheck_arm_linux-mc_translate.o: mc_translate.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(memcheck_arm_linux_CPPFLAGS) $(CPPFLAGS) $(memcheck_arm_linux_CFLAGS) $(CFLAGS) -MT memcheck_arm_linux-mc_translate.o -MD -MP -MF $(DEPDIR)/memcheck_arm_linux-mc_translate.Tpo -c -o memcheck_arm_linux-mc_translate.o `test -f 'mc_translate.c' || echo '$(srcdir)/'`mc_translate.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/memcheck_arm_linux-mc_translate.Tpo $(DEPDIR)/memcheck_arm_linux-mc_translate.Po
#	$(AM_V_CC)source='mc_translate.c' object='memcheck_arm_linux-mc_translate.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(memcheck_arm_linux_CPPFLAGS) $(CPPFLAGS) $(memcheck_arm_linux_CFLAGS) $(CFLAGS) -c -o memcheck_arm_linux-mc_translate.o `test -f 'mc_translate.c' || echo '$(srcdir)/'`mc_translate.c

memcheck_arm_linux-mc_translate.obj: mc_translate.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(memcheck_arm_linux_CPPFLAGS) $(CPPFLAGS) $(memcheck_arm_linux_CFLAGS) $(CFLAGS) -MT memcheck_arm_linux-mc_translate.obj -MD -MP -MF $(DEPDIR)/memcheck_arm_linux-mc_translate.Tpo -c -o memcheck_arm_linux-mc_translate.obj `if test -f 'mc_translate.c'; then $(CYGPATH_W) 'mc_translate.c'; else $(CYGPATH_W) '$(srcdir)/mc_translate.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/memcheck_arm_linux-mc_translate.Tpo $(DEPDIR)/memcheck_arm_linux-mc_translate.Po
#	$(AM_V_CC)source='mc_translate.c' object='memcheck_arm_linux-mc_translate.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(memcheck_arm_linux_CPPFLAGS) $(CPPFLAGS) $(memcheck_arm_linux_CFLAGS) $(CFLAGS) -c -o memcheck_arm_linux-mc_translate.obj `if test -f 'mc_translate.c'; then $(CYGPATH_W) 'mc_translate.c'; else $(CYGPATH_W) '$(srcdir)/mc_translate.c'; fi`

memcheck_arm_linux-mc_machine.o: mc_machine.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(memcheck_arm_linux_CPPFLAGS) $(CPPFLAGS) $(memcheck_arm_linux_CFLAGS) $(CFLAGS) -MT memcheck_arm_linux-mc_machine.o -MD -MP -MF $(DEPDIR)/memcheck_arm_linux-mc_machine.Tpo -c -o memcheck_arm_linux-mc_machine.o `test -f 'mc_machine.c' || echo '$(srcdir)/'`mc_machine.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/memcheck_arm_linux-mc_machine.Tpo $(DEPDIR)/memcheck_arm_linux-mc_machine.Po
#	$(AM_V_CC)source='mc_machine.c' object='memcheck_arm_linux-mc_machine.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(memcheck_arm_linux_CPPFLAGS) $(CPPFLAGS) $(memcheck_arm_linux_CFLAGS) $(CFLAGS) -c -o memcheck_arm_linux-mc_machine.o `test -f 'mc_machine.c' || echo '$(srcdir)/'`mc_machine.c

memcheck_arm_linux-mc_machine.obj: mc_machine.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(memcheck_arm_linux_CPPFLAGS) $(CPPFLAGS) $(memcheck_arm_linux_CFLAGS) $(CFLAGS) -MT memcheck_arm_linux-mc_machine.obj -MD -MP -MF $(DEPDIR)/memcheck_arm_linux-mc_machine.Tpo -c -o memcheck_arm_linux-mc_machine.obj `if test -f 'mc_machine.c'; then $(CYGPATH_W) 'mc_machine.c'; else $(CYGPATH_W) '$(srcdir)/mc_machine.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/memcheck_arm_linux-mc_machine.Tpo $(DEPDIR)/memcheck_arm_linux-mc_machine.Po
#	$(AM_V_CC)source='mc_machine.c' object='memcheck_arm_linux-mc_machine.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(memcheck_arm_linux_CPPFLAGS) $(CPPFLAGS) $(memcheck_arm_linux_CFLAGS) $(CFLAGS) -c -o memcheck_arm_linux-mc_machine.obj `if test -f 'mc_machine.c'; then $(CYGPATH_W) 'mc_machine.c'; else $(CYGPATH_W) '$(srcdir)/mc_machine.c'; fi`

memcheck_arm_linux-mc_errors.o: mc_errors.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(memcheck_arm_linux_CPPFLAGS) $(CPPFLAGS) $(memcheck_arm_linux_CFLAGS) $(CFLAGS) -MT memcheck_arm_linux-mc_errors.o -MD -MP -MF $(DEPDIR)/memcheck_arm_linux-mc_errors.Tpo -c -o memcheck_arm_linux-mc_errors.o `test -f 'mc_errors.c' || echo '$(srcdir)/'`mc_errors.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/memcheck_arm_linux-mc_errors.Tpo $(DEPDIR)/memcheck_arm_linux-mc_errors.Po
#	$(AM_V_CC)source='mc_errors.c' object='memcheck_arm_linux-mc_errors.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(memcheck_arm_linux_CPPFLAGS) $(CPPFLAGS) $(memcheck_arm_linux_CFLAGS) $(CFLAGS) -c -o memcheck_arm_linux-mc_errors.o `test -f 'mc_errors.c' || echo '$(srcdir)/'`mc_errors.c

memcheck_arm_linux-mc_errors.obj: mc_errors.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(memcheck_arm_linux_CPPFLAGS) $(CPPFLAGS) $(memcheck_arm_linux_CFLAGS) $(CFLAGS) -MT memcheck_arm_linux-mc_errors.obj -MD -MP -MF $(DEPDIR)/memcheck_arm_linux-mc_errors.Tpo -c -o memcheck_arm_linux-mc_errors.obj `if test -f 'mc_errors.c'; then $(CYGPATH_W) 'mc_errors.c'; else $(CYGPATH_W) '$(srcdir)/mc_errors.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/memcheck_arm_linux-mc_errors.Tpo $(DEPDIR)/memcheck_arm_linux-mc_errors.Po
#	$(AM_V_CC)source='mc_errors.c' object='memcheck_arm_linux-mc_errors.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(memcheck_arm_linux_CPPFLAGS) $(CPPFLAGS) $(memcheck_arm_linux_CFLAGS) $(CFLAGS) -c -o memcheck_arm_linux-mc_errors.obj `if test -f 'mc_errors.c'; then $(CYGPATH_W) 'mc_errors.c'; else $(CYGPATH_W) '$(srcdir)/mc_errors.c'; fi`

memcheck__linux-mc_leakcheck.o: mc_leakcheck.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(memcheck__linux_CPPFLAGS) $(CPPFLAGS) $(memcheck__linux_CFLAGS) $(CFLAGS) -MT memcheck__linux-mc_leakcheck.o -MD -MP -MF $(DEPDIR)/memcheck__linux-mc_leakcheck.Tpo -c -o memcheck__linux-mc_leakcheck.o `test -f 'mc_leakcheck.c' || echo '$(srcdir)/'`mc_leakcheck.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/memcheck__linux-mc_leakcheck.Tpo $(DEPDIR)/memcheck__linux-mc_leakcheck.Po
#	$(AM_V_CC)source='mc_leakcheck.c' object='memcheck__linux-mc_leakcheck.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(memcheck__linux_CPPFLAGS) $(CPPFLAGS) $(memcheck__linux_CFLAGS) $(CFLAGS) -c -o memcheck__linux-mc_leakcheck.o `test -f 'mc_leakcheck.c' || echo '$(srcdir)/'`mc_leakcheck.c

memcheck__linux-mc_leakcheck.obj: mc_leakcheck.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(memcheck__linux_CPPFLAGS) $(CPPFLAGS) $(memcheck__linux_CFLAGS) $(CFLAGS) -MT memcheck__linux-mc_leakcheck.obj -MD -MP -MF $(DEPDIR)/memcheck__linux-mc_leakcheck.Tpo -c -o memcheck__linux-mc_leakcheck.obj `if test -f 'mc_leakcheck.c'; then $(CYGPATH_W) 'mc_leakcheck.c'; else $(CYGPATH_W) '$(srcdir)/mc_leakcheck.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/memcheck__linux-mc_leakcheck.Tpo $(DEPDIR)/memcheck__linux-mc_leakcheck.Po
#	$(AM_V_CC)source='mc_leakcheck.c' object='memcheck__linux-mc_leakcheck.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(memcheck__linux_CPPFLAGS) $(CPPFLAGS) $(memcheck__linux_CFLAGS) $(CFLAGS) -c -o memcheck__linux-mc_leakcheck.obj `if test -f 'mc_leakcheck.c'; then $(CYGPATH_W) 'mc_leakcheck.c'; else $(CYGPATH_W) '$(srcdir)/mc_leakcheck.c'; fi`

memcheck__linux-mc_malloc_wrappers.o: mc_malloc_wrappers.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(memcheck__linux_CPPFLAGS) $(CPPFLAGS) $(memcheck__linux_CFLAGS) $(CFLAGS) -MT memcheck__linux-mc_malloc_wrappers.o -MD -MP -MF $(DEPDIR)/memcheck__linux-mc_malloc_wrappers.Tpo -c -o memcheck__linux-mc_malloc_wrappers.o `test -f 'mc_malloc_wrappers.c' || echo '$(srcdir)/'`mc_malloc_wrappers.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/memcheck__linux-mc_malloc_wrappers.Tpo $(DEPDIR)/memcheck__linux-mc_malloc_wrappers.Po
#	$(AM_V_CC)source='mc_malloc_wrappers.c' object='memcheck__linux-mc_malloc_wrappers.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(memcheck__linux_CPPFLAGS) $(CPPFLAGS) $(memcheck__linux_CFLAGS) $(CFLAGS) -c -o memcheck__linux-mc_malloc_wrappers.o `test -f 'mc_malloc_wrappers.c' || echo '$(srcdir)/'`mc_malloc_wrappers.c

memcheck__linux-mc_malloc_wrappers.obj: mc_malloc_wrappers.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(memcheck__linux_CPPFLAGS) $(CPPFLAGS) $(memcheck__linux_CFLAGS) $(CFLAGS) -MT memcheck__linux-mc_malloc_wrappers.obj -MD -MP -MF $(DEPDIR)/memcheck__linux-mc_malloc_wrappers.Tpo -c -o memcheck__linux-mc_malloc_wrappers.obj `if test -f 'mc_malloc_wrappers.c'; then $(CYGPATH_W) 'mc_malloc_wrappers.c'; else $(CYGPATH_W) '$(srcdir)/mc_malloc_wrappers.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/memcheck__linux-mc_malloc_wrappers.Tpo $(DEPDIR)/memcheck__linux-mc_malloc_wrappers.Po
#	$(AM_V_CC)source='mc_malloc_wrappers.c' object='memcheck__linux-mc_malloc_wrappers.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(memcheck__linux_CPPFLAGS) $(CPPFLAGS) $(memcheck__linux_CFLAGS) $(CFLAGS) -c -o memcheck__linux-mc_malloc_wrappers.obj `if test -f 'mc_malloc_wrappers.c'; then $(CYGPATH_W) 'mc_malloc_wrappers.c'; else $(CYGPATH_W) '$(srcdir)/mc_malloc_wrappers.c'; fi`

memcheck__linux-mc_main.o: mc_main.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(memcheck__linux_CPPFLAGS) $(CPPFLAGS) $(memcheck__linux_CFLAGS) $(CFLAGS) -MT memcheck__linux-mc_main.o -MD -MP -MF $(DEPDIR)/memcheck__linux-mc_main.Tpo -c -o memcheck__linux-mc_main.o `test -f 'mc_main.c' || echo '$(srcdir)/'`mc_main.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/memcheck__linux-mc_main.Tpo $(DEPDIR)/memcheck__linux-mc_main.Po
#	$(AM_V_CC)source='mc_main.c' object='memcheck__linux-mc_main.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(memcheck__linux_CPPFLAGS) $(CPPFLAGS) $(memcheck__linux_CFLAGS) $(CFLAGS) -c -o memcheck__linux-mc_main.o `test -f 'mc_main.c' || echo '$(srcdir)/'`mc_main.c

memcheck__linux-mc_main.obj: mc_main.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(memcheck__linux_CPPFLAGS) $(CPPFLAGS) $(memcheck__linux_CFLAGS) $(CFLAGS) -MT memcheck__linux-mc_main.obj -MD -MP -MF $(DEPDIR)/memcheck__linux-mc_main.Tpo -c -o memcheck__linux-mc_main.obj `if test -f 'mc_main.c'; then $(CYGPATH_W) 'mc_main.c'; else $(CYGPATH_W) '$(srcdir)/mc_main.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/memcheck__linux-mc_main.Tpo $(DEPDIR)/memcheck__linux-mc_main.Po
#	$(AM_V_CC)source='mc_main.c' object='memcheck__linux-mc_main.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(memcheck__linux_CPPFLAGS) $(CPPFLAGS) $(memcheck__linux_CFLAGS) $(CFLAGS) -c -o memcheck__linux-mc_main.obj `if test -f 'mc_main.c'; then $(CYGPATH_W) 'mc_main.c'; else $(CYGPATH_W) '$(srcdir)/mc_main.c'; fi`

memcheck__linux-mc_translate.o: mc_translate.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(memcheck__linux_CPPFLAGS) $(CPPFLAGS) $(memcheck__linux_CFLAGS) $(CFLAGS) -MT memcheck__linux-mc_translate.o -MD -MP -MF $(DEPDIR)/memcheck__linux-mc_translate.Tpo -c -o memcheck__linux-mc_translate.o `test -f 'mc_translate.c' || echo '$(srcdir)/'`mc_translate.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/memcheck__linux-mc_translate.Tpo $(DEPDIR)/memcheck__linux-mc_translate.Po
#	$(AM_V_CC)source='mc_translate.c' object='memcheck__linux-mc_translate.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(memcheck__linux_CPPFLAGS) $(CPPFLAGS) $(memcheck__linux_CFLAGS) $(CFLAGS) -c -o memcheck__linux-mc_translate.o `test -f 'mc_translate.c' || echo '$(srcdir)/'`mc_translate.c

memcheck__linux-mc_translate.obj: mc_translate.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(memcheck__linux_CPPFLAGS) $(CPPFLAGS) $(memcheck__linux_CFLAGS) $(CFLAGS) -MT memcheck__linux-mc_translate.obj -MD -MP -MF $(DEPDIR)/memcheck__linux-mc_translate.Tpo -c -o memcheck__linux-mc_translate.obj `if test -f 'mc_translate.c'; then $(CYGPATH_W) 'mc_translate.c'; else $(CYGPATH_W) '$(srcdir)/mc_translate.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/memcheck__linux-mc_translate.Tpo $(DEPDIR)/memcheck__linux-mc_translate.Po
#	$(AM_V_CC)source='mc_translate.c' object='memcheck__linux-mc_translate.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(memcheck__linux_CPPFLAGS) $(CPPFLAGS) $(memcheck__linux_CFLAGS) $(CFLAGS) -c -o memcheck__linux-mc_translate.obj `if test -f 'mc_translate.c'; then $(CYGPATH_W) 'mc_translate.c'; else $(CYGPATH_W) '$(srcdir)/mc_translate.c'; fi`

memcheck__linux-mc_machine.o: mc_machine.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(memcheck__linux_CPPFLAGS) $(CPPFLAGS) $(memcheck__linux_CFLAGS) $(CFLAGS) -MT memcheck__linux-mc_machine.o -MD -MP -MF $(DEPDIR)/memcheck__linux-mc_machine.Tpo -c -o memcheck__linux-mc_machine.o `test -f 'mc_machine.c' || echo '$(srcdir)/'`mc_machine.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/memcheck__linux-mc_machine.Tpo $(DEPDIR)/memcheck__linux-mc_machine.Po
#	$(AM_V_CC)source='mc_machine.c' object='memcheck__linux-mc_machine.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(memcheck__linux_CPPFLAGS) $(CPPFLAGS) $(memcheck__linux_CFLAGS) $(CFLAGS) -c -o memcheck__linux-mc_machine.o `test -f 'mc_machine.c' || echo '$(srcdir)/'`mc_machine.c

memcheck__linux-mc_machine.obj: mc_machine.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(memcheck__linux_CPPFLAGS) $(CPPFLAGS) $(memcheck__linux_CFLAGS) $(CFLAGS) -MT memcheck__linux-mc_machine.obj -MD -MP -MF $(DEPDIR)/memcheck__linux-mc_machine.Tpo -c -o memcheck__linux-mc_machine.obj `if test -f 'mc_machine.c'; then $(CYGPATH_W) 'mc_machine.c'; else $(CYGPATH_W) '$(srcdir)/mc_machine.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/memcheck__linux-mc_machine.Tpo $(DEPDIR)/memcheck__linux-mc_machine.Po
#	$(AM_V_CC)source='mc_machine.c' object='memcheck__linux-mc_machine.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(memcheck__linux_CPPFLAGS) $(CPPFLAGS) $(memcheck__linux_CFLAGS) $(CFLAGS) -c -o memcheck__linux-mc_machine.obj `if test -f 'mc_machine.c'; then $(CYGPATH_W) 'mc_machine.c'; else $(CYGPATH_W) '$(srcdir)/mc_machine.c'; fi`

memcheck__linux-mc_errors.o: mc_errors.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(memcheck__linux_CPPFLAGS) $(CPPFLAGS) $(memcheck__linux_CFLAGS) $(CFLAGS) -MT memcheck__linux-mc_errors.o -MD -MP -MF $(DEPDIR)/memcheck__linux-mc_errors.Tpo -c -o memcheck__linux-mc_errors.o `test -f 'mc_errors.c' || echo '$(srcdir)/'`mc_errors.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/memcheck__linux-mc_errors.Tpo $(DEPDIR)/memcheck__linux-mc_errors.Po
#	$(AM_V_CC)source='mc_errors.c' object='memcheck__linux-mc_errors.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(memcheck__linux_CPPFLAGS) $(CPPFLAGS) $(memcheck__linux_CFLAGS) $(CFLAGS) -c -o memcheck__linux-mc_errors.o `test -f 'mc_errors.c' || echo '$(srcdir)/'`mc_errors.c

memcheck__linux-mc_errors.obj: mc_errors.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(memcheck__linux_CPPFLAGS) $(CPPFLAGS) $(memcheck__linux_CFLAGS) $(CFLAGS) -MT memcheck__linux-mc_errors.obj -MD -MP -MF $(DEPDIR)/memcheck__linux-mc_errors.Tpo -c -o memcheck__linux-mc_errors.obj `if test -f 'mc_errors.c'; then $(CYGPATH_W) 'mc_errors.c'; else $(CYGPATH_W) '$(srcdir)/mc_errors.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/memcheck__linux-mc_errors.Tpo $(DEPDIR)/memcheck__linux-mc_errors.Po
#	$(AM_V_CC)source='mc_errors.c' object='memcheck__linux-mc_errors.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(memcheck__linux_CPPFLAGS) $(CPPFLAGS) $(memcheck__linux_CFLAGS) $(CFLAGS) -c -o memcheck__linux-mc_errors.obj `if test -f 'mc_errors.c'; then $(CYGPATH_W) 'mc_errors.c'; else $(CYGPATH_W) '$(srcdir)/mc_errors.c'; fi`

vgpreload_memcheck_arm_linux_so-mc_replace_strmem.o: mc_replace_strmem.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vgpreload_memcheck_arm_linux_so_CPPFLAGS) $(CPPFLAGS) $(vgpreload_memcheck_arm_linux_so_CFLAGS) $(CFLAGS) -MT vgpreload_memcheck_arm_linux_so-mc_replace_strmem.o -MD -MP -MF $(DEPDIR)/vgpreload_memcheck_arm_linux_so-mc_replace_strmem.Tpo -c -o vgpreload_memcheck_arm_linux_so-mc_replace_strmem.o `test -f 'mc_replace_strmem.c' || echo '$(srcdir)/'`mc_replace_strmem.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/vgpreload_memcheck_arm_linux_so-mc_replace_strmem.Tpo $(DEPDIR)/vgpreload_memcheck_arm_linux_so-mc_replace_strmem.Po
#	$(AM_V_CC)source='mc_replace_strmem.c' object='vgpreload_memcheck_arm_linux_so-mc_replace_strmem.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vgpreload_memcheck_arm_linux_so_CPPFLAGS) $(CPPFLAGS) $(vgpreload_memcheck_arm_linux_so_CFLAGS) $(CFLAGS) -c -o vgpreload_memcheck_arm_linux_so-mc_replace_strmem.o `test -f 'mc_replace_strmem.c' || echo '$(srcdir)/'`mc_replace_strmem.c

vgpreload_memcheck_arm_linux_so-mc_replace_strmem.obj: mc_replace_strmem.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vgpreload_memcheck_arm_linux_so_CPPFLAGS) $(CPPFLAGS) $(vgpreload_memcheck_arm_linux_so_CFLAGS) $(CFLAGS) -MT vgpreload_memcheck_arm_linux_so-mc_replace_strmem.obj -MD -MP -MF $(DEPDIR)/vgpreload_memcheck_arm_linux_so-mc_replace_strmem.Tpo -c -o vgpreload_memcheck_arm_linux_so-mc_replace_strmem.obj `if test -f 'mc_replace_strmem.c'; then $(CYGPATH_W) 'mc_replace_strmem.c'; else $(CYGPATH_W) '$(srcdir)/mc_replace_strmem.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/vgpreload_memcheck_arm_linux_so-mc_replace_strmem.Tpo $(DEPDIR)/vgpreload_memcheck_arm_linux_so-mc_replace_strmem.Po
#	$(AM_V_CC)source='mc_replace_strmem.c' object='vgpreload_memcheck_arm_linux_so-mc_replace_strmem.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vgpreload_memcheck_arm_linux_so_CPPFLAGS) $(CPPFLAGS) $(vgpreload_memcheck_arm_linux_so_CFLAGS) $(CFLAGS) -c -o vgpreload_memcheck_arm_linux_so-mc_replace_strmem.obj `if test -f 'mc_replace_strmem.c'; then $(CYGPATH_W) 'mc_replace_strmem.c'; else $(CYGPATH_W) '$(srcdir)/mc_replace_strmem.c'; fi`

vgpreload_memcheck__linux_so-mc_replace_strmem.o: mc_replace_strmem.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vgpreload_memcheck__linux_so_CPPFLAGS) $(CPPFLAGS) $(vgpreload_memcheck__linux_so_CFLAGS) $(CFLAGS) -MT vgpreload_memcheck__linux_so-mc_replace_strmem.o -MD -MP -MF $(DEPDIR)/vgpreload_memcheck__linux_so-mc_replace_strmem.Tpo -c -o vgpreload_memcheck__linux_so-mc_replace_strmem.o `test -f 'mc_replace_strmem.c' || echo '$(srcdir)/'`mc_replace_strmem.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/vgpreload_memcheck__linux_so-mc_replace_strmem.Tpo $(DEPDIR)/vgpreload_memcheck__linux_so-mc_replace_strmem.Po
#	$(AM_V_CC)source='mc_replace_strmem.c' object='vgpreload_memcheck__linux_so-mc_replace_strmem.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vgpreload_memcheck__linux_so_CPPFLAGS) $(CPPFLAGS) $(vgpreload_memcheck__linux_so_CFLAGS) $(CFLAGS) -c -o vgpreload_memcheck__linux_so-mc_replace_strmem.o `test -f 'mc_replace_strmem.c' || echo '$(srcdir)/'`mc_replace_strmem.c

vgpreload_memcheck__linux_so-mc_replace_strmem.obj: mc_replace_strmem.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vgpreload_memcheck__linux_so_CPPFLAGS) $(CPPFLAGS) $(vgpreload_memcheck__linux_so_CFLAGS) $(CFLAGS) -MT vgpreload_memcheck__linux_so-mc_replace_strmem.obj -MD -MP -MF $(DEPDIR)/vgpreload_memcheck__linux_so-mc_replace_strmem.Tpo -c -o vgpreload_memcheck__linux_so-mc_replace_strmem.obj `if test -f 'mc_replace_strmem.c'; then $(CYGPATH_W) 'mc_replace_strmem.c'; else $(CYGPATH_W) '$(srcdir)/mc_replace_strmem.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/vgpreload_memcheck__linux_so-mc_replace_strmem.Tpo $(DEPDIR)/vgpreload_memcheck__linux_so-mc_replace_strmem.Po
#	$(AM_V_CC)source='mc_replace_strmem.c' object='vgpreload_memcheck__linux_so-mc_replace_strmem.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vgpreload_memcheck__linux_so_CPPFLAGS) $(CPPFLAGS) $(vgpreload_memcheck__linux_so_CFLAGS) $(CFLAGS) -c -o vgpreload_memcheck__linux_so-mc_replace_strmem.obj `if test -f 'mc_replace_strmem.c'; then $(CYGPATH_W) 'mc_replace_strmem.c'; else $(CYGPATH_W) '$(srcdir)/mc_replace_strmem.c'; fi`
install-pkgincludeHEADERS: $(pkginclude_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(pkginclude_HEADERS)'; test -n "$(pkgincludedir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(pkgincludedir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(pkgincludedir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(pkgincludedir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(pkgincludedir)" || exit $$?; \
	done

uninstall-pkgincludeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(pkginclude_HEADERS)'; test -n "$(pkgincludedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(pkgincludedir)'; $(am__uninstall_files_from_dir)

# This directory's subdirectories are mostly independent; you can cd
# into them and run 'make' without going through this Makefile.
# To change the values of 'make' variables: instead of editing Makefiles,
# (1) if the variable is set in 'config.status', edit 'config.status'
#     (which will cause the Makefiles to be regenerated when you run 'make');
# (2) otherwise, pass the desired values on the 'make' command line.
$(am__recursive_targets):
	@fail=; \
	if $(am__make_keepgoing); then \
	  failcom='fail=yes'; \
	else \
	  failcom='exit 1'; \
	fi; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-recursive
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      set "$$@" "$$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-recursive

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-recursive

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    $(am__make_dryrun) \
	      || test -d "$(distdir)/$$subdir" \
	      || $(MKDIR_P) "$(distdir)/$$subdir" \
	      || exit 1; \
	    dir1=$$subdir; dir2="$(distdir)/$$subdir"; \
	    $(am__relativize); \
	    new_distdir=$$reldir; \
	    dir1=$$subdir; dir2="$(top_distdir)"; \
	    $(am__relativize); \
	    new_top_distdir=$$reldir; \
	    echo " (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) top_distdir="$$new_top_distdir" distdir="$$new_distdir" \\"; \
	    echo "     am__remove_distdir=: am__skip_length_check=: am__skip_mode_fix=: distdir)"; \
	    ($(am__cd) $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$new_top_distdir" \
	        distdir="$$new_distdir" \
		am__remove_distdir=: \
		am__skip_length_check=: \
		am__skip_mode_fix=: \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-recursive
all-am: Makefile $(PROGRAMS) $(HEADERS) all-local
installdirs: installdirs-recursive
installdirs-am:
	for dir in "$(DESTDIR)$(pkgincludedir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-recursive

clean-am: clean-generic clean-local clean-noinstPROGRAMS \
	mostlyclean-am

distclean: distclean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

html-am:

info: info-recursive

info-am:

install-data-am: install-pkgincludeHEADERS

install-dvi: install-dvi-recursive

install-dvi-am:

install-exec-am: install-exec-local

install-html: install-html-recursive

install-html-am:

install-info: install-info-recursive

install-info-am:

install-man:

install-pdf: install-pdf-recursive

install-pdf-am:

install-ps: install-ps-recursive

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am: uninstall-local uninstall-pkgincludeHEADERS

.MAKE: $(am__recursive_targets) install-am install-strip

.PHONY: $(am__recursive_targets) CTAGS GTAGS TAGS all all-am all-local \
	check check-am clean clean-generic clean-local \
	clean-noinstPROGRAMS cscopelist-am ctags ctags-am distclean \
	distclean-compile distclean-generic distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-exec-local install-html \
	install-html-am install-info install-info-am install-man \
	install-pdf install-pdf-am install-pkgincludeHEADERS \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs installdirs-am maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic pdf pdf-am ps ps-am tags tags-am uninstall \
	uninstall-am uninstall-local uninstall-pkgincludeHEADERS


# This used to be required when Vex had a handwritten Makefile.  It
# shouldn't be needed any more, though.

#----------------------------------------------------------------------------
# noinst_PROGRAMS and noinst_DSYMS targets
#----------------------------------------------------------------------------

# On Darwin, for a program 'p', the DWARF debug info is stored in the
# directory 'p.dSYM'.  This must be generated after the executable is
# created, with 'dsymutil p'.  We could redefine LINK with a script that
# executes 'dsymutil' after linking, but that's a pain.  Instead we use this
# hook so that every time "make check" is run, we subsequently invoke
# 'dsymutil' on all the executables that lack a .dSYM directory, or that are
# newer than their corresponding .dSYM directory.
build-noinst_DSYMS: $(noinst_DSYMS)
	for f in $(noinst_DSYMS); do \
	  if [ ! -e $$f.dSYM  -o  $$f -nt $$f.dSYM ] ; then \
	      echo "dsymutil $$f"; \
	      dsymutil $$f; \
	  fi; \
	done

# This is used by coregrind/Makefile.am and Makefile.tool.am for doing
# "in-place" installs.  It copies $(noinst_PROGRAMS) into $inplacedir.
# It needs to be depended on by an 'all-local' rule.
inplace-noinst_PROGRAMS: $(noinst_PROGRAMS)
	mkdir -p $(inplacedir); \
	for f in $(noinst_PROGRAMS) ; do \
	  rm -f $(inplacedir)/$$f; \
	  ln -f -s ../$(subdir)/$$f $(inplacedir); \
	done

# Similar to inplace-noinst_PROGRAMS
inplace-noinst_DSYMS: build-noinst_DSYMS
	mkdir -p $(inplacedir); \
	for f in $(noinst_DSYMS); do \
	  rm -f $(inplacedir)/$$f.dSYM; \
	  ln -f -s ../$(subdir)/$$f.dSYM $(inplacedir); \
	done

# This is used by coregrind/Makefile.am and by <tool>/Makefile.am for doing
# "make install".  It copies $(noinst_PROGRAMS) into $prefix/lib/valgrind/.
# It needs to be depended on by an 'install-exec-local' rule.
install-noinst_PROGRAMS: $(noinst_PROGRAMS)
	$(mkinstalldirs) $(DESTDIR)$(pkglibdir); \
	for f in $(noinst_PROGRAMS); do \
	  $(INSTALL_PROGRAM) $$f $(DESTDIR)$(pkglibdir); \
	done

# This is used by coregrind/Makefile.am and by <tool>/Makefile.am for doing
# "make uninstall".  It removes $(noinst_PROGRAMS) from $prefix/lib/valgrind/.
# It needs to be depended on by an 'uninstall-local' rule.
uninstall-noinst_PROGRAMS:
	for f in $(noinst_PROGRAMS); do \
	  rm -f $(DESTDIR)$(pkglibdir)/$$f; \
	done

# Similar to install-noinst_PROGRAMS.
# Nb: we don't use $(INSTALL_PROGRAM) here because it doesn't work with
# directories.  XXX: not sure whether the resulting permissions will be
# correct when using 'cp -R'...
install-noinst_DSYMS: build-noinst_DSYMS
	$(mkinstalldirs) $(DESTDIR)$(pkglibdir); \
	for f in $(noinst_DSYMS); do \
	  cp -R $$f.dSYM $(DESTDIR)$(pkglibdir); \
	done

# Similar to uninstall-noinst_PROGRAMS.
uninstall-noinst_DSYMS:
	for f in $(noinst_DSYMS); do \
	  rm -f $(DESTDIR)$(pkglibdir)/$$f.dSYM; \
	done

# This needs to be depended on by a 'clean-local' rule.
clean-noinst_DSYMS:
	for f in $(noinst_DSYMS); do \
	  rm -rf $$f.dSYM; \
	done

#----------------------------------------------------------------------------
# General stuff
#----------------------------------------------------------------------------

all-local: inplace-noinst_PROGRAMS inplace-noinst_DSYMS

clean-local: clean-noinst_DSYMS

install-exec-local: install-noinst_PROGRAMS install-noinst_DSYMS

uninstall-local: uninstall-noinst_PROGRAMS uninstall-noinst_DSYMS

# mc_main.c contains the helper function for memcheck that get called
# all the time. To maximise performance compile with -fomit-frame-pointer
# Primary beneficiary is x86.
mc_main.o: CFLAGS += -fomit-frame-pointer

# mc_replace_strmem.c runs on the simulated CPU, and it often appears
# in stack traces shown to the user.  It is built with
# -fno-omit-frame-pointer so as to guarantee robust backtraces on x86,
# on which CFI based unwinding is not the "normal" case and so is
# sometimes fragile.
mc_replace_strmem.o: CFLAGS += -fno-omit-frame-pointer

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
